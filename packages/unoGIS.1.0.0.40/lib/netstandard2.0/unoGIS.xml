<?xml version="1.0"?>
<doc>
    <assembly>
        <name>unoGIS</name>
    </assembly>
    <members>
        <member name="T:unoGIS.Commands.Command">
            <summary>
            Clase base de un comando unoGIS
            </summary>
        </member>
        <member name="P:unoGIS.Commands.Command.ActiveSpatial">
            <summary>
            Contexto espacial activo
            </summary>
        </member>
        <member name="P:unoGIS.Commands.Command.ActiveEntitySet">
            <summary>
            EntitySet activa
            </summary>
        </member>
        <member name="M:unoGIS.Commands.Command.OnExecute">
            <summary>
            Notificación de ejecución del comando
            </summary>
        </member>
        <member name="M:unoGIS.Commands.Command.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.Commands.Command.OnShutdown">
            <summary>
            Tiene lugar cuando se finaliza el comando
            </summary>
        </member>
        <member name="T:unoGIS.Commands.CommandInfoAttribute">
            <summary>
            Atributo que describe información general de un comando
            </summary>
        </member>
        <member name="P:unoGIS.Commands.CommandInfoAttribute.Name">
            <summary>
            Nombre del comando
            </summary>
        </member>
        <member name="P:unoGIS.Commands.CommandInfoAttribute.Tooltip">
            <summary>
            Texto de ayuda
            </summary>
        </member>
        <member name="P:unoGIS.Commands.CommandInfoAttribute.CmdType">
            <summary>
            Type del comando
            </summary>
        </member>
        <member name="F:unoGIS.Commands.CommandInfoAttribute.Browsable">
            <summary>
            Indica si el comando es visible en una Interfaz de Usuario
            </summary>
        </member>
        <member name="M:unoGIS.Commands.CommandInfoAttribute.CanExecute">
            <summary>
            Indica si el comando puede ser ejecutado.
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Commands.CommandManager">
            <summary>
            Manager de comandos
            </summary>
        </member>
        <member name="P:unoGIS.Commands.CommandManager.CommandsBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Commands.CommandManager.ActiveTool">
            <summary>
            Comando interactivo actualmente en ejecución
            </summary>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.#ctor(unoGIS.unoGISContext)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="E:unoGIS.Commands.CommandManager.PropertyChanged">
            <summary>
            Evento Propertychanged
            </summary>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="E:unoGIS.Commands.CommandManager.ToolStart">
            <summary>
            Evento ToolStart para registrar el inicio de una herramienta
            </summary>
        </member>
        <member name="E:unoGIS.Commands.CommandManager.ToolFinish">
            <summary>
            Evento ToolFinish para registrar el cierre de una herramienta
            </summary>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.DiscoverAndRegisterCommands(System.String)">
            <summary>
            Carga los comandos disonibles en la carpeta facilitada
            </summary>
            <param name="searchPath">Carpeta donde se hará la búsqueda de DLLs que contienen comandos para su carga</param>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.DiscoverAndRegisterCommands(System.Reflection.Assembly)">
            <summary>
            Carga los comandos disponibles en el assembly facilitado
            </summary>
            <param name="assembly">Assembly que contiene los comandos a cargar</param>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.CreateForm(unoGIS.Commands.Command)">
            <summary>
            Devuelve una instancia del formulario asociado al tipo de comando.
            Si no existe un formulario asociado, se devuelve null.
            </summary>
            <param name="cmdOwner"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Commands.CommandManager.CommandsAvailable">
            <summary>
            Devueve la colección de comandos disponibles
            </summary>
        </member>
        <member name="P:unoGIS.Commands.CommandManager.BatchProcesses">
            <summary>
            Diccionario con los comandos Batch
            </summary>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.Clear">
            <summary>
            Quita todos los comandos disponibles
            </summary>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.GetInfo(System.Type)">
            <summary>
            Retorna la información base de un comando
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.Execute(System.String)">
            <summary>
            Ejecuta un comando en base a su representación alfanumérica
            </summary>
            <param name="commandStr">Comando representado por una cadena de caracteres. Puede incluir los parámetros y sus valores mediante el caracter '='</param>
        </member>
        <member name="P:unoGIS.Commands.CommandManager.ShutDownDisable">
            <summary>
            En el constructor de un comando, se puede activar este flag para que no se invoque el método OnShutDown del ActiveTool
            </summary>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.CreateInstance(System.Type)">
            <summary>
            Crea una instancia de un comando.
            Si el comando ya ha sido creado y se encuentra en background, se devuelve la instancia background.
            Este método crea la instancia (llama al constructor), pero no invoca la secuencia OnExecute/OnShutdown.
            </summary>
            <param name="cmdType"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.RestoreTool(unoGIS.Commands.Tool,unoGIS.Commands.RestoreActiveMode)">
            <summary>
            Restaura una Tool como herramienta activa sin necesidad de volver a crearla o ejecutarla.        
            </summary>
            <param name="restoreTool">Herramienta a restaurar.</param>
            /// <param name="activeMode">Parametros para resturar el activeLocate de la herramienta.</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.PutInBackground(unoGIS.Commands.Command)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.Shutdown(unoGIS.Commands.Command)">
            <summary>
            Finaliza un comando.
            Si el comando es el ActiveTool, se finaliza y ninguna herramienta estará áctiva.
            Si el comando esta en background, se finaliza y se quita de la colección de comandos en background.
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.GetCommandTypeFromName(System.String)">
            <summary>
            Retorna el tipo instanciable de un comando en base a su nombre
            </summary>
            <param name="cmdName"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.ParseRawCommand(System.String)">
            <summary>
            Analiza la representación en formato cadena de caracteres de un comando
            </summary>
            <param name="source">Representación del comando incluyendo parámetros, si los hubiere</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.ConfigureCommand(unoGIS.Commands.Command,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)">
            <summary>
            Configura los parámetros de entrada de un comando
            </summary>
            <param name="cmd">Instancia del comando</param>
            <param name="cmdArgs">Argumentos del comando</param>
            <param name="rawArgs">Cadena original con los argumentos del comando</param>
        </member>
        <member name="M:unoGIS.Commands.CommandManager.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Commands.ToolLogArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Commands.ToolLogArgs.ToolType">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Commands.ToolLogArgs.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="toolType"></param>
        </member>
        <member name="T:unoGIS.Commands.RestoreActiveMode">
            <summary>
            Guarda los parametros del activeLocate del visor para restaurar una herramienta sin necesidad de volver a ejecutarla
            </summary>
        </member>
        <member name="P:unoGIS.Commands.RestoreActiveMode.Mode">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Commands.RestoreActiveMode.ConfirmLocation">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Commands.RestoreActiveMode.FilterTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Commands.RestoreActiveMode.FilterEntities">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Commands.RestoreActiveMode.#ctor(unoGIS.Viewer.LocateMode,System.Boolean,unoGIS.Entities.GeometryEnumType[],unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}[])">
            <summary>
            
            </summary>
            <param name="mode"></param>
            <param name="confirmLocation"></param>
            <param name="filterTypes"></param>
            <param name="filterEntities"></param>
        </member>
        <member name="T:unoGIS.Commands.ToolLogHandled">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:unoGIS.Commands.ICommandForm">
            <summary>
            Interfaz que deben implementar los formularios de los comandos.
            Esta interfaz es independiente de la tecnología que se emplea en la capa de presentación.
            </summary>
        </member>
        <member name="T:unoGIS.Commands.DialogResult">
            <summary>
            Versión para Mobile
            </summary>
        </member>
        <member name="T:unoGIS.Commands.Tool">
            <summary>
            Clase base para comandos que requieren interacción con el usuario
            </summary>
        </member>
        <member name="M:unoGIS.Commands.Tool.SetCoordinateSystem(unoGIS.Commands.CoordinateSystemCfg)">
            <summary>
            Se define el sistema de coordenadas en el que se desea que se notifiquen las coordenadas generadas desde un IViewer.
            </summary>
            <param name="cs">Sistema de coordenadas.</param>
        </member>
        <member name="M:unoGIS.Commands.Tool.OnViewerViewChanged(unoGIS.Viewer.IViewer,unoGIS.Entities.Coordinate)">
            <summary>
            Notifica cambio de visualización del visor
            </summary>
            <param name="viewer"></param>
            <param name="coordinate"></param>
        </member>
        <member name="M:unoGIS.Commands.Tool.OnViewerLocate(unoGIS.Viewer.IViewer,unoGIS.Viewer.LocateEventArgs)">
            <summary>
            Notifica la localización de una entidad.
            </summary>
            <param name="viewer"></param>
            <param name="located"></param>
        </member>
        <member name="M:unoGIS.Commands.Tool.OnViewerSnap(unoGIS.Viewer.IViewer,unoGIS.Entities.Coordinate)">
            <summary>
            Notifica operación Snap del visor
            </summary>
            <param name="viewer"></param>
            <param name="coordinate"></param>
        </member>
        <member name="M:unoGIS.Commands.Tool.OnViewerReset(unoGIS.Viewer.IViewer,unoGIS.Entities.Coordinate)">
            <summary>
            Notifica operación Reset del visor
            </summary>
            <param name="viewer"></param>
            <param name="coordinate"></param>
        </member>
        <member name="M:unoGIS.Commands.Tool.OnViewerDataSourceChanged(System.Object,System.EventArgs)">
            <summary>
            Notifica cambio en el origen de datos del visor
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:unoGIS.Commands.Tool.OnViewerData(unoGIS.Viewer.IViewer,unoGIS.Entities.Coordinate)">
            <summary>
            Notifica operación Data del visor
            </summary>
            <param name="viewer"></param>
            <param name="coordinate"></param>
        </member>
        <member name="M:unoGIS.Commands.Tool.OnViewerCursor(unoGIS.Viewer.IViewer,unoGIS.Entities.Coordinate)">
            <summary>
            Notifica operación Cursor del visor
            </summary>
            <param name="viewer"></param>
            <param name="coordinate"></param>
        </member>
        <member name="T:unoGIS.Commands.NonGeometryUndoRedoInfo">
            <summary>
            Implementación de Undo/Redo para entidades 'No Gráficas' (aquellas que no son Geometry)
            </summary>
        </member>
        <member name="T:unoGIS.Commands.EditUndoRedoInfo">
            <summary>
            Hereda de la interfaz IUndoRedoInfo para casos de Undo/Redo para edición de geometrias.
            </summary>
        </member>
        <member name="P:unoGIS.Commands.EditUndoRedoInfo.CommandType">
            <summary>
            Tipo del comando que lo ha instanciado
            </summary>
        </member>
        <member name="M:unoGIS.Commands.EditUndoRedoInfo.Redo(unoGIS.Commands.UndoRedoManager)">
            <summary>
            Rehace las ediciones
            </summary>
            <returns>Retorna false si falla, true en caso contrario.</returns>
        </member>
        <member name="M:unoGIS.Commands.EditUndoRedoInfo.Undo(unoGIS.Commands.UndoRedoManager)">
            <summary>
            Deshace las ediciones
            </summary>
            <returns>Retorna false si falla, true en caso contrario.</returns>
        </member>
        <member name="T:unoGIS.Commands.UndoRedoBlock">
            <summary>
            Hereda de la interfaz IUndoRedoInfo para indicar al manager de Undo/Redo que es el inicio o fin de un bloque
            </summary>
        </member>
        <member name="T:unoGIS.Commands.FenceUndoRedoInfo">
            <summary>
            Hereda de la interfaz IUndoRedoInfo para casos de Undo/Redo para edición de geometrias.
            </summary>
        </member>
        <member name="P:unoGIS.Commands.FenceUndoRedoInfo.CommandType">
            <summary>
            Tipo del comando que lo ha instanciado
            </summary>
        </member>
        <member name="M:unoGIS.Commands.FenceUndoRedoInfo.Undo(unoGIS.Commands.UndoRedoManager)">
            <summary>
            Deshace las ediciones
            </summary>
            <returns>Retorna false si falla, true en caso contrario.</returns>
        </member>
        <member name="M:unoGIS.Commands.FenceUndoRedoInfo.Redo(unoGIS.Commands.UndoRedoManager)">
            <summary>
            Rehace las ediciones
            </summary>
            <returns>Retorna false si falla, true en caso contrario.</returns>
        </member>
        <member name="T:unoGIS.Commands.UndoRedoManager">
            <summary>
            Manager para operaciones de Deshacer/Hacer
            </summary>
        </member>
        <member name="F:unoGIS.Commands.UndoRedoManager.Tail">
            <summary>
            Tail: Indice donde se añadio el ultimo elemento.
            Head: Indice donde se encuentra la cabeza de la lista con el elemento mas antiguo
            Index: Indice donde se encuentra la cabeza lectora
            </summary>
        </member>
        <member name="P:unoGIS.Commands.UndoRedoManager.Capacity">
            <summary>
            Capacidad máxima del buffer de elementos
            </summary>     
        </member>
        <member name="P:unoGIS.Commands.UndoRedoManager.isUndoRedoCommand">
            <summary>
            Indica si la operación de Undo/Redo a ejecutar proviene del comando de Undo/Redo
            </summary>
        </member>
        <member name="P:unoGIS.Commands.UndoRedoManager.CanUndo">
            <summary>
            Indica si se pueden realizar operaciones de Deshacer
            </summary>
        </member>
        <member name="P:unoGIS.Commands.UndoRedoManager.CanRedo">
            <summary>
            Indica si se pueden realizar operaciones de Rehacer
            </summary>
        </member>
        <member name="E:unoGIS.Commands.UndoRedoManager.PropertyChanged">
            <summary>
            Evento Propertychanged
            </summary>
        </member>
        <member name="M:unoGIS.Commands.UndoRedoManager.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:unoGIS.Commands.UndoRedoManager.Items">
            <summary>
            Retorna la lista de operaciones que se pueden deshacer
            </summary>
        </member>
        <member name="F:unoGIS.Commands.UndoRedoManager.block">
            <summary>
            Indica si se están añadiendo (push) operaciones agrupadas.
            Un grupo de operaciones viene definido entre dos UndoRedoBlock.
            </summary>
        </member>
        <member name="M:unoGIS.Commands.UndoRedoManager.Push(unoGIS.Commands.IUndoRedoInfo)">
            <summary>
            Añade una operación al historial de operaciones
            </summary>
            <param name="target">Instancia que implementa el patrón Undo/Redo. Debe tener al menos un constructor sin parámetros</param>
        </member>
        <member name="M:unoGIS.Commands.UndoRedoManager.Clear">
            <summary>
            Borra el historial de operaciones
            </summary>
        </member>
        <member name="M:unoGIS.Commands.UndoRedoManager.Undo">
            <summary>
            Deshace la última operación realizada
            </summary>
        </member>
        <member name="M:unoGIS.Commands.UndoRedoManager.UndoFrom(unoGIS.Commands.IUndoRedoInfo)">
            <summary>
            Deshace desde una operación
            </summary>
            <param name="target">Operación hasta la que se deshacen cambios</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Commands.UndoRedoManager.Redo">
            <summary>
            Rehace una operación
            </summary>
        </member>
        <member name="T:unoGIS.CoordinateSystems.CoordinateSystem">
            <summary>
            La clase CoordinateSystem define un sistema de coordenadas.
            </summary>
        </member>
        <member name="P:unoGIS.CoordinateSystems.CoordinateSystem.SRText">
            <summary>
            Propiedad de solo lectura que devuelve la configuración del sistema de coordenadas en una cadena WKT.
            </summary>        
        </member>
        <member name="P:unoGIS.CoordinateSystems.CoordinateSystem.GEOGCS">
            <summary>
            Nombre del sistema de coordenadas geográfico.
            </summary>
        </member>
        <member name="P:unoGIS.CoordinateSystems.CoordinateSystem.Datum">
            <summary>
            Datum del sistema de coordenadas.
            </summary>
        </member>
        <member name="P:unoGIS.CoordinateSystems.CoordinateSystem.Primem">
            <summary>
            Primer meridiano del sistema de coordenadas.
            </summary>
        </member>
        <member name="P:unoGIS.CoordinateSystems.CoordinateSystem.FactorUnit">
            <summary>
            Factor que se aplica a las componentes del sistema de coordenadas.
            </summary>
        </member>
        <member name="P:unoGIS.CoordinateSystems.CoordinateSystem.Projection">
            <summary>
            Proyección del sistema de coordenadas.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.#ctor(System.String)">
            <summary>
            Crea una nueva instancia de un sistema de coordenadas a partir de una cadena WKT.
            </summary>
            <param name="CoordinateSystemWKT"></param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.#ctor">
            <summary>
            Crea una nueva instancia de un sistema de coordenadas.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.#ctor(System.String,unoGIS.CoordinateSystems.Datum)">
            <summary>
            Crea una nueva instancia de un sistema de coordenadas con los parámetros especificados.
            </summary>
            <param name="datum"></param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.#ctor(System.String,unoGIS.CoordinateSystems.Datum,unoGIS.CoordinateSystems.Primem,unoGIS.CoordinateSystems.Unit)">
            <summary>
            Crea una nueva instancia de un sistema de coordenadas con los parámetros especificados.
            </summary>
            <param name="datum"></param>
            <param name="primem"></param>
            <param name="factorUnit"></param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.#ctor(System.String,unoGIS.CoordinateSystems.Datum,unoGIS.CoordinateSystems.Primem,unoGIS.CoordinateSystems.Unit,unoGIS.CoordinateSystems.Projection)">
            <summary>
            Crea una nueva instancia de un sistema de coordenadas con los parámetros especificados.
            </summary>
            <param name="datum"></param>
            <param name="primem"></param>
            <param name="factorUnit"></param>
            <param name="projection"></param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.FromString(System.String)">
            <summary>
            Crea un sistema de coordenadas a partir de su representación en una cadena WKT
            </summary>
            <param name="definition">Definición del sistema de coordenadas</param>
            <returns>Sistema de Coordenadas de Referencia</returns>
        </member>
        <member name="P:unoGIS.CoordinateSystems.CoordinateSystem.IsDefined">
            <summary>
            Indica si el actual sistema de coordenadas a sido definido.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.Equals(System.Object)">
            <summary>
            Comprueba si el actual sistema de coordenadas es igual a otro.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.GetHashCode">
            <summary>
            Genera una clave Hash para el actual sistema de coordenadas.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.Equals(unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            Comprueba si el actual sistema de coordenadas es igual a otro.
            </summary>
            <param name="cs"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.op_Equality(unoGIS.CoordinateSystems.CoordinateSystem,unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            Operador que comprueba si dos sistemas de coordenadas son iguales.
            </summary>
            <param name="csA"></param>
            <param name="csB"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.op_Inequality(unoGIS.CoordinateSystems.CoordinateSystem,unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            Operador que comprueba si dos sistemas de coordenadas son distintos.
            </summary>
            <param name="csA"></param>
            <param name="csB"></param>
            <returns></returns>
        </member>
        <member name="F:unoGIS.CoordinateSystems.CoordinateSystem.CoordinateSystemName">
            <summary>
            Nombre del sistema de coordenadas.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.ToString">
            <summary>
            Cadena de texto que identifica el actual sistema de coordenadas.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.ReadXml(System.Xml.XmlReader)">
            <summary>
            Configura el acutal sistema de coordenadas a partir de un XML.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escribe la configuración del actual sistema de coordenadas en un XML.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.ConfiguraFromWKT(System.String)">
            <summary>
            Configura el sistema de coordenadas actual a partir de una definición WKT.
            </summary>
            <param name="CoordinateSystemWKT"></param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.ConfigurarFromGEOGCSTag(unoGIS.CoordinateSystems.TagWKT)">
            <summary>
            Configura un sistema de coordenadas Geográfico a partir de una definición WKT.
            </summary>
            <param name="geogcsTag"></param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystem.Clone">
            <summary>
            Crea un nuevo objeto CoordinateSystem con los mismos valores que el actual.
            </summary>
            <returns>Copia del sistema de coordenadas.</returns>
        </member>
        <member name="F:unoGIS.CoordinateSystems.CoordinateSystem.Empty">
            <summary>
            Sistema de Coordenadas sin definir
            </summary>
        </member>
        <member name="P:unoGIS.CoordinateSystems.CoordinateSystem.CoordinateSystemsKnown">
            <summary>
            Conjunto de sistemas de coordenadas conocidos por la aplicación.
            </summary>
        </member>
        <member name="T:unoGIS.CoordinateSystems.CoordinateSystemsConverter">
            <summary>
            Clase para la conversión de coordenadas de un sistema de coordenadas origen a otro destino.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemsConverter.#ctor(unoGIS.CoordinateSystems.CoordinateSystem,unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            Inicializa un convertidor de sistema de coordenadas que no tiene en cuenta el cambio de sistema de coordenadas base.
            </summary>
            <param name="source">Sistema de coordenadas origen</param>
            <param name="target">Sistema de coordenads destino</param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemsConverter.setConverter(unoGIS.CoordinateSystems.GEOGCSTransformers.IGEOGCSTransformer[],unoGIS.CoordinateSystems.GEOGCSTransformers.IGEOGCSTransformer[])">
            <summary>
            Asigna el método de conversión adecuado al delegado que será invocado en el método Convert
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemsConverter.Convert(unoGIS.Entities.Coordinate)">
            <summary>
            Método que convierte una coordenada del sistema de coordenadas origen al destino.
            </summary>
            <param name="coord">Coordenada en el sistema de coordenadas origen.</param>
            <returns>Coordenada en el sistema de coordenadas destino.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemsConverter.Convert(System.Collections.Generic.IEnumerable{unoGIS.Entities.Coordinate})">
            <summary>
            Método que convierte una lista de coordenadas del sistema de coordenadas origen al destino.
            </summary>
            <param name="coordinates">Lista de coordenadas en el sistema de coordenadas origen.</param>
            <returns>Lista de coordenada en el sistema de coordenadas destino.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemsConverter.Convert(unoGIS.Entities.BoundingBox)">
            <summary>
            Método que convierte un BoundingBox del sistema de coordenadas origen al destino.
            </summary>
            <param name="box">BoundingBox a convertir.</param>
            <returns>BoundingBox convertido al sistema de coordenadas destino.</returns>
        </member>
        <member name="T:unoGIS.CoordinateSystems.CoordinateSystemUtils">
            <summary>
            Utilidades usada en los calculos en los sistema de coordenadas.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.StrToDouble(System.String)">
            <summary>
            Método para convertir un string a double
            </summary>
            <param name="n">string</param>
            <returns>double</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.SexagesimalToDegrees(System.Double,System.Double,System.Double)">
            <summary>
            Método para convertir grados sexagesimales a grados decimales.
            </summary>
            <param name="degree">Grados</param>
            <param name="min">Minutos</param>
            <param name="sec">Segundos</param>
            <returns>Grados decimales calculado.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.DegreesToSexagesimal(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Método para convertir grados decimales a grados sexagesimales.
            </summary>
            <param name="angle">Grados decimales</param>
            <param name="degree">Grados</param>
            <param name="min">Minutos</param>
            <param name="sec">Segundos</param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.RadiansToDegrees(System.Double)">
            <summary>
            Método para convertir un angulo de radianes a grados.
            </summary>
            <param name="angle">Angulo en radianes.</param>
            <returns>Angulo en grados</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.DegreesToRadians(System.Double)">
            <summary>
            Método para convertir un angulo de grados a radianes.
            </summary>
            <param name="angle">Angulo en grados.</param>
            <returns>Angulo en radianes.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.UTMZoneNumber(System.Double,System.Double)">
            <summary>
            Método para obtener el numero de zona UTM a partir de una coordenada.
            </summary>
            <param name="lat">Latitud en radianes.</param>
            <param name="lon">Longitud en radianes.</param>
            <returns>Numero de zona.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.CorrectUTMLongitude(System.Double)">
            <summary>
            Método para llevar un angulo en grados de longitud al rango [-pi..pi)
            </summary>
            <param name="lon">Angulo radianes</param>
            <returns>Angulo convertido.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.LongitudOriginFromZone(System.Int32)">
            <summary>
            Método para obtener la longitud de origen a partir del numero de zona UTM.
            </summary>
            <param name="zoneNumer">Numero de zona UTM.</param>
            <returns>Longitud de origen en radianes.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.DecimalDegreesToRadian(unoGIS.Entities.Coordinate)">
            <summary>
            Método para obtener una coordenada geográfica en grados sexagesimales a partir de una coordenada en radianes.
            </summary>
            <param name="coord">Coordenada en grados sexagesimales.</param>
            <returns>Retorna la coordenada expresada en radianes.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.FromSexadecimalDegreesToRadian(System.Int64,System.Int64,System.Double,System.Int64,System.Int64,System.Double,System.Double)">
            <summary>
            Método para obtener una posición geográfica a partir de la longitud latitud en grados hexadecimales.
            </summary>
            <param name="dlon">Grados de longitud</param>
            <param name="minlon">Minutos de longitud</param>
            <param name="seglon">Segundos de longitud</param>
            <param name="dlat">Grados de latitud</param>
            <param name="minlat">Minutos de latitud</param>
            <param name="seglat">Segundos de latitud</param>
            <param name="alt">altitud</param>
            <returns>Posición geográfica con la longitud y latitud en radianres.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.FromSecondsToSexagesimal(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Transforma r, dado en segundos, en grados, minutos y segundos    
            </summary>
            <param name="r">Segundos a transformar</param>
            <param name="gg">grados devueltos</param>
            <param name="mm">minutos devueltos</param>
            <param name="ss">segundos devueltos</param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.FromRadiansToSeconds(unoGIS.Entities.Coordinate)">
            <summary>
            Transforma en segundos una coordenada geográfica dada en radianes
            </summary>
            <param name="pos">Coordenada en radianes</param> 
            <returns>Posición geográfica con la longitud y latitud en segundos.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.CoordinateSystemUtils.FromSecondsToRadians(unoGIS.Entities.Coordinate)">
            <summary>
            Transforma latitud y longitud expresada en segundos, a radianes
            </summary>
            <param name="pos">Coordenada en segundos sexagesimales</param>              
            <returns>Posición geográfica con la longitud y latitud en radiantes.</returns>
        </member>
        <member name="T:unoGIS.CoordinateSystems.Datum">
            <summary>
            Clase que denife el Datum de un sistema de coordenadas.
            </summary>
        </member>
        <member name="T:unoGIS.CoordinateSystems.Ellipsoid">
            <summary>
            Clase interna para representar un elipsoide
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.Ellipsoid.#ctor(System.String,System.Double,System.Double)">
            <summary>
            Inicializa un elipsoide
            </summary>
            <param name="aa">Semieje mayor (radio ecuatorial)</param>
            <param name="bb">Semieje menor (radio polar)</param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.Ellipsoid.FromFlattening(System.String,System.Double,System.Double)">
            <summary>
            Crea un elipsoide a partir de a y f
            </summary>
            <param name="aa">Semieje mayor (radio ecuatorial)</param>
            <param name="ff">Falttening</param>
            <returns>Elipsoide</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.Ellipsoid.FromSquareEccentricity(System.String,System.Double,System.Double)">
            <summary>
            Crea un elipsoide a partir de a y e2
            </summary>
            <param name="aa">Semieje mayor (radio ecuatorial).</param>
            <param name="ee2">Excentricidad al cuadrado</param>
            <returns>Elipsoide</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.Ellipsoid.FromEccentricity(System.String,System.Double,System.Double)">
            <summary>
            Crea un elipsoide a partir de a y e
            </summary>
            <param name="aa">Semieje mayor (radio ecuatorial)</param>
            <param name="ee">Excentricidad</param>
            <returns>Elipsoide</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.Ellipsoid.Equals(unoGIS.CoordinateSystems.Ellipsoid)">
            <summary>
            Método para para ver si un elipsoide es ingual o no al current
            </summary>
            <param name="ellipsoid">Elipsoide a comparar</param>
            <returns>Resultado de la comparacion</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.Ellipsoid.GeographicToGeocentric(unoGIS.Entities.Coordinate)">
            <summary>
            Transforma una coordenada geográfica a geocentrica.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.Ellipsoid.GeocentricToGeographic(unoGIS.Entities.Coordinate)">
            <summary>
            Transforma una coordenada geocentrica a geográfica.
            </summary>     
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.AbridgedMolodenskyTransformer">
            <summary>
            Clase para la transformación de coordenadas geográficas usando el método AbridgedMolodensky
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.GEOGCSTransformers.AbridgedMolodenskyTransformer.#ctor(unoGIS.CoordinateSystems.Ellipsoid,unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="dx">Traslación geocéntrica en la X</param>
            <param name="dy">Traslación geocéntrica en la Y</param>
            <param name="dz">Traslación geocéntrica en la Z</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.CoordinateFrameRotationTransfomer">
            <summary>
            Clase para la transformación de coordenadas geográficas usando el método CoordinateFrameRotation
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.GEOGCSTransformers.CoordinateFrameRotationTransfomer.#ctor(unoGIS.CoordinateSystems.Ellipsoid,unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="dx">Delta X geocéntrico</param>
            <param name="dy">Delta Y geocéntrico</param>
            <param name="dz">Delta Z geocéntrico</param>
            <param name="rx">Grados en segundos de la rotación en el eje X</param>
            <param name="ry">Grados en segundos de la rotación en el eje Y</param>
            <param name="rz">Grados en segundos de la rotación en el eje Z</param>
            <param name="dS">Factor de escala expresado en partes por millón</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.GeocentricTranslationsTransformer">
            <summary>
            Clase para la transformación de coordenadas geográficas usando el método GeocentricTranslations
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.GEOGCSTransformers.GeocentricTranslationsTransformer.#ctor(unoGIS.CoordinateSystems.Ellipsoid,unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double)">
            <summary>
            Incializa una instancia de la clase.
            </summary>
            <param name="dx">Delta X geocéntrico</param>
            <param name="dy">Delta Y geocéntrico</param>
            <param name="dz">Delta Z geocéntrico</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.Geografic2DOffsetsTransformer">
            <summary>
            Clase para la transformación de coordenadas geográficas usando el método Geografic2DOffsets
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.GEOGCSTransformers.Geografic2DOffsetsTransformer.#ctor(System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="deltaLatitude">Delta Latitud</param>
            <param name="deltaLongitude">Delta Longitud</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.Geografic3DOffsetsTransformer">
            <summary>
            Clase para la transformación de coordenadas geográficas usando el método Geografic3DOffsets
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.GEOGCSTransformers.Geografic3DOffsetsTransformer.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="deltaLatitude">Delta Latitud</param>
            <param name="deltaLongitude">Delta Longitud</param>
            <param name="deltaAltitude">Delta Altitud</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.IGEOGCSTransformer">
            <summary>
            Interfaz que deben definir las clases que implementan una transformación de sistema de coordenadas.
            </summary>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType">
            <summary>
            Enumerativo para los métodos de operaciones entre sistemas de coordenadas geográficos.
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.Undefined">
            <summary>
            Indefinido
            </summary> 
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.None">
            <summary>
            No existe metodo de transformación. Es usado para cuando los datums de dos sistemas de coordenadas son iguales 
            por lo que no hace falta transformar las coordenadas. O cuando no se quiere transformar de un sistema a otro.
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.LongitudeRotation">
            <summary>
            Rotación de la longitud.
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.GeographicGeocentric">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.GeocentricTranslations">
            <summary>
            Parámetros: DeltaX, DeltaY, DeltaZ
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.PositionVector7Parameter">
            <summary>
            Parámetros: DeltaX, DeltaY, DeltaZ, Rx, Ry, Rz, Factor de Escala
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.CoordinateFrameRotation">
            <summary>
            Parámetros: DeltaX, DeltaY, DeltaZ, Rx, Ry, Rz, Factor de Escala
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.MolodenskyBadekas10Parameter">
            <summary>//TODO: Analizar el orden de los parámetros.
            Parámetros: DeltaX, DeltaY, DeltaZ, Rx, Ry, Rz, Xp, Yp, Zp, Factor de Escala
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.AbridgedMolodensky">
            <summary>
            Parámetros: DeltaX, DeltaY, DeltaZ
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.Geografic2DOffsets">
            <summary>
            Parámetros: DeltaLatitud, DeltaLongitud
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.Geografic3DOffsets">
            <summary>
            Parámetros: DeltaLatitud, DeltaLongitud, DeltaAltitud
            </summary>
        </member>
        <member name="F:unoGIS.CoordinateSystems.GEOGCSTransformers.GEOGCSTransformerType.NTv2">
            <summary>
            Parámetros: Ubicación del archivo que contiene la malla, Este Positivo (boolean)
            </summary>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.MolodenskyBadekas10ParameterTransformer">
            <summary>
            Clase para la transformación de coordenadas geográficas usando el método MolodenskyBadekas10Parameter
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.GEOGCSTransformers.MolodenskyBadekas10ParameterTransformer.#ctor(unoGIS.CoordinateSystems.Ellipsoid,unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="dx">Delta X geocéntrico</param>
            <param name="dy">Delta Y geocéntrico</param>
            <param name="dz">Delta Z geocéntrico</param>
            <param name="rx">Grados en segundos de la rotación en el eje X</param>
            <param name="ry">Grados en segundos de la rotación en el eje Y</param>
            <param name="rz">Grados en segundos de la rotación en el eje Z</param>
            <param name="dS">Factor de escala expresado en partes por millón</param>
            <param name="xp">X del punto desde donde se realiza la rotación</param>
            <param name="yp">Y del punto desde donde se realiza la rotación</param>
            <param name="zp">Z del punto desde donde se realiza la rotación</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.NonGeographicTransfomer">
            <summary>
            Transformador usado para el caso no este definido el metodo de transformación
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.GEOGCSTransformers.NonGeographicTransfomer.#ctor">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.NTv2Transformer">
            <summary>
            Clase para la transformación de coordenadas geográficas usando el método NTv2.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.GEOGCSTransformers.NTv2Transformer.#ctor(unoGIS.CoordinateSystems.GEOGCSTransformers.NTv2Grid,System.Boolean)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="gridFileName">Nombre del archivo con la información de la malla NTv2.</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.GEOGCSTransformers.PositionVector7ParametersTransformer">
            <summary>
            Clase para la transformación de coordenadas geográficas usando el método PositionVector7Parameters
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.GEOGCSTransformers.PositionVector7ParametersTransformer.#ctor(unoGIS.CoordinateSystems.Ellipsoid,unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="dx">Delta X geocéntrico</param>
            <param name="dy">Delta Y geocéntrico</param>
            <param name="dz">Delta Z geocéntrico</param>
            <param name="rx">Grados en segundos de la rotación en el eje X</param>
            <param name="ry">Grados en segundos de la rotación en el eje Y</param>
            <param name="rz">Grados en segundos de la rotación en el eje Z</param>
            <param name="dS">Factor de escala expresado en partes por millón</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.Primem">
            <summary>
            Clase para definir PRIMEM en los sistemas de coordenadas.
            </summary>
        </member>
        <member name="T:unoGIS.CoordinateSystems.Projection">
            <summary>
            Clase que define una proyección para un sistema de coordendas.
            </summary>
        </member>
        <member name="T:unoGIS.CoordinateSystems.ProjectionTransformers.IProjectionTransformer">
            <summary>
            Interfaz ue deben implementar las clases que definen una proyección.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.IProjectionTransformer.Equals(unoGIS.CoordinateSystems.ProjectionTransformers.IProjectionTransformer)">
            <summary>
            Determina si la proyección es igual a otra.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.IProjectionTransformer.ToGrid(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas geográfica a proyectada.
            </summary>
            <param name="geoPos">Coordenada geográfica en radianes.</param>
            <returns>Coordenada proyectada</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.IProjectionTransformer.ToGeo(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas proyectada a geográfica.
            </summary>
            <param name="gridPos">Coordenada proyectada.</param>
            <returns>Coordenada geográfica en radianes.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.LambertAzimuthalEqualAreaProjection.ToGrid(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas geográfica a proyectada.
            </summary>
            <param name="geoPos">Coordenada geográfica en radianes.</param>
            <returns>Coordenada proyectada</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.LambertAzimuthalEqualAreaProjection.ToGeo(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas proyectada a geográfica.
            </summary>
            <param name="gridPos">Coordenada proyectada.</param>
            <returns>Coordenada geográfica en radianes.</returns>
        </member>
        <member name="T:unoGIS.CoordinateSystems.ProjectionTransformers.LambertCC1SPProjection">
            <summary>
            Clase para la conversión de coordenadas con el método de proyección Cónica Conforme de Lambert con un Paralelo Estandar
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.LambertCC1SPProjection.#ctor(unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="lat0">Latitud del origen natural (Estandar Paralelo)</param>
            <param name="lon0">Longitud del origen natural (Meridiando central)</param>
            <param name="k0">Scale factor at the natural origin (on the standard parallel)</param>
            <param name="falseE">Falso Este</param>
            <param name="falseN">Falso Norte</param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.LambertCC1SPProjection.ToGrid(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas geográfica a proyectada.
            </summary>
            <param name="geoPos">Coordenada geográfica en radianes.</param>
            <returns>Coordenada proyectada</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.LambertCC1SPProjection.ToGeo(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas proyectada a geográfica.
            </summary>
            <param name="gridPos">Coordenada proyectada.</param>
            <returns>Coordenada geográfica en radianes.</returns>
        </member>
        <member name="T:unoGIS.CoordinateSystems.ProjectionTransformers.LambertCC2SPProjection">
            <summary>
            Clase para la conversión de coordenadas con el método de proyección Cónica Conforme de Lambert con dos Paralelos Estandar
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.LambertCC2SPProjection.#ctor(unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="lat1">Latitud del 1er paralelo estandar</param>
            <param name="lat2">Latitud del 2do paralelo estandar</param>
            <param name="latF">Latitud del falso origen</param>
            <param name="lonF">Longitud del falso origen (meridiano central)</param>
            <param name="falseE">Falso Este</param>
            <param name="falseN">Falso Norte</param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.LambertCC2SPProjection.ToGrid(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas geográfica a proyectada.
            </summary>
            <param name="geoPos">Coordenada geográfica en radianes.</param>
            <returns>Coordenada proyectada</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.LambertCC2SPProjection.ToGeo(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas proyectada a geográfica.
            </summary>
            <param name="gridPos">Coordenada proyectada.</param>
            <returns>Coordenada geográfica en radianes.</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.MercatorProjection.#ctor(unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="lat0">Latitud del origen natural (Estandar Paralelo)</param>
            <param name="lon0">Longitud del origen natural (Meridiando central)</param>
            <param name="k0">Scale factor at the natural origin (on the standard parallel)</param>
            <param name="falseE">Falso Este</param>
            <param name="falseN">Falso Norte</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.ProjectionTransformers.NonProjection">
            <summary>
            Clase usada para cuando no existe definida la proyection retornar la misma coordenada a convertir.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.SphericalMercatorProjection.#ctor(unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="lat0">Latitud del origen natural (Estandar Paralelo)</param>
            <param name="lon0">Longitud del origen natural (Meridiando central)</param>
            <param name="k0">Scale factor at the natural origin (on the standard parallel)</param>
            <param name="falseE">Falso Este</param>
            <param name="falseN">Falso Norte</param>
        </member>
        <member name="T:unoGIS.CoordinateSystems.ProjectionTransformers.TransverseMercatorProjection">
            <summary>
            Clase para la conversión de coordenadas con el método TransverseMercator.
            </summary>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.TransverseMercatorProjection.#ctor(unoGIS.CoordinateSystems.Ellipsoid,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inicializa una instancia de la clase.
            </summary>
            <param name="lat0">Latitud del origen natural.</param>
            <param name="lon0">Longitud de origen natural (Meridiano Central)</param>
            <param name="k0">Factor de escala en el origen natural (en el Meridiano Central)</param>
            <param name="falseE">Falso Este</param>
            <param name="falseN">Falso Norte</param>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.TransverseMercatorProjection.ToGrid(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas geográfica a proyectada.
            </summary>
            <param name="geoPos">Coordenada geográfica en radianes.</param>
            <returns>Coordenada proyectada</returns>
        </member>
        <member name="M:unoGIS.CoordinateSystems.ProjectionTransformers.TransverseMercatorProjection.ToGeo(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordendas proyectada a geográfica.
            </summary>
            <param name="gridPos">Coordenada proyectada.</param>
            <returns>Coordenada geográfica en radianes.</returns>
        </member>
        <member name="T:unoGIS.CoordinateSystems.Unit">
            <summary>
            Clase para definir las unidades de los sistemas de coordenadas.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.ArithmeticUtils.Angles">
            <summary>
            Clase que implementa métodos estáticos para el calculo con ángulos.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Angles.GetAngleFromPoint(System.Double,System.Double)">
            <summary>
            Dado un vector definido por el origen de coordenadas y un punto obtiene el ángulo que forma con el semieje horizontal positivo.
            </summary>
            <param name = "x">Coordanada x del punto que define el vector.</param>
            <param name = "y">Coordanada y del punto que define el vector.</param>
            <returns>Devuelve el ángulo en grados.</returns>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Angles.GetSweepAngle(System.Double,System.Double,System.Boolean)">
            <summary>
            Retorna el ángulo en radianes desde el ángulo inicial al ángulo final
            siguiendo la dirección especificada.
            </summary>
            <param name = "startAngle">Ángulo inicial.</param>
            <param name = "endingAngle">Ángulo final.</param>
            <param name = "isClockwise">Dirección: Verdadero si a favor de las manecillas del reloj.</param>
            <returns>Ángulo </returns>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Angles.NormalizeAngle(System.Double)">
            <summary>
            Lleva un angulo a un valor entre cero y dos pi.
            </summary>
            <param name = "ang">Valor del angulo.</param>
            <returns>Angulo normalizado.</returns>
        </member>
        <member name="T:unoGIS.Entities.ArithmeticUtils.Lines">
            <summary>
            Algoritmos para el trabajo con líneas definidas por dos coordenadas.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Lines.IntersectLines2D(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Interseccón de dos lineas.
            </summary>
            <param name="P1x">Coordenada x del primer punto de la primera linea.</param>
            <param name="P1y">Coordenada y del primer punto de la primera linea.</param>
            <param name="P1z">Coordenada Z del primer punto de la primera linea.</param>
            <param name="P2x">Coordenada x del segundo punto de la primera linea.</param>
            <param name="P2y">Coordenada y del segundo punto de la primera linea.</param>
            <param name="P2z">Coordenada Z del segundo punto de la primera linea.</param>
            <param name="D1x">Coordenada x del primer punto de la segunda linea.</param>
            <param name="D1y">Coordenada y del primer punto de la segunda linea.</param>
            <param name="D1z">Coordenada Z del primer punto de la segunda linea.</param>
            <param name="D2x">Coordenada x del segundo punto de la segunda linea.</param>
            <param name="D2y">Coordenada y del segundo punto de la segunda linea.</param>
            <param name="D2z">Coordenada Z del segundo punto de la segunda linea.</param>
            <param name="Px">Retorna la coordenada x del punto de intersección.</param>
            <param name="Py">Retorna la coordenada y del punto de intersección.</param>
            <param name="Pz1">Retorna la coordenada z del punto de intersección sobre la primera linea.</param>
            <param name="Pz2">Retorna la coordenada z del punto de intersección sobre la segunda linea.</param>
            <returns>true si las lineas se intersectan, false si son paralelas no conicidentes.</returns>
            <remarks>
            Devuelve true y el punto de interseccion si las dos rectas definidas por
            P1, P2 y D1, D2 se cortaran.
            Si se Alinea D1 ó D2 con P1, P2  se devolverá como resultado D1 ó D2, 
            y en caso de estar alineados los dos, devolvemos el extremo de segmento
            que esté incluido en el otro segmento ó si no hay relación de inclusión, 
            devolveremos de D1 o D2 el más cercano. 
            Obs; La razon de elegir que punto se devuleve es con vistas a usar esta
            función como apoyo de otras como la interseccion de segmentos , ... 
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Lines.IntersectLines2D(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate@)">
            <summary>
            Interseccón de dos lineas.
            </summary>
            <param name = "P1">Primer punto de la primera linea.</param>
            <param name = "P2">Segundo punto de la primera linea.</param>
            <param name = "D1">Primer punto de la segunda linea.</param>
            <param name = "D2">Segundo punto de la segunda linea.</param>
            <param name = "P">Devuelve el punto de intersección</param>
            <returns>Devuelve true si se cortan, falso si no.</returns>
            <remarks>
            Devuelve true y el punto de interseccion si las dos rectas definidas por
            P1, P2 y D1, D2 se cortaran.
            Si se Alinea D1 ó D2 con P1, P2  se devolverá como resultado D1 ó D2, 
            y en caso de estar alineados los dos, devolvemos el extremo de segmento
            que esté incluido en el otro segmento ó si no hay relación de inclusión, 
            devolveremos de D1 o D2 el más cercano. 
            Obs; La razon de elegir que punto se devuleve es con vistas a usar esta
            función como apoyo de otras como la interseccion de segmentos , ... 
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Lines.IntersectLines2D(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate@,unoGIS.Entities.Coordinate@)">
            <summary>
            Interseccón de dos lineas.
            </summary>
            <param name = "P1">Primer punto de la primera linea.</param>
            <param name = "P2">Segundo punto de la primera linea.</param>
            <param name = "D1">Primer punto de la segunda linea.</param>
            <param name = "D2">Segundo punto de la segunda linea.</param>
            <param name = "Pz1">Devuelve el punto de intersección con la z sobre la primera linea.</param>
            <param name = "Pz2">Devuelve el punto de intersección con la z sobre la segunda linea.</param>
            <returns>Devuelve true si se cortan, falso si no.</returns>
            <remarks>
            Devuelve true y el punto de interseccion si las dos rectas definidas por
            P1, P2 y D1, D2 se cortaran.
            Si se Alinea D1 ó D2 con P1, P2  se devolverá como resultado D1 ó D2, 
            y en caso de estar alineados los dos, devolvemos el extremo de segmento
            que esté incluido en el otro segmento ó si no hay relación de inclusión, 
            devolveremos de D1 o D2 el más cercano. 
            Obs; La razon de elegir que punto se devuleve es con vistas a usar esta
            función como apoyo de otras como la interseccion de segmentos , ... 
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Lines.IntersectLineWithSemiRect2D(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate@,unoGIS.Entities.Coordinate@)">
            <summary>
            Intersección de recta con semi - recta.
            </summary>
            <param name = "P1">Primer punto del recta.</param>
            <param name = "P2">Segundo punto del recta.</param>
            <param name = "D1">Primer punto de la semi - recta.</param>
            <param name = "D2">Segundo punto de la semi - recta.</param>
            <param name = "Pz1">Devuelve el punto de intersección con la z sobre la linea.</param>
            <param name = "Pz2">Devuelve el punto de intersección con la z sobre la semirecta.</param>
            <returns> Devuelve true si se cortan y el punto de intersección
            a la semi - recta.</returns>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Lines.CoordinateInLine(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
            <summary>
            Proyección de un punto sobre una línea.
            </summary>
            <param name = "P">Punto.</param>
            <returns>
            Devuelve la proyección de un punto sobre una línea definida por 2 puntos.
            </returns>
        </member>
        <member name="T:unoGIS.Entities.ArithmeticUtils.RobustAlgorithms">
            <summary>
            Algoritmos robustos
            </summary>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.RobustAlgorithms.SignOfDet2x2(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculo robusto para el signo para un determinante 2x2.
            </summary>
            <param name="x1">valor x1.</param>
            <param name="y1">valor y1.</param>
            <param name="x2">valor x2.</param>
            <param name="y2">valor y2.</param>
            <returns>
            retorna -1 si el determinante es negativo.
            retorna 1 si el determinante es positivo.
            retorna 0 si el determinante es nulo.
            </returns>
        </member>
        <member name="T:unoGIS.Entities.ArithmeticUtils.Segment">
            <summary>
            Clase que define un segmento a partir de dos coordenadas.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segment.CoordinateInSegment2D(unoGIS.Entities.Coordinate)">
            <summary>
            Proyección de un punto sobre un segmento.
            </summary>
            <param name = "P">Punto.</param>
            <returns>
            Devuelve la proyección de un punto sobre un segmento. Si la proyección
            cayese fuera devolverá el extremo más cercano. Si los puntos que delimitan el 
            segmento coinciden en el plano, se retorna un punto con las coordenadas x e y
            iguales al primer punto y la z en la media de las dos zetas.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segment.Distance2D(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la distancia de una coordenada a un segmento en 2D.
            </summary>
            <param name="coord">Coordenada desde a que se realiza la medida.</param>
            <returns>Devuelve la distancia de la coordenada al segmento.</returns>
        </member>
        <member name="T:unoGIS.Entities.ArithmeticUtils.SegmentComparer2D">
            <summary>
            Clases para realizar comparaciones de segmentos en 2D.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.ArithmeticUtils.Segments">
            <summary>
            Clase estatica que contiene métodos relacionados con segmentos.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.DistPSegment2D(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Distancia de un punto a un segmento
            </summary>
            <param name = "Px">Coordenada x del punto.</param>
            <param name = "Py">Coordenada y del punto.</param>
            <param name = "SegAx">Coordenada x del primer punto del segmento.</param>
            <param name = "SegAy">Coordenada y del primer punto del segmento.</param>
            <param name = "SegBx">Coordenada x del segundo punto del segmento.</param>
            <param name = "SegBy">Coordenada y del segundo punto del segmento.</param>
            <returns>
            Devuelve la distancia del punto al segmento, si la proyección ortogonal
            del punto no cae sobre el segmento, retorna la distancia al extremo mas
            cercano.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.GetOrthogonalPointFrom(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Dado un segmento definido por dos puntos y un valor de altura 
            devuelve el punto que está sobre el punto "from" a 
            la altura especificada.
            </summary>
            <param name = "x1">Coordenada x del primer punto del segmento.</param>
            <param name = "y1">Coordenada y del segundo punto del segmento.</param>
            <param name = "x2">Coordenada x del primer punto del segmento.</param>
            <param name = "y2">Coordenada y del segundo punto del segmento.</param>
            <param name = "fromX">Coordenada x del punto base</param>
            <param name = "fromY">Coordenada y del punto base</param>
            <param name = "height">Valor de la altura</param>
            <param name = "x">Retorna la coordenada x de la altura</param>
            <param name = "y">Retorna la coordenada y de la altura</param>
            <remarks>
            Si la altura "height" es positiva, el punto quedará a la izquierda del segmento si seguimos el recorrido primer_punto - > segundo_punto.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.IntersectSegments(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
            <summary>
            Método rápido para determinar si dos segmentos se cortan
            </summary>
            <param name = "p1">Primer punto del primer segmento.</param>
            <param name = "p2">Segundo punto del primer segmento.</param>
            <param name = "p3">Primer punto del segundo segmento.</param>
            <param name = "p4">Segundo punto del segundo segmento.</param>
            <returns>true si los segmentos se cortan, false si no.</returns>
            <remarks>
            No se contempla el caso en que alguno de los segmentos esté 
            degenerado a un punto.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.IntersectSegments2D(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Intersección entre segmentos.
            </summary>
            <param name = "P1x">Coordenada x del primer punto del primer segmento.</param>
            <param name = "P1y">Coordenada y del primer punto del primer segmento.</param>
            <param name = "P1z">Coordenada z del primer punto del primer segmento.</param>
            <param name = "P2x">Coordenada x del segundo punto del primer segmento.</param>
            <param name = "P2y">Coordenada y del segundo punto del primer segmento.</param>
            <param name = "P2z">Coordenada z del segundo punto del primer segmento.</param>
            <param name = "D1x">Coordenada x del primer punto del segundo segmento.</param>
            <param name = "D1y">Coordenada y del primer punto del segundo segmento.</param>
            <param name = "D1z">Coordenada z del primer punto del segundo segmento.</param>
            <param name = "D2x">Coordenada x del segundo punto del segundo segmento.</param>
            <param name = "D2y">Coordenada y del segundo punto del segundo segmento.</param>
            <param name = "D2z">Coordenada z del segundo punto del segundo segmento.</param>
            <param name = "tolerance">Valor de tolerancia.</param>
            <param name = "Px">Devuelve la coordenada x del punto de intersección.</param>
            <param name = "Py">Devuelve la coordenada y del punto de intersección.</param>
            <param name = "Pz1">Devuelve la coordenada z del punto de intersección sobre el primer segmento.</param>
            <param name = "Pz2">Devuelve la coordenada z del punto de intersección sobre el segundo segmento.</param>
            <returns>Devuelve verdadero si los segmentos se cortan en un 
            punto interior a ambos segmentos.</returns>
            <remarks>
            Se admite una tolerancia2D (el parametro tolerance) de corte que podria 
            ser tanto positiva para incluir segmentos que casi se cortan ó negativa 
            para excluir segmentos que se cortan por poco</remarks>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.IntersectSegments2D(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,System.Double,unoGIS.Entities.Coordinate@,unoGIS.Entities.Coordinate@)">
            <summary>
            Intersección entre segmentos.
            </summary>
            <param name = "P1">Primer punto del primer segmento.</param>
            <param name = "P2">Segundo punto del primer segmento.</param>
            <param name = "D1">Primer punto del segundo segmento.</param>
            <param name = "D2">Segundo punto del segundo segmento.</param>
            <param name = "tolerance">Valor de tolerancia.</param>
            <param name = "Pz1">Devuelve el punto de intersección con la z sobre el primer segmento.</param>
            <param name = "Pz2">Devuelve el punto de intersección con la z sobre el segundo segmento.</param>
            <returns>Devuelve verdadero si los segmentos se cortan en un 
            punto interior a ambos segmentos.</returns>
            <remarks>
            Se admite una tolerancia2D (el parametro tolerance) de corte que podria 
            ser tanto positiva para incluir segmentos que casi se cortan ó negativa 
            para excluir segmentos que se cortan por poco</remarks>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.IntersectSegments2D(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,System.Double,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Intersección entre segmentos.
            </summary>
            <param name = "P1">Primer punto del primer segmento.</param>
            <param name = "p2">Segundo punto del primer segmento.</param>
            <param name = "D1">Primer punto del segundo segmento.</param>
            <param name = "D2">Segundo punto del segundo segmento.</param>
            <param name = "tolerance">Valor de tolerancia.</param>
            <param name = "Px">Devuelve la coordenada x del punto de intersección.</param>
            <param name = "Py">Devuelve la coordenada y del punto de intersección.</param>
            <param name = "Pz1">Devuelve la coordenada z del punto de intersección sobre el primer segmento.</param>
            <param name = "Pz2">Devuelve la coordenada z del punto de intersección sobre el segundo segmento.</param>
            <returns>Devuelve verdadero si los segmentos se cortan en un 
            punto interior a ambos segmentos.</returns>
            <remarks>
            Se admite una tolerancia2D (el parametro tolerance) de corte que podria 
            ser tanto positiva para incluir segmentos que casi se cortan ó negativa 
            para excluir segmentos que se cortan por poco</remarks>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.IntersectSegmentWithLine2D(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate@,unoGIS.Entities.Coordinate@)">
            <summary>
            Intersección de segmento con recta.
            </summary>
            <param name = "P1">Primer punto del segmento.</param>
            <param name = "P2">Segundo punto del segmento.</param>
            <param name = "D1">Primer punto de la recta.</param>
            <param name = "D2">Segundo punto de la recta.</param>
            <param name = "Pz1">Devuelve el punto de intersección con la z sobre el primer segmento.</param>
            <param name = "Pz2">Devuelve el punto de intersección con la z sobre la recta.</param>
            <returns> Devuelve true si se cortan y el punto de intersección
            pertenece al segmento.</returns>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.IntersectSegmentWithSemiRect2D(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate@,unoGIS.Entities.Coordinate@)">
            <summary>
            Intersección de segmento con semi - recta.
            </summary>
            <param name = "P1">Primer punto del segmento.</param>
            <param name = "P2">Segundo punto del segmento.</param>
            <param name = "D1">Primer punto de la semi - recta.</param>
            <param name = "D2">Segundo punto de la semi - recta.</param>
            <param name = "Pz1">Devuelve el punto de intersección con la z sobre el primer segmento.</param>
            <param name = "Pz2">Devuelve el punto de intersección con la z sobre la semirecta.</param>
            <returns> Devuelve true si se cortan y el punto de intersección
            pertenece al segmento y a la semi - recta.</returns>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.VectorsInOppositeWay(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
            <summary>
            Dice si dos segmentos estan orientados en sentidos contrarios.
            </summary>
            <param name = "P1">Origen del primer vector.</param>
            <param name = "P2">Destino del primer vector.</param>
            <param name = "D1">Origen del segundo vector.</param>
            <param name = "D2">Destino del segundo vector.</param>
            <returns>True si estan en sentidos opuestos o false si estan en el mismo sentido.</returns>
            <remarks>Se basa en la propiedad X*Y = |X|*|Y|*cos(X,Y) = xi*yi</remarks>
        </member>
        <member name="M:unoGIS.Entities.ArithmeticUtils.Segments.PerpendicularVector(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,System.Double)">
            <summary>
            Vector perpendicular al segmento dado con un modulo dado.
            </summary>
            <param name="P1">Primer punto del segmento.</param>
            <param name="P2">Segundo punto del segmento.</param>
            <param name="distance">Modulo del vector a calcular.</param>
            <returns>Vector perpendicular al segmento dado con un modulo dado.</returns>
            <remarks>El signo del modulo indica el sentido del vector. Positivo es perpendicular a la derecha
            y negativo es perpendicular a la izquierda.</remarks>
        </member>
        <member name="T:unoGIS.Entities.Attachment">
            <summary>
            Entidad para almacenar documentos adjuntos a las entidades.
            </summary>
            <example>
            Ejemplo de cómo se puede definir dentro de un XmlDataModel:
            <Class Name="Attachment" Table="Attachments" Type="unoGIS.Entities.Attachment" />
            </example>
        </member>
        <member name="T:unoGIS.Entities.SideOfBox">
            <summary>
            Determina la posición de una coordenada con respecto a una caja.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.SideOfBox.None">
            <summary>
            Sin determinar.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.SideOfBox.Over">
            <summary>
            La coordenada se encuentra dentro o sobre el borde de la caja.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.SideOfBox.Up">
            <summary>
            La coordenada se encuentra al norte la caja.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.SideOfBox.Down">
            <summary>
            La coordenada se encuentra al sur de la caja.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.SideOfBox.Left">
            <summary>
            La coordenada se encuentra al este de la caja.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.SideOfBox.Right">
            <summary>
            La coordenada se encuentra al oeste de la caja.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.BoundingBox">
            <summary>
            Clase que gestiona una caja.
            Todas la geometrías definen una caja en la que se encuentran contenidas.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.#ctor">
            <summary>
            Se crea una nueva instancia de un BoundingBox 2D.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.#ctor(unoGIS.Entities.CoordinateEnumType)">
            <summary>
            Se crea una nueva instancia de un BoundingBox con el tipo de coordenadas indicado.
            </summary>
            <param name="coordinateType">
            Tipo de coordenada que se desea para la creación del BoundingBox.
            </param>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.#ctor(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
            <summary>
            Se crea una nueva instancia de un BoundingBox con las coordenadas facilitadas.
            </summary>
            <param name="min">Coordenada mínima de la caja.</param>
            <param name="max">Coordenada máxima de la caja.</param>
        </member>
        <member name="P:unoGIS.Entities.BoundingBox.min">
            <summary>
            Coordenada mínima de la caja.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.BoundingBox.max">
            <summary>
            Coordenada máxima de la caja.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.BoundingBox.xmin">
            <summary>
            Componente X mínima de la caja.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.BoundingBox.ymin">
            <summary>
            Componente Y mínima de la caja. 
            </summary>
        </member>
        <member name="P:unoGIS.Entities.BoundingBox.xmax">
            <summary>
            Componente X máxima de la caja.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.BoundingBox.ymax">
            <summary>
            Componente Y máxima de la caja.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.BoundingBox.Width">
            <summary>
            Ancho de la caja.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.BoundingBox.Height">
            <summary>
            Alto de la caja.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.BoundingBox.Centroid">
            <summary>
            Centroide del BoundingBox.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.Join(unoGIS.Entities.BoundingBox)">
            <summary>
            Calcula la unión de dos cajas.
            </summary>
            <param name="box">
            BoundingBox con el que se calculará la unión.
            </param>
            <returns>
            Retorna un nuevo BoundingBox que engloba a ambos BoundingBox.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.Join(unoGIS.Entities.Coordinate)">
            <summary>
            Calcula la caja que contiene a la caja actual y a la coordenada pasada como parámetro.
            </summary>
            <param name="box">
            BoundingBox con el que se calculará la unión.
            </param>
            <returns>
            Retorna un nuevo BoundingBox que engloba a ambos.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.Intersect(unoGIS.Entities.BoundingBox)">
            <summary>
            Determina si la caja actual se intersecta con otra caja.
            </summary>
            <param name="another">
            BoundingBox contra la que se hace la comprobación.
            </param>
            <returns>
            Retorna true en caso de intersección, false en caso contrario.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.Clone">
            <summary>
            Crea una copia exacta del objeto.
            </summary>
            <returns>Retorna la copia.</returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.ToGeometry">
            <summary>
            Devuelve una geometria PolyLine con una unica LineString que representa la caja del BoundingBox.
            </summary>
            <returns>Geometry</returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.ToLineString">
            <summary>
            Devuelve un LineString que representa la caja del BoundingBox.
            </summary>
            <returns>LineString</returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.ToPolyLine">
            <summary>
            Devuelve una geometria PolyLine con una unica LineString que representa la caja del BoundingBox.
            </summary>
            <returns>Polyline</returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.ToPolygon">
            <summary>
            Devuelve una geometria Polygon con un unico anillo positivo, que representa la caja del BoundingBox.
            </summary>
            <returns>Polygon</returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.Distance2Coordinate2D(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la distancia a una coordenada.
            </summary>
            <param name="coordinate"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.CoordinateRespectBox(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la posición de la coordenada respecto a la caja. Devuelve cero si está dentro o sobre.
            Para comparar el resultado, utilice el enumerado "CoordinateInBox"
            </summary>
            <param name="coordinate"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.BoundingBox.ToString">
            <summary>
            Calcula un string que representa la actual BoundingBox.
            </summary>
            <returns>
            Cadena que representa la caja.
            </returns>
        </member>
        <member name="T:unoGIS.Entities.ChangeSet">
            <summary>
            Conjunto de cambios
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ChangeSet.UserId">
            <summary>
            Identificador de usuario que realizar el ChangeSet
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ChangeSet.Date">
            <summary>
            Fecha de la creación del ChangeSet, en UTC
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ChangeSet.Guid">
            <summary>
            Identificador único del ChangeSet
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ChangeSet.From">
            <summary>
            Identificador de HistoryData inicial
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ChangeSet.To">
            <summary>
            Identificador de HistoryData final
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ChangeSet.Commited">
            <summary>
            Indica si el ChangeSet ha sido aplicado
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ChangeSet.CommitSummary">
            <summary>
            Resultado de aplicar un ChangeSet que genera cambios en el histórico
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ChangeSet.Commit">
            <summary>
            Indica si es un Commit
            </summary>
        </member>
        <member name="T:unoGIS.Entities.ICoordinate">
            <summary>
            Interfaz de coordinate
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ICoordinate.X">
            <summary>
            X
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ICoordinate.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ICoordinate.Z">
            <summary>
            Z
            </summary>
        </member>
        <member name="P:unoGIS.Entities.ICoordinate.M">
            <summary>
            M
            </summary>
        </member>
        <member name="M:unoGIS.Entities.ICoordinate.Is3D">
            <summary>
            Is3D
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.ICoordinate.IsMeasured">
            <summary>
            Is Measured
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.ICoordinate.CoordinateType">
            <summary>
            Tipo de coordenada
            </summary>
        </member>
        <member name="M:unoGIS.Entities.ICoordinate.Clone">
            <summary>
            Crea una nueva instancia de la Coordenada con los mismo valores que la original.
            </summary>
            <returns>Copia de la coordenada clonada</returns>
        </member>
        <member name="M:unoGIS.Entities.ICoordinate.Distance2D(unoGIS.Entities.Coordinate)">
            <summary>
            Distancia 2D
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.ICoordinate.Distance3D(unoGIS.Entities.Coordinate)">
            <summary>
            Distancia 3D
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Entities.CoordinateEnumType">
            <summary>
            Tipos de coordenadas.
            El primer bit de la constante indica si tiene Z.
            El segundo bit de la constante indica si tiene M.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.CoordinateEnumType.Is2D">
            <summary>
            La coordenada es 2D.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.CoordinateEnumType.Is3D">
            <summary>
            La coordenada es 3D.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.CoordinateEnumType.Is2DM">
            <summary>
            La coordenada es 2D y tiene componente M.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.CoordinateEnumType.Is3DM">
            <summary>
            La coordenada es 3D y tiene componente M.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.Coordinate">
            <summary>
            Coordenada Abstracta
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.CreateNew(unoGIS.Entities.CoordinateEnumType)">
            <summary>
            Devuelve una nueva instancia de una coordenada tomando los valores de otra.
            </summary>
            <param name="coordinateType">Coordenada de la que se toman los valores.</param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Coordinate.X">
            <summary>
            Componente X de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate.Y">
            <summary>
            Componente Y de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate.Z">
            <summary>
            Componente Z de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate.M">
            <summary>
            Componente M de la coordenada.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Is3D">
            <summary>
            Retorna TRUE si es 3D
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.IsMeasured">
            <summary>
            Retorna TRUE si tiene M
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Coordinate.CoordinateType">
            <summary>
            Devuelve el tipo de coordenada.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Distance2D(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la distancia a otra coordenada
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Distance3D(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la distancia a otra coordenada en 3D
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.CopyCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Copia las componentes desde otra coordenada.
            </summary>
            <param name="otherCoordinate">Coordenada desde donde se copian los valores.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Equals2D(unoGIS.Entities.Coordinate)">
            <summary>
            Compara la coordenada con otra pasada como parametro en el espacio R2.
            </summary>
            <param name="otherCoordinate">Coordinate con la que se realiza la comparación.</param>
            <returns>Devuelve true si las componentes X e Y son iguales, en otro caso false.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Equals3D(unoGIS.Entities.Coordinate)">
            <summary>
            Compara la coordenada con otra pasada como parametro.
            </summary>
            <param name="otherCoordinate">Coordinate con la que se realiza la comparación.</param>
            <returns>Devuelve true si las componentes X e Y son iguales, en otro caso false.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Equals(unoGIS.Entities.Coordinate)">
            <summary>
            Compara la coordenada con otra pasada como parametro.
            </summary>
            <param name="otherCoordinate">Coordinate con la que se realiza la comparación.</param>
            <returns>Devuelve true si las componentes X e Y son iguales, en otro caso false.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.GetHashCode">
            <summary>
            Actúa como función hash.
            </summary>
            <returns>Un int con el código hash.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.ToString">
            <summary>
            Devuelve la coordenada en un string con el formato "(x,y,z)".
            </summary>
            <returns>string con la representación de la coordenada "(x,y,z)".</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.ToString(System.String)">
            <summary>
            Devuelve la coordenada en un string con el formato especificado y 3 decimales.
            </summary>
            <param name="format">Formato
            <value>GEO</value>
            <value>PROJ</value>
            </param>
            <returns>Devuelve un string con la representación de la coordenada.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.CompareTo(unoGIS.Entities.Coordinate)">
            <summary>
            Realiza una comparación con otra coordenada.
            </summary>
            <param name="other">Coordenada contra la que se realiza la comparación.</param>
            <remarks>
            La comparación se realiza comparando primero la componente X, si ambas son iguales se procede a comparar Y,
            finalmente si las componentes Y son iguales se compara la compoenente Z.
            No se realiza comparación alguna con la componente M.
            </remarks>
            <returns>
            Retorna -1 y la otra coordenada es mayor.
            Retorna 1 y la otra coordenada es menor.
            Retorna 0 si ambas coordenadas son iguales.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.CompareTo2D(unoGIS.Entities.Coordinate)">
            <summary>
            Realiza una comparación con otra coordenada.
            </summary>
            <param name="other">Coordenada contra la que se realiza la comparación.</param>
            <remarks>
            La comparación se realiza comparando primero la componente X, si ambas son iguales se procede a comparar Y,
            finalmente si las componentes Y son iguales se compara la compoenente Z.
            No se realiza comparación alguna con la componente M.
            </remarks>
            <returns>
            Retorna -1 y la otra coordenada es mayor.
            Retorna 1 y la otra coordenada es menor.
            Retorna 0 si ambas coordenadas son iguales.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Clone">
            <summary>
            Crea una copia exacta de la coordenada.
            </summary>
            <returns>Retorna la nueva copia de la coordenada.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Min(unoGIS.Entities.Coordinate[])">
            <summary>
            Crea una coordenada mínima a partir de una colección de coordenadas.
            </summary>
            <param name="coords">Colección de coordenadas.</param>
            <returns>
            Retorna una nueva coordenada a partir de una colección de coordenadas donde las componentes de la nueva coordenada
            son los mínimos valores de las componentes X,Y,Z y M.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Max(unoGIS.Entities.Coordinate[])">
            <summary>
            Crea una coordenada máxima a partir de una colección de coordenadas.
            </summary>
            <param name="coords">Colección de coordenadas.</param>
            <returns>
            Retorna una nueva coordenada a partir de una colección de coordenadas donde las componentes de la nueva coordenada
            son los máximos valores de las componentes X,Y,Z y M.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.AddVector(unoGIS.Entities.Coordinate)">
            <summary>
            Adiciona un vector pasado como parametro.
            </summary>
            <param name="vector">vector a adicionar.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.SubtractVector(unoGIS.Entities.Coordinate)">
            <summary>
            Restar un vector pasado como parametro.
            </summary>
            <param name="vector">vector a restar.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.AngleBetweenCoordinates2D(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
            <summary>
            Calcula el angulo que se forma entre las dos coordenadas en parámetro tomando esta coordenada  como origen
            </summary>
            <param name = "vertexA">Primera coordenada.</param>
            <param name = "vertexB">Segunda coordenada.</param>
            <returns>Devuelve el ángulo suplementario (complemento a 180) 
            del que forman vertexA, esta coordenada y vertexB.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.AngleToCoordinate2D(unoGIS.Entities.Coordinate)">
            <summary>
            Calcula el angulo que forma el vector que va desde esta coordenada a la coordenada en parámetro
            tomando la coordenada actual como origen.
            </summary>
            <param name = "vertex">Coordenada que forma el ángulo a calcular.</param>
            <returns>Ángulo calculado.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.DistanceToBox2D(unoGIS.Entities.BoundingBox)">
            <summary>
            Calcula la distancia de esta coordenada a una caja en el plano, 
            de la cual se dan sus coordenadas minima y máxima.
            </summary>
            <param name = "box">Caja.</param>
            <returns>Distancia calculada.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.DistanceToLine(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
            <summary>
            Calcula la distancia de esta coordenada a la recta que pasa por las coordenadas pasadas como parámetros.
            </summary>
            <param name="vertexA">Primera coordenada.</param>
            <param name="vertexB">Segunda coordenada.</param>
            <returns>Distancia de esta coordenada a la recta.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.DistanceToSegment(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
             <summary>
             Calcula la distancia de esta coordenada al segmento definido por las dos coordenadas pasados como parámetros.
             </summary>
             <param name="vertexA">Primera coordenada del segmento.</param>
             <param name="vertexB">Segunda coordenada del segmento.</param>
             <returns>Distancia de esta coordenada al segmento.</returns>
             <remarks>La distancia de un punto a un segmento es la distancia a la recta
            si el punto esta en la proyeccion, si no, es la distancia al extremo mas 
            cercano. </remarks>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.InSegment(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
            <summary>
            Determina si la coordenada se encuentra comprendida en un segmento.
            </summary>
            <param name="vertexA">Primera coordenada que define el segmento.</param>
            <param name="vertexB">Segunda coordenada que define el segmento.</param>
            <returns>Retorna true si la coordenada se encuentra comprendida en el segmento.</returns>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.Rotate(unoGIS.Entities.Coordinate,System.Double)">
            <summary>
            Aplica una rotación a esta coordenada los grados especificados sobre el centro especificado.
            </summary>
            <param name="center">Centro de la rotación.</param>
            <param name="angle">Angulo de rotación en radianes.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate.TanToPoint(unoGIS.Entities.Coordinate)">
            <summary>
            Calcula la pendiente del segmento que pasa por esta coordenada y la coordenadas pasada como parámetro 
            </summary>
            <param name = "vertex">Segunda coordenada del segmento.</param>
            <returns>Devuelve la pendiente (tangente del angulo) del 
            segmento delimitado por las dos coordenadas.</returns>
        </member>
        <member name="T:unoGIS.Entities.Coordinate2D">
            <summary>
            Implementación de la clase abstracta Coordinate para coordenadas de dos dimensiones (solo gestiona la componente X e Y).
            </summary>
            <remarks>
            La clase Coordinate2D solo almacena las componentes X e Y, el resto de componentes siempre toman el valor 0.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2D.#ctor(System.Double,System.Double)">
            <summary>
            Crea una nueva instancia de una coordenada en 2 dimensiones para los valores facilitados.
            </summary>
            <param name="x">Componente X de la coordenada.</param>
            <param name="y">Componente Y de la coordenada.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2D.#ctor(unoGIS.Entities.Coordinate)">
            <summary>
            Crea una nueva coordeanda con las mismas componente que otra coordenada.
            </summary>
            <param name="otherCoordinate">Otra coordenada de donde se copiaran los valores de las compoenentes.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2D.FromStream(System.IO.BinaryReader)">
            <summary>
            Se crea una nueva coordenada a partir de un Stream.
            </summary>
            <param name="br">BinaryStream desde donde se deserializa la coordenada.</param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2D.X">
            <summary>
            Componente X de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2D.Y">
            <summary>
            Componente Y de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2D.Z">
            <summary>
            Componente Z de la coordenada.
            </summary>
            <remarks>
            Como Coordinate2D solo almacena X e Y, la componente Z siempre toma el valor 0.0.
            </remarks>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2D.M">
            <summary>
            Componente M de la coordenada.
            </summary>
            <remarks>
            Como Coordinate2D solo almacena X e Y, la componente M siempre toma el valor 0.0.
            </remarks>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2D.CoordinateType">
            <summary>
            Devuelve el tipo de coordenada que es (2D, 3D, 2DM o 3DM).
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2D.Clone">
            <summary>
            Crea una copia exacta de la coordenada.
            </summary>
            <returns>Retorna la nueva copia de la coordenada.</returns>
        </member>
        <member name="T:unoGIS.Entities.Coordinate3D">
            <summary>
            Implementación de la clase abstracta Coordinate para coordenadas de tres dimensiones (solo gestiona las componentes X,Y y Z).
            </summary>
            <remarks>
            La clase Coordinate2D solo almacena las componentes X, Y y Z, el resto de componentes siempre toman el valor 0.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Crea una nueva instancia de una coordenada en 3 dimensiones para los valores facilitados.
            </summary>
            <param name="x">Componente X de la coordenada.</param>
            <param name="y">Componente Y de la coordenada.</param>
            <param name="z">Componente Z de la coordenada.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3D.#ctor(unoGIS.Entities.Coordinate)">
            <summary>
            Crea una nueva coordeanda con las mismas componente que otra coordenada.
            </summary>
            <param name="otherCoordinate">Otra coordenada de donde se copiaran los valores de las compoenentes.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3D.FromStream(System.IO.BinaryReader)">
            <summary>
            Se crea una nueva coordenada a partir de un Stream.
            </summary>
            <param name="br">BinaryStream desde donde se deserializa la coordenada.</param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3D.X">
            <summary>
            Componente X de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3D.Y">
            <summary>
            Componente Y de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3D.Z">
            <summary>
            Componente Z de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3D.M">
            <summary>
            Componente M de la coordenada.
            </summary>
            <remarks>
            Como Coordinate2D solo almacena X, Y y Z, la componente M siempre toma el valor 0.0.
            </remarks>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3D.CoordinateType">
            <summary>
            Devuelve el tipo de coordenada que es (2D, 3D, 2DM o 3DM).
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3D.Clone">
            <summary>
            Crea una copia exacta de la coordenada.
            </summary>
            <returns>Retorna la nueva copia de la coordenada.</returns>
        </member>
        <member name="T:unoGIS.Entities.Coordinate2DM">
            <summary>
            Implementación de la clase abstracta Coordinate para coordenadas de dos dimensiones con componente M
            (solo gestiona la componente X,Y y M).
            </summary>
            <remarks>
            La clase Coordinate2DM solo almacena las componentes X,Y y M, el resto de componentes siempre toman el valor 0.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2DM.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2DM.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Crea una nueva instancia de una coordenada en 2 dimensiones con componente M para los valores facilitados.
            </summary>
            <param name="x">Componente X de la coordenada.</param>
            <param name="y">Componente Y de la coordenada.</param>
            <param name="m">Componente M de la coordenada.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2DM.#ctor(unoGIS.Entities.Coordinate)">
            <summary>
            Crea una nueva coordeanda con las mismas componente que otra coordenada.
            </summary>
            <param name="otherCoordinate">Otra coordenada de donde se copiaran los valores de las compoenentes.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2DM.FromStream(System.IO.BinaryReader)">
            <summary>
            Se crea una nueva coordenada a partir de un Stream.
            </summary>
            <param name="br">BinaryStream desde donde se deserializa la coordenada.</param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2DM.X">
            <summary>
            Componente X de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2DM.Y">
            <summary>
            Componente Y de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2DM.Z">
            <summary>
            Componente Z de la coordenada.
            </summary>
            <remarks>
            Como Coordinate2D solo almacena X e Y, la componente Z siempre toma el valor 0.0.
            </remarks>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2DM.M">
            <summary>
            Componente M de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate2DM.CoordinateType">
            <summary>
            Devuelve el tipo de coordenada que es (2D, 3D, 2DM o 3DM).
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate2DM.Clone">
            <summary>
            Crea una copia exacta de la coordenada.
            </summary>
            <returns>Retorna la nueva copia de la coordenada.</returns>
        </member>
        <member name="T:unoGIS.Entities.Coordinate3DM">
            <summary>
            Implementación de la clase abstracta Coordinate para coordenadas de 3 dimensiones con componente M.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3DM.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3DM.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Crea una nueva instancia de una coordenada en 3 dimensiones con componente M para los valores facilitados.
            </summary>
            <param name="x">Componente X de la coordenada.</param>
            <param name="y">Componente Y de la coordenada.</param>
            <param name="z">Componente Z de la coordenada.</param>
            <param name="m">Componente M de la coordenada.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3DM.#ctor(unoGIS.Entities.Coordinate)">
            <summary>
            Crea una nueva coordeanda con las mismas componente que otra coordenada.
            </summary>
            <param name="otherCoordinate">Otra coordenada de donde se copiaran los valores de las compoenentes.</param>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3DM.FromStream(System.IO.BinaryReader)">
            <summary>
            Se crea una nueva coordenada a partir de un Stream.
            </summary>
            <param name="br">BinaryStream desde donde se deserializa la coordenada.</param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3DM.X">
            <summary>
            Componente X de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3DM.Y">
            <summary>
            Componente Y de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3DM.Z">
            <summary>
            Componente Z de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3DM.M">
            <summary>
            Componente M de la coordenada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Coordinate3DM.CoordinateType">
            <summary>
            Devuelve el tipo de coordenada que es (2D, 3D, 2DM o 3DM).
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Coordinate3DM.Clone">
            <summary>
            Crea una copia exacta de la coordenada.
            </summary>
            <returns>Retorna la nueva copia de la coordenada.</returns>
        </member>
        <member name="T:unoGIS.Entities.CoordinateDistanceComparer">
            <summary>
            Clase utilizada para comparar puntos respecto a la distancia a un tercero.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.DataAnnotations.ClassIdAttribute">
            <summary>
            Al decorar una clase con este atributo, se puede especificar el tipo de coordenadas de la geometría
            </summary> 
        </member>
        <member name="P:unoGIS.Entities.DataAnnotations.ClassIdAttribute.Id">
            <summary>
            Tipo de coordenadas que utiliza el tipo de geometría
            </summary>
        </member>
        <member name="M:unoGIS.Entities.DataAnnotations.ClassIdAttribute.#ctor(System.Int32)">
            <summary>
            Constructor que permite indicar un Id asociado a una clase
            </summary>
            <param name="id">
            Id que se asociará a la clase
            </param>
        </member>
        <member name="T:unoGIS.Entities.DataAnnotations.CodedValueAttribute">
            <summary>
            Indica el valor codificado al que hace referencia
            </summary>
        </member>
        <member name="P:unoGIS.Entities.DataAnnotations.CodedValueAttribute.CodedValue">
            <summary>
            Valor codificado
            </summary>
        </member>
        <member name="T:unoGIS.Entities.DataAnnotations.CoordinateTypeAttribute">
            <summary>
            Al decorar una clase con este atributo, se puede especificar el tipo de coordenadas de la geometría
            </summary> 
        </member>
        <member name="P:unoGIS.Entities.DataAnnotations.CoordinateTypeAttribute.CoordinateType">
            <summary>
            Tipo de coordenadas que utiliza el tipo de geometría
            </summary>
        </member>
        <member name="M:unoGIS.Entities.DataAnnotations.CoordinateTypeAttribute.#ctor(unoGIS.Entities.CoordinateEnumType)">
            <summary>
            Constructor que permite indicar el tipo de coordenadas para una geometría (2D, 2DM, 3D, 3DM)
            </summary>
            <param name="coordinateType">(2D, 2DM, 3D, 3DM)</param>
        </member>
        <member name="T:unoGIS.Entities.DataAnnotations.DeleteDefinitionAttribute">
            <summary>
            Indica si la definición de un elemento puede modificarse desde su creación
            </summary>
        </member>
        <member name="M:unoGIS.Entities.DataAnnotations.DeleteDefinitionAttribute.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="canDelete">determina si la definición del elemento se puede editar</param>
        </member>
        <member name="P:unoGIS.Entities.DataAnnotations.DeleteDefinitionAttribute.CanDelete">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Entities.DataAnnotations.IsGraphicAttribute">
            <summary>
            Indica si una propiedad es gráfica
            </summary>
        </member>
        <member name="T:unoGIS.Entities.DataAnnotations.MeasureUnitAttribute">
            <summary>
            Unidad de medida
            </summary>
        </member>
        <member name="M:unoGIS.Entities.DataAnnotations.MeasureUnitAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="symbol">Símbolo que representa la unidad de medida</param>
        </member>
        <member name="M:unoGIS.Entities.DataAnnotations.MeasureUnitAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="symbol">Símbolo que representa la unidad de medida</param>
            <param name="name">Nombre de la unidad de medida</param>
        </member>
        <member name="P:unoGIS.Entities.DataAnnotations.MeasureUnitAttribute.Symbol">
            <summary>
            Símbolo que representa la unidad de medida (p.e. kg)
            </summary>
        </member>
        <member name="P:unoGIS.Entities.DataAnnotations.MeasureUnitAttribute.Name">
            <summary>
            Nombre de la unidad de medida (p.e. kilogramo)
            </summary>
        </member>
        <member name="T:unoGIS.Entities.IGeometry">
            <summary>
            IGeometry es la interfaz que implementan todas las geometrias.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IGeometry.Id">
            <summary>
            Identificador único de la geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Dimension">
            <summary>
            Indica la dimensión
            </summary>
            <returns>
            Retorna el número de dimensiones de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.GeometryType">
            <summary>
            Tipo de geometría expresado como un literal.
            </summary>
            <returns>
            Literal del tipo de geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Envelope">
            <summary>
            Caja contenedora como geometría
            </summary>
            <returns>
            Geometría que representa la caja contenedora (BoundingBox).
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.AsText">
            <summary>
            Serializa la geometría en una cadena de texto
            </summary>
            <returns>
            Cadena de texto con la geometría serializada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.AsBinary">
            <summary>
            Serializa la geometría como un array de Bytes
            </summary>
            <returns>
            Array de bytes que define la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Is3D">
            <summary>
            Indica si tiene Z.
            </summary>
            <returns>
            Retorna true si es 3D.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.IsMeasured">
            <summary>
            Indica si tiene M.
            </summary>
            <returns>
            Retorna true si tiene componente M.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Boundary">
            <summary>
            Devuelve la caja mínima en una geometría.
            </summary>
            <returns>
            Geometría con la caja mínima.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.FixBox">
            <summary>
            Actualiza la caja que contiene a la geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.GetBoundingBox">
            <summary>
            Devuelve el BoundingBox de la geometría.
            </summary>
            <returns>BoundingBox con la mínima caja que comprende la geometría.</returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Equals(unoGIS.Entities.Geometry)">
            <summary>
            Determina si la geometría actual es geometricamente igual a otra geometría.
            </summary>
            <param name="another">
            Geometría con la que se realiza la comparación.
            </param>
            <returns>
            Retorna true si ambas geometrías son iguales.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.AddVector(unoGIS.Entities.Coordinate)">
            <summary>
            Traslada el elemento adicionandole el vector pasado como parámetro
            </summary>
            <param name="vector">
            Vector de traslación.
            </param>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.DistanceToCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la minima distancia de la geometria a la coordenada pasada como parametro.
            </summary>
            <param name="coord">
            Coordenada sobre el que se calcula la distancia.
            </param>
            <returns>
            Distancia a la coordenada
            </returns>
            <remarks>
            Puede ser de gran importancia para la localizacion de elementos.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Distance(unoGIS.Entities.Geometry)">
            <summary>
            Devuelve la distancia de la goemetría actual a otra pasada como parámetro.
            </summary>
            <param name="another">
            Geometría a la cual se le calculará la distancia.
            </param>
            <returns>
            Distancia entre las dos geometrías.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Intersect(unoGIS.Entities.Geometry)">
            <summary>
            Determina si la caja de la geometría actual se intersecta con la caja de otra geometría.
            </summary>
            <param name="another">
            Geometría contra la que se hace la comprobación.
            </param>
            <returns>
            Retorna true en caso de intersección, false en caso contrario.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Clone">
            <summary>
            Crea una copia exacta del objeto actual.
            </summary>
            <returns>
            Copia de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.ClearForeignKeys(System.Boolean)">
            <summary>
            Asigna el valor null a todas las propiedades de la geometría que estén marcadas con el atributo ForeignKeyAttribute
            </summary>
            <param name="anyFK">true indica que afecte a todo tipo de propiedad FK. false sólo afecta a geometrías</param>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Centroid">
            <summary>
            Devuelve una coordenada que es el centro de la geometría y, asegura que se encuentra dentro de la geometría        
            </summary>
            <returns>
            Coordenada calculada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.GetCoordinates">
            <summary>
            Devuelve un enumerador sobre todas las coordenadas de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las coordenadas que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.GetSegments">
            <summary>
            Devuelve un enumerador sobre todos los segmentos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los segmentos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.GetLines">
            <summary>
            Devuelve un enumerador sobre todas las LineString de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las LineString de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.GetRings">
            <summary>
            Devuelve un enumerador sobre todos los anillos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los anillos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Buffer(System.Double)">
            <summary>
            Crea un buffer de la geometría.
            </summary>
            <param name="distance">
            Distancia a la que se desea crear el buffer.
            </param>
            <returns>
            Polígono que representa el buffer a la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Transform(unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Transforma el sistema de coordenadas de la geometría empleando el CoordinateSystemsConverter facilitado.
            </summary>
            <param name="csc">
            CoordinateSystemsConverter en el que se delega la conversión de coordenadas.
            </param>
        </member>
        <member name="M:unoGIS.Entities.IGeometry.Transform(unoGIS.Renderer.Matrix3D)">
            <summary>
            Transforma la geometría por una matriz
            </summary>
            <param name="matrix">Matrix 4x4</param>
        </member>
        <member name="P:unoGIS.Entities.IGeometry.EnumType">
            <summary>
            Devuelve el tipo de geometría.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IGeometry.WkbGeometry">
            <summary>
            Serializa la geometría como un array de Bytes
            </summary>
            <returns>
            Array de bytes que define la geometría.
            </returns>
        </member>
        <member name="T:unoGIS.Entities.Geometry">
            <summary>
            Geometry es la clase base de la cual heredan todas las geometrias.
            Geometry es una clase abstract por lo que no se puede instanciar.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Geometry.Empty">
            <summary>
            Geometría Vacía
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Geometry.box">
            <summary>
            Caja contenedora
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Geometry.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Dimension">
            <summary>
            Indica la dimensión
            </summary>
            <returns>
            Retorna el número de dimensiones de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.GeometryType">
            <summary>
            Tipo de geometría expresado como un literal.
            </summary>
            <returns>
            Literal del tipo de geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Envelope">
            <summary>
            Caja contenedora como geometría
            </summary>
            <returns>
            Geometría que representa la caja contenedora (BoundingBox).
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.AsText">
            <summary>
            Serializa la geometría en una cadena de texto
            </summary>
            <returns>
            Cadena de texto con la geometría serializada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.AsBinary">
            <summary>
            Serializa la geometría como un array de Bytes
            </summary>
            <returns>
            Array de bytes que define la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Is3D">
            <summary>
            Indica si tiene Z.
            </summary>
            <returns>
            Retorna true si es 3D.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.IsMeasured">
            <summary>
            Indica si tiene M.
            </summary>
            <returns>
            Retorna true si tiene componente M.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Boundary">
            <summary>
            Devuelve la caja mínima en una geometría.
            </summary>
            <returns>
            Geometría con la caja mínima.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Equals(unoGIS.Entities.Geometry)">
            <summary>
            Determina si la geometría actual es geometricamente igual a otra geometría.
            </summary>
            <param name="another">
            Geometría con la que se realiza la comparación.
            </param>
            <returns>
            Retorna true si ambas geometrías son iguales.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.AddVector(unoGIS.Entities.Coordinate)">
            <summary>
            Traslada el elemento adicionandole el vector pasado como parámetro
            </summary>
            <param name="vector">
            Vector de traslación.
            </param>
        </member>
        <member name="M:unoGIS.Entities.Geometry.DistanceToCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la minima distancia de la geometria a la coordenada pasada como parametro.
            </summary>
            <param name="coord">
            Coordenada sobre el que se calcula la distancia.
            </param>
            <returns>
            Distancia a la coordenada
            </returns>
            <remarks>
            Puede ser de gran importancia para la localizacion de elementos.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Distance(unoGIS.Entities.Geometry)">
            <summary>
            Devuelve la distancia de la goemetría actual a otra pasada como parámetro.
            </summary>
            <param name="another">
            Geometría a la cual se le calculará la distancia.
            </param>
            <returns>
            Distancia entre las dos geometrías.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Intersect(unoGIS.Entities.Geometry)">
            <summary>
            Determina si la caja de la geometría actual se intersecta con la caja de otra geometría.
            </summary>
            <param name="another">
            Geometría contra la que se hace la comprobación.
            </param>
            <returns>
            Retorna true en caso de intersección, false en caso contrario.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Clone">
            <summary>
            Crea una copia exacta del objeto actual.
            </summary>
            <remarks>
            El método es abstracto para que todas las clases que heredan de Geometry lo implementen.
            </remarks>
            <returns>
            Copia de la entidad.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.CloneAttributes">
            <summary>
            Realiza una copia de los atributos del objeto actual.
            La diferencia con el método Clone es que no se clona la geometría, solo los atributos.
            </summary>
            <returns>Copia de los atributos de la entidad</returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.ClearForeignKeys(System.Boolean)">
            <summary>
            Asigna el valor null a todas las propiedades de la geometría que estén marcadas con el atributo ForeignKeyAttribute
            </summary>
            <param name="anyFK">true indica que afecte a todo tipo de propiedad FK. false sólo afecta a geometrías</param>
        </member>
        <member name="M:unoGIS.Entities.Geometry.CopyAs(System.Type)">
            <summary>
            Crea una copia del objeto actual sobre otro tipo.
            </summary>       
            <param name="entityType">Tipo que tendrá la nueva copia.</param>
            <remarks>Ambos tipos deben tener el mismo esquema.</remarks>
            <returns>Copia del objeto actual con el tipo deseado.</returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.ShallowCopy(System.Type)">
            <summary>
            Crea una copia del objeto actual sobre otro tipo.
            </summary>       
            <param name="entityType">Tipo que tendrá la nueva copia.</param>
            <remarks>
            A diferencia de CopyAs, los esquemas del origen y destino pueden ser distintos.
            Solo se copian aquellos atributos que coinciden en nombre y tipo en el origen y destino.
            CopyAs es más rápido que este método, por lo que siempre que se pueda garantizar la compatibilidad de esquemas se debería usar CopyAs.
            </remarks>
            <returns>Copia del objeto actual con el tipo deseado.</returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.CopyAttributes(unoGIS.Entities.Geometry,unoGIS.Entities.Geometry)">
            <summary>
            Copia todos los atributos alfanuméricos entre entidades
            </summary>
            <param name="source">Origen de la copia</param>
            <param name="target">Destino de la copia</param>
            <returns>true si la copia se realizó con éxito</returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.CopyAttributes(unoGIS.Entities.Geometry,unoGIS.Entities.Geometry,System.Boolean,System.Boolean)">
            <summary>
            Copia atributos alfanuméricos entre entidades
            </summary>
            <param name="source">Origen de la copia</param>
            <param name="target">Destino de la copia</param>
            <param name="onlyRequired">Indica si sólo se copian los atributos requeridos</param>
            <param name="copyGUID">GUID de la copia</param>
            <returns>true si la copia se realizó con éxito</returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Centroid">
            <summary>
            Devuelve una coordenada que es el centro de la geometría y, asegura que se encuentra dentro de la geometría     
            </summary>
            <returns>
            Coordenada calculada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.GetCoordinates">
            <summary>
            Devuelve un enumerador sobre todas las coordenadas de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las coordenadas que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.GetSegments">
            <summary>
            Devuelve un enumerador sobre todos los segmentos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los segmentos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.GetLines">
            <summary>
            Devuelve un enumerador sobre todas las LineString de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las LineString de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.GetRings">
            <summary>
            Devuelve un enumerador sobre todos los anillos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los anillos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Buffer(System.Double)">
            <summary>
            Crea un buffer de la geometría.
            </summary>
            <param name="distance">
            Distancia a la que se desea crear el buffer.
            </param>
            <returns>
            Polígono que representa el buffer a la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Transform(unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Transforma el sistema de coordenadas de la geometría empleando el CoordinateSystemsConverter facilitado.
            </summary>
            <param name="csc">
            CoordinateSystemsConverter en el que se delega la conversión de coordenadas.
            </param>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Transform(unoGIS.Renderer.Matrix3D)">
            <summary>
            Transforma la geometría por una matriz
            </summary>
            <param name="matrix">Matrix 4x4</param>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Clip(unoGIS.Entities.Geometry)">
            <summary>
            Clip sobre otra geometría
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Erase(unoGIS.Entities.Geometry)">
            <summary>
            Erase sobre otra geometría
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.NotOverlay(unoGIS.Entities.Geometry)">
            <summary>
            NotOverlay sobre otra geometría
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.NotWithin(unoGIS.Entities.Geometry)">
            <summary>
            NotWithin sobre otra geometría
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Overlay(unoGIS.Entities.Geometry)">
            <summary>
            Overlay sobre otra geometría
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Within(unoGIS.Entities.Geometry)">
            <summary>
            Within sobre otra geometría
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Fence">
            <summary>
            Comprueba si la geometría cumple con el cercado activo
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.NotOverlay(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry})">
            <summary>
            NotOverlay sobre un conjunto de geometrias
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.NotWithin(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry})">
            <summary>
            NotWithin sobre un conjunto de geometrias
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Overlay(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry})">
            <summary>
            Overlay sobre un conjunto de geometrias
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.Within(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry})">
            <summary>
            Within sobre un conjunto de geometrias
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Geometry.EnumType">
            <summary>
            Devuelve el tipo de geometría.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Geometry.CoordinateType">
            <summary>
            Tipo de coordenada (2D, 3D, 2DM, 3DM)
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Geometry.FixBox">
            <summary>
            Actualiza la caja que contiene a la geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Geometry.GetBoundingBox">
            <summary>
            Retorna la caja contenedora de la geometría.
            </summary>
            <returns>
            BoundingBox que contiene a la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Geometry.CompareTo(System.Object)">
            <summary>
            Comparación contra otra gemetría
            </summary>
            <param name="obj"></param>
            <returns>0 si es igual, -1 si es diferente</returns>
        </member>
        <member name="P:unoGIS.Entities.Geometry.xmin">
            <summary>
            Coordenada mínima X
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Geometry.ymin">
            <summary>
            Coordenada mínima Y
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Geometry.xmax">
            <summary>
            Coordenada máxima X
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Geometry.ymax">
            <summary>
            Coordenada máxima Y
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Geometry.WkbGeometry">
            <summary>
            Geometría serializada.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Geometry.Fields">
            <summary>
            Campos/Propiedades/Atributos de la geometría.
            </summary>   
        </member>
        <member name="T:unoGIS.Entities.FieldIndexer">
            <summary>
            Clase que gestiona un indexador de las propiedades de una geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.#ctor(unoGIS.Entities.Geometry)">
            <summary>
            Crea un indexador para las propiedades de una geometría.
            </summary>
            <param name="g">
            Geometría sobre la que se construye el indexador.
            </param>
        </member>
        <member name="P:unoGIS.Entities.FieldIndexer.Item(System.Int32)">
            <summary>
            Devuelve el elemento de la posición indicada.
            </summary>
            <param name="index">
            Indice base 0 del elemento a devolver.
            </param>
            <returns>
            Elemento correspondiente.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.HasProperty(System.String)">
            <summary>
            Indica si existe una propiedad
            </summary>
            <param name="propertyName">Nombre de la propiedad</param>
            <returns>'true' si existe.</returns>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.GetPropertyInfo(System.Int32)">
            <summary>
            Recupera la propiedad segun el indice
            </summary>
            <param name="index">Indice de la propiedad</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.GetPropertyInfo(System.String)">
            <summary>
            Recupera la propiedad segun nombre
            </summary>
            <param name="propertyName">Nombre de la propiedad</param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.FieldIndexer.Item(System.String)">
            <summary>
            Devuelve el elemento de nombre especificado.
            </summary>
            <param name="name">
            Nombre del elemento a devolver.
            </param>
            <returns>
            Elemento correspondiente.
            </returns>
        </member>
        <member name="P:unoGIS.Entities.FieldIndexer.Length">
            <summary>
            Cantidad de elementos en la colección.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.GetName(System.Int32)">
            <summary>
            Devuelve el nombre del elemento de la posición indicada.
            </summary>
            <param name="index">Posición del elemento.</param>
            <returns>
            Nombre del elemento.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.GetColumnName(System.Int32)">
            <summary>
            Nombre del atributo columna
            </summary>
            <param name="index">Indice del campo</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.IsRequired(System.Int32)">
            <summary>
            Campo con el atributo requerido
            </summary>
            <param name="index">Indice del campo</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.EmptyAttributes">
            <summary>
            Asigna los valores alfanuméricos por defecto a la entidad
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.IsValidEntity">
            <summary>
            Valida los datos alfanuméricos de una entidad
            </summary>
            <returns>true si la entidad es válida</returns>
        </member>
        <member name="M:unoGIS.Entities.FieldIndexer.Equals(unoGIS.Entities.FieldIndexer)">
            <summary>
            Compara dos FieldIndexer campo a campo y, si los valores coinciden, devuelve true.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Entities.GeometryEnumType">
            <summary>
            Enumerador que indica los distintos tipos de geometrias soportadas.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.GeometryEnumType.Geometry">
            <summary>
            Tipo de geometría base del que heredan el resto de geometrías.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.GeometryEnumType.Point">
            <summary>
            Geometría que se representa por una unica coordenada.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.GeometryEnumType.Polygon">
            <summary>
            Geometría que representa polígonos.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.GeometryEnumType.MultiPoint">
            <summary>
            Geometría que representa un conjunto de geometrías Point.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.GeometryEnumType.Polyline">
            <summary>
            Geometría que representa una o N polilineas.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.GeometryEnumType.MultiGeometry">
            <summary>
            Geometría que representa un conjunto de geometrías.
            </summary>
        </member>
        <member name="F:unoGIS.Entities.GeometryEnumType.Raster">
            <summary>
            Geometría que representa una imagen.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.GeometryIO.GeometryWKBReader">
            <summary>
            Clase que deserializa una geometría en formato WKT.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.GeometryIO.WKBByteOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.Entities.GeometryIO.WKBByteOrder.wkbXDR">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.Entities.GeometryIO.WKBByteOrder.wkbNDR">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Entities.GeometryIO.GeometryWKBWriter">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Entities.GeometryIO.GeometryWKTWriter">
            <summary>
            Clase que serializa al formato WKT una geometría.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.HistoryOperation">
            <summary>
            Tipo de operación histórica
            </summary>
        </member>
        <member name="T:unoGIS.Entities.IAnnotation">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IAnnotation.Angle">
            <summary>
            Ángulo
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IAnnotation.Text">
            <summary>
            Texto
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IAnnotation.Height">
            <summary>
            Altura
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IAnnotation.Justification">
            <summary>
            Justificación
            </summary>
        </member>
        <member name="T:unoGIS.Entities.Justification">
            <summary>
            Enumerativo de las distintas justificaciones de los textos
            </summary>
            <remarks>Cada valor indica la posición del punto de inserción con respecto al texto.</remarks>
        </member>
        <member name="F:unoGIS.Entities.Justification.J_LT">
            <summary>
            Izquierda arriba
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Justification.J_LC">
            <summary>
            Izquierda centro
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Justification.J_LB">
            <summary>
            Izquierda abajo
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Justification.J_CT">
            <summary>
            Centro arriba
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Justification.J_CC">
            <summary>
            Centro centro
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Justification.J_CB">
            <summary>
            Centro abajo
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Justification.J_RT">
            <summary>
            Derecha arriba
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Justification.J_RC">
            <summary>
            Derecha centro
            </summary>
        </member>
        <member name="F:unoGIS.Entities.Justification.J_RB">
            <summary>
            Derecha abajo
            </summary>
        </member>
        <member name="T:unoGIS.Entities.AnnotationExtends">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Entities.AnnotationExtends.UpdateDictionary(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:unoGIS.Entities.AnnotationExtends.GetDynamicText(unoGIS.Entities.IAnnotation)">
            <summary>
            
            </summary>
            <param name="annotation"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.AnnotationExtends.GetDynamicText(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.AnnotationExtends.ParseDynamicText(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Entities.IEntity">
            <summary>
            Define los campos mínimos de una entidad
            </summary>
        </member>
        <member name="T:unoGIS.Entities.INode">
            <summary>
            La interfaz INode, se utiliza para las relaciones topológicas de las entidades.
            Varias entidades pueden enlazar con una entidad INode, lo que permite conocer la conexión entre ellas.
            </summary>
            <remarks>
            Las entidades INode son entidades IPoint, por lo que su representación es puntual y se comporta como tal.
            </remarks>
        </member>
        <member name="T:unoGIS.Entities.LinearRing">
            <summary>
            Anillo 
            </summary>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.#ctor(System.Collections.Generic.IEnumerable{unoGIS.Entities.Coordinate})">
            <summary>
            Constructor
            </summary>
            <param name="coordinates"></param>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.Clone">
            <summary>
            Crea una copia de la instancia actual.
            </summary>
            <returns>LinearRing clonado.</returns>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.CoordinateInRing(unoGIS.Entities.Coordinate)">
             <summary>
             Coordenada respecto a un anillo.
             Determina la posición de una coordenada con respecto a un anillo.
             </summary>
             <param name="c">Coordenada a testar.</param>
             <returns>
             Retorna 1 si la coordenada es interior al anillo.
             Retorno -1 si la coordenada es exterior al anillo.
             Retorno 0 si la coordenada está en la frontera.
             </returns>
             <remarks>
             Algoritmo:
             Trazar una línea del punto a mas infinito con la misma Y del punto.
             Contar la cantidad de intersecciónes con las aristar del polígono.
             Si la cantidad de intersecciones es impar el punto esta dentro.
            
             Encontrar un vértice que no este en la línea al infinito. Procesar cada
             arista. Si la arista es horizontal no procesarla.
             </remarks>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.IntersectRing(unoGIS.Entities.LinearRing)">
            <summary>
            Funcion que calcula si se intersectan dos anillos.
            </summary>
            <param name = "ring">Ring a intersectar.</param>
            <returns>"true" o "false" en dependencia de si se intersectan o no las áreas.</returns>
            <remarks>Usese esta función para comprobar si se interceptan dos poligonos
            considerando el interior del polígono, Ya que lleva a cabo un chequeo de 
            inclusión y puede ser mas eficiente. Para comprobar si se interceptan
            dos arreglos de vertices, use mejor InterceptPolylines.</remarks>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.IsClockwise">
            <summary>
            Obtiene el sentido del anillo
            </summary>
            <returns>True esta a favor de las manecillas de reloj, False en contra</returns>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.Area2D">
            <summary>
            Devuelve el área del anillo.
            </summary>
            <returns>Area del anillo</returns>
            <remarks>Si es positiva significa que el anillo esta a favor de las manecillas del reloj</remarks>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.Perimeter2D">
            <summary>
            Devuelve el perímetro exterior del shape en 2D
            </summary>
            <returns>Perimetro calculado.</returns>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.Perimeter3D">
            <summary>
            Devuelve el perímetro exterior del shape en 3D
            </summary>
            <returns>Perimetro calculado.</returns>
        </member>
        <member name="M:unoGIS.Entities.LinearRing.IsSimple">
            <summary>
            Chequea si los segmentos que se forman a partir del arreglo de coordenadas del anillo
            se cortan entre si.
            </summary>
            <returns>Devuelve true si los segmentos no se cortan, falso en el caso contrario.</returns>
        </member>
        <member name="T:unoGIS.Entities.LineString">
            <summary>
            Clase que identifica a una linea.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.LineString.#ctor">
            <summary>
            Inicializa una instancia de la clase sin ninguna coordenadas
            </summary>
        </member>
        <member name="M:unoGIS.Entities.LineString.#ctor(System.Collections.Generic.IEnumerable{unoGIS.Entities.Coordinate})">
            <summary>
            Constructor
            </summary>
            <param name="coordinates">Colección de coordenadas con las que se inicializará la nueva LineString.</param>
        </member>
        <member name="P:unoGIS.Entities.LineString.Coordinates">
            <summary>
            Coordenadas.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.LineString.FromNode">
            <summary>
            Obtiene o establece la primera coordenada.
            </summary>
            <remarks>
            Coordinates debe disponer al menos de un elemento, de lo contrario se produce una excepción.
            </remarks>
        </member>
        <member name="P:unoGIS.Entities.LineString.ToNode">
            <summary>
            Obtiene o establece la última coordenada.
            </summary>
            <remarks>
            Coordinates debe disponer al menos de un elemento, de lo contrario se produce una excepción.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.LineString.CoordinateToDistance(System.Double)">
            <summary>
            Cálcula la coordenada que dista del origen la distancia especificada.
            </summary>
            <param name="distance"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.AddVector(unoGIS.Entities.Coordinate)">
            <summary>
            Traslada el elemento
            </summary>
            <param name="vector">Vector de traslación</param>
        </member>
        <member name="M:unoGIS.Entities.LineString.Centroid">
            <summary>
            Devuelve una coordenada que es el centro de la geometría y, asegura que se encuentra dentro de la geometría
            </summary>
            <returns>
            Coordenada calculada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.GetCoordinates">
            <summary>
            Devuelve un enumerador sobre todas las coordenadas de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las coordenadas que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.GetSegments">
            <summary>
            Crea un enumerador con los segmentos que conforma la LineString.
            </summary>
            <returns>IEnumerable con los segmentos que conforman la LineString.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.ProjectCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Proyecta una coordenada sobre la LineString.
            Se busca el segmento más próximo a la coordenada y se devuelve el punto del segmento más próximo a la coordenada.
            </summary>
            <param name="coord"></param>
            <returns>
            Si la operación falla, se devuelce null.
            Si la proyección tiene exito, se devuelve una coordenada comprendida en la linestring.
            La coordenada devuelta, será la más próxima de la LineString a coordenada pasada como parámetro.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Parallel(System.Double)">
            <summary>
            Crea una LineString paralela a la seleccionada a la distancia pasada por parámetros.
            </summary>
            <param name="dist">Distancia en m.</param>
            <returns>Devuelve LineString paralela</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.DistanceToCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Calcula la distancia mínima de la LineString a una coordenada.
            </summary>
            <param name="coord"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Equals(System.Object)">
            <summary>
            Especifica cuando el objeto especificado es igual al objeto actual.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Equals(unoGIS.Entities.LineString)">
            <summary>
            Indica si 2 lineas son iguales
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Equals2D(unoGIS.Entities.LineString)">
            <summary>
            Indica si 2 lineas son iguales en 2D
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Equals3D(unoGIS.Entities.LineString)">
            <summary>
            Indica si 2 lineas son iguales en 3D
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Distance(unoGIS.Entities.LineString)">
            <summary>
            Distancia a otra Line
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Lenght2D">
            <summary>
            Longitud en 2D
            </summary>
            <returns>Retorna la longitud en 2D.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.LenghtGeographic">
            <summary>
            Longitud en 2D con coordenadas Geográficas
            </summary>
            <returns>Retorna la longitud en 2D.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Lenght3D">
            <summary>
            Longitud en 3D
            </summary>
            <returns>Retorna la longitud en 3D.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.GetBoundingBox">
            <summary>
            Calcula el BoundingBox. Se ha puesto como método para que el programador
            tenga en cuenta que el BoundingBox se calcula en cada llamada.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Clone">
            <summary>
            Crea una copia de la instancia actual.
            </summary>
            <returns>LineString clonado.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.IsClosed">
            <summary>
            Determina si el anillo esta cerrado.
            Para que un anillo este cerrado, la primera coordenada debe ser identica a la última. (XYZM).
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Clip(unoGIS.Entities.LineString)">
            <summary>
            Intersecta una polilínea pasada por parametro con la polilinea
            actual y devuelve una lista con todas las polilineas resultantes.
            En el resultado solo se incluyen los pedazos de la polilínea pasada
            por parametro.
            </summary>
            <param name="line">Polilinea a recortar</param>
            <returns>Lista de lineas resultantes del cliping</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.CutInCoordinate(System.Int32,unoGIS.Entities.Coordinate,unoGIS.Entities.LineString@,unoGIS.Entities.LineString@)">
            <summary>
            Corta la línea en dos
            </summary>
            <param name="nSegment">índice base 0 del segmento por donde se quiere cortar.</param>
            <param name="coordinate">punto por donde se quiere cortar</param>
            <param name="firstPart">linea resultante del corte</param>
            <param name="secondPart">linea resultante del corte</param>
            <returns>
            True si la operación tiene exito.
            False si no tiene exito y firstPart y secondPart serán null, por ejemplo si
            point coincide con el primer o ultimo vertice de la línea.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateCurve(System.Double)">
            <summary>
            Crea una nueva instancia de la clase LtnLine usando el algoritmo del spline.
            </summary>
            <param name="stroke">Distancia máxima (en milimetros) entre la curva teórica y
            cualquiera de los segmentos de la polilínea que se obtiene como resultado.
            Cuanto menor sea el valor del stroke, mayor cantidad de vértices tendrá el
            resultado.</param>
            <returns>Devuelve la instancia de la clase LtnLine creada.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Contained(unoGIS.Entities.LineString)">
            <summary>
            Determina si una LineString esta contenida en esta LineString.
            </summary>
            <param name="ls"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Purge">
            <summary>
            Obtiene un LineString a partir del actual donde nunca una coordenada es igual a la anterior.
            </summary>
            <returns>LineString sin puntos consecutivos iguales.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.Densify(System.Double)">
            <summary>
            Densifica la LineString dividiendo por la mitad aquellos segmentos que tengan una longitud superior al parámetro distance.
            El proceso se repite hasta que la longitud de todos los segmentos es inferior al parámetro distance.
            </summary>
            <param name="distance">Longitud máxima que tendrán los segmentos después del proceso.</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.SimplifyDouglasPeucker(System.Double)">
            <summary>
            Proceso de Simplificación de una LineString segun el algoritmo Douglas Peucker
            </summary>
            <param name="tolerance">Tolerancia</param>
            <returns>Devuelve una LineString simplificada</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.SimplifyDouglasPeucker(System.Double,System.Collections.Generic.Dictionary{unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate}@)">
            <summary>
            Proceso de Simplificación de una LineString segun el algoritmo Douglas Peucker aplicando Tensores
            </summary>
            <param name="tolerance">Tolerancia</param>
            <returns>Devuelve una LineString simplificada</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.SimplifyVisvalingam(System.Double)">
            <summary>
            Proceso de Simplificación de una LineString segun el algoritmo Visvalingam - Area Efectiva
            </summary>
            <param name="tolerance">Tolerancia</param>
            <returns>Devuelve una LineString simplificada</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.SimplifyLang(System.Int32,System.Double)">
            <summary>
            Proceso de Simplificación de una LineString segun el algoritmo de Lang
            </summary>
            <param name="tolerance">Tolerancia</param>
            <returns>Devuelve una LineString simplificada</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.SuavizeMcMaster">
            <summary>
            Proceso de Suavizado de una LineString segun el algoritmo de Medias Ponderadas de McMaster
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.GetCircumferenceFromPoints(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate@,System.Double@)">
            <summary>
            Dados tres puntos, obtiene el centro y radio de la circunferencia que pasa por ellos.
            </summary>
            <param name="vertexA">Primer punto.</param>
            <param name="vertexB">Segundo punto.</param>
            <param name="vertexC">Tercer punto.</param>
            <param name="center">Centro de la circunferecia.</param>
            <param name="radius">Radio de la circunferencia.</param>
            <remarks>El punto centro obtenido tiene la coordenada z del primer vertice.</remarks>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateArc(unoGIS.Entities.Coordinate,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Crea una inatancia de la clase LtnLine que aproxima a un arco.
            </summary>
            <param name="center">Centro del arco.</param>
            <param name="axisA">Eje primario de la elipse.</param>
            <param name="axisB">Eje secundario de la elipse.</param>
            <param name="Rotation">Angulo de rotación.</param>
            <param name="startAngle">Angulo inicial de barrido.</param>
            <param name="endAngle">Angulo final de barrido.</param>
            <param name="stroke">
            Distancia máxima (en milimetros) entre la curva teórica y
            cualquiera de los segmentos de la polilínea que se obtiene como resultado.
            Cuanto menor sea el valor del stroke, mayor cantidad de vértices tendrá el
            resultado.
            </param>
            <param name="startZ">
            Componente Z de la coordenada inicial.
            </param>
            <param name="endZ">
            Componente Z de la coordenada final.
            </param>
            <returns>
            Una polilinea que aproxima al arco que definen los parámetros.</returns>
            <remarks>
            El signo del valor stroke define el sentido, horario o antihorario en que crecerá el arco.
            La componente Z de las coordenadas será una interpolación desde el valor startZ hasta el valor endZ.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateArc(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,System.Double)">
            <summary>
            Crea una instancia de la clase LtnLine que aproxima un arco que pasa por los puntos en parámetro.
            </summary>
            <param name="vertexA">Punto inicial del arco.</param>
            <param name="vertexB">Punto medio.</param>
            <param name="vertexC">Punto final del arco.</param>
            <param name="stroke">Distancia máxima (en milimetros) entre la curva teórica y
            cualquiera de los segmentos de la polilínea que se obtiene como resultado.
            Cuanto menor sea el valor del stroke, mayor cantidad de vértices tendrá el
            resultado.</param>
            <returns>Polilinea que aproxima al arco.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateArcByStep(unoGIS.Entities.Coordinate,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Crea una inatancia de la clase LtnLine que aproxima a un arco.
            </summary>
            <param name="center">Centro del arco.</param>
            <param name="axisA">Eje primario de la elipse.</param>
            <param name="axisB">Eje secundario de la elipse.</param>
            <param name="Rotation">Angulo de rotación.</param>
            <param name="startAngle">Angulo inicial de barrido.</param>
            <param name="endAngle">Angulo final de barrido.</param>
            <param name="step">Variación en radianes de un punto de la poilinea a otro.</param>
            <returns>Una polilinea que aproxima al arco que definen los parámetros.</returns>
            <remarks>
            El signo del valor step define el sentido, horario o antihorario en que crecerá el arco.
            </remarks>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateArcByStep(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,System.Double)">
            <summary>
            Crea una instancia de la clase LtnLine que aproxima un arco que pasa por los puntos en parámetro.
            </summary>
            <param name="vertexA">Punto inicial del arco.</param>
            <param name="vertexB">Punto medio.</param>
            <param name="vertexC">Punto final del arco.</param>
            <param name="step">variación del angulo.</param>
            <returns>Polilinea que aproxima al arco.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateCircle(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,System.Double)">
            <summary>
            Crea una instancia de la clase LtnLine que aproxima una circunferencia que pasa por los puntos en parámetro.
            </summary>
            <param name="vertexA">Primer punto.</param>
            <param name="vertexB">Segundo punto.</param>
            <param name="vertexC">Tercer punto.</param>
            <param name="stroke">Distancia máxima (en milimetros) entre la curva teórica y
            cualquiera de los segmentos de la polilínea que se obtiene como resultado.
            Cuanto menor sea el valor del stroke, mayor cantidad de vértices tendrá el
            resultado.</param>
            <returns>Polilinea que aproxima la circunferencia.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateCircle(unoGIS.Entities.Coordinate,System.Double,System.Double)">
            <summary>
            Crea una instancia de la clase LtnLine que aproxima una circunferencia
            </summary>
            <param name="center">Centro de la circunferencia.</param>
            <param name="radius">Radio de la circunferencia.</param>
            <param name="stroke">Distancia máxima (en milimetros) entre la curva teórica y
            cualquiera de los segmentos de la polilínea que se obtiene como resultado.
            Cuanto menor sea el valor del stroke, mayor cantidad de vértices tendrá el
            resultado.</param>
            <returns>Polilinea que aproxima la circunferencia.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateCircleByStep(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,System.Double)">
            <summary>
            Crea una instancia de la clase LtnLine que aproxima una circunferencia que pasa por los puntos en parámetro.
            </summary>
            <param name="vertexA">Primer punto.</param>
            <param name="vertexB">Segundo punto.</param>
            <param name="vertexC">Tercer punto.</param>
            <param name="step">variación del angulo.</param>
            <returns>Polilinea que aproxima la circunferencia.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateCircleByStep(unoGIS.Entities.Coordinate,System.Double,System.Double)">
            <summary>
            Crea una instancia de la clase LtnLine que aproxima una circunferencia
            </summary>
            <param name="center">Centro de la circunferencia.</param>
            <param name="radius">Radio de la circunferencia.</param>
            <param name="step">variación del angulo.</param>
            <returns>Polilinea que aproxima la circunferencia.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateRectangleBy2P(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
            <summary>
            Crea una instancia de la clase LineString que representa un rectangulo definido por 2 puntos.
            </summary>
            <returns>Instancia de la clase LineString que representa al rectangulo.</returns>
        </member>
        <member name="M:unoGIS.Entities.LineString.CreateRectangleBy3P(unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate,unoGIS.Entities.Coordinate)">
            <summary>
            Crea una instancia de la clase LineString que representa un rectangulo definido por 3 puntos.
            </summary>
            <returns>Instancia de la clase LineString que representa al rectangulo.</returns>
        </member>
        <member name="T:unoGIS.Entities.IMultiGeometry">
            <summary>
            Interfaz para las GeometryCollection.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.IMultiGeometry.NumGeometries">
            <summary>
            Devuelve el número de gemetrias
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.IMultiGeometry.GeometryN(System.Int32)">
            <summary>
            Devuelve la geometría N
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Entities.MultiGeometry">
            <summary>
            Colección de geometrías.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.MultiGeometry.Geometries">
            <summary>
            Geometrías.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.#ctor(unoGIS.Entities.Geometry[])">
            <summary>
            Constructor
            </summary>
            <param name="geometries"></param>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.NumGeometries">
            <summary>
            Devuelve el número de gemetrias
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.GeometryN(System.Int32)">
            <summary>
            Devuelve la geometría N
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.MultiGeometry.EnumType">
            <summary>
            Devuelve el tipo de geometría
            </summary>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.FixBox">
            <summary>
            Actualiza la caja mínima.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.AddVector(unoGIS.Entities.Coordinate)">
            <summary>
            Traslada el elemento
            </summary>
            <param name="vector">Vector de traslación</param>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.DistanceToCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la minima distancia de la geometria a la coordenada pasada como parametro.
            </summary>
            <param name="coord">Coordenada sobre el que se calcula la distancia</param>
            <returns>Distancia a la coordenada</returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.Distance(unoGIS.Entities.Geometry)">
            <summary>
            Devuelve la distancia de la goemetría actual a otra pasada como parámetro.
            </summary>
            <param name="another">
            Geometría a la cual se le calculará la distancia.
            </param>
            <returns>
            Distancia entre las dos geometrías.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.Dimension">
            <summary>
            Dimensión.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.Equals(unoGIS.Entities.Geometry)">
            <summary>
            Determina si 2 GeometryCollection son iguales
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.Clone">
            <summary>
            Crea una copia del objeto actual.
            </summary>
            <returns>
            Copia del objeto.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.CloneAttributes">
            <summary>
            Realiza una copia de los atributos del objeto actual.
            La diferencia con el método Clone es que no se clona la geometría, solo los atributos.
            </summary>
            <returns>Copia de los atributos de la entidad</returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.Centroid">
            <summary>
            Devuelve una coordenada que es el centro de la geometría y, asegura que se encuentra dentro de la geometría
            </summary>
            <returns>
            Coordenada calculada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.GetCoordinates">
            <summary>
            Devuelve un enumerador sobre todas las coordenadas de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las coordenadas que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.GetSegments">
            <summary>
            Devuelve un enumerador sobre todos los segmentos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los segmentos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.GetLines">
            <summary>
            Devuelve un enumerador sobre todas las LineString de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las LineString de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.GetRings">
            <summary>
            Devuelve un enumerador sobre todos los anillos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los anillos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.Transform(unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Aplica una transformación de coordenadas a la geometría.
            </summary>
            <param name="csc">
            Conversor de coordenadas que se va a aplicar a la transformación.
            </param>
        </member>
        <member name="M:unoGIS.Entities.MultiGeometry.Transform(unoGIS.Renderer.Matrix3D)">
            <summary>
            Transforma la geometría por una matriz
            </summary>
            <param name="matrix">Matrix3D</param>
        </member>
        <member name="T:unoGIS.Entities.IMultiPoint">
            <summary>
            Interfaz para las geometrias MultiPoint.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IMultiPoint.Coordinates">
            <summary>
            Lista de coordenadas de la geometria.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.MultiPoint">
            <summary>
            Multipunto
            </summary>
        </member>
        <member name="P:unoGIS.Entities.MultiPoint.Coordinates">
            <summary>
            Coordenadas
            </summary>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.#ctor(System.Collections.Generic.IEnumerable{unoGIS.Entities.Coordinate})">
            <summary>
            Constructor
            </summary>
            <param name="coordinates"></param>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.AddVector(unoGIS.Entities.Coordinate)">
            <summary>
            Traslada el elemento
            </summary>
            <param name="vector">Vector de traslación</param>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.DistanceToCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la minima distancia de la geometria a la coordenada pasada como parametro.
            </summary>
            <param name="coord">Coordenada sobre el que se calcula la distancia</param>
            <returns>Distancia a la coordenada</returns>
            <remarks>Puede ser de gran importancia para la localizacion de elementos.</remarks>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.Distance(unoGIS.Entities.Geometry)">
            <summary>
            Distancia euclidiana con respecto a otra geometría.
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.Equals(unoGIS.Entities.Geometry)">
            <summary>
            Indica si es igual a otra geometría.
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.FixBox">
            <summary>
            Recalcula la caja de la geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.Dimension">
            <summary>
            Devuelve la dimension
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.MultiPoint.EnumType">
            <summary>
            Devuelve el tipo
            </summary>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.Clone">
            <summary>
            Crea una copia del objeto actual.
            </summary>
            <returns>
            Copia del objeto.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.CloneAttributes">
            <summary>
            Realiza una copia de los atributos del objeto actual.
            La diferencia con el método Clone es que no se clona la geometría, solo los atributos.
            </summary>
            <returns>Copia de los atributos de la entidad</returns>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.Centroid">
            <summary>
            Devuelve una coordenada que es el centro de la geometría y, asegura que se encuentra dentro de la geometría 
            </summary>
            <returns>
            Coordenada calculada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.GetCoordinates">
            <summary>
            Devuelve un enumerador sobre todas las coordenadas de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las coordenadas que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.GetSegments">
            <summary>
            Devuelve un enumerador sobre todos los segmentos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los segmentos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.GetLines">
            <summary>
            Devuelve un enumerador sobre todas las LineString de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las LineString de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.GetRings">
            <summary>
            Devuelve un enumerador sobre todos los anillos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los anillos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.Transform(unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Aplica una transformación de coordenadas a la geometría.
            </summary>
            <param name="csc">
            Conversor de coordenadas que se va a aplicar a la transformación.
            </param>
        </member>
        <member name="M:unoGIS.Entities.MultiPoint.Transform(unoGIS.Renderer.Matrix3D)">
            <summary>
            Transforma la geometría por una matriz
            </summary>
            <param name="matrix">Matrix3D</param>
        </member>
        <member name="T:unoGIS.Entities.IPoint">
            <summary>
            Interfaz que representa una geometria de tipo Point.
            Las geometrias Point son aquellas que representan una información puntual y
            se georeferencian con una Coordinate.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IPoint.Coordinate">
            <summary>
            Coordenada de la geometría Point.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.Point">
            <summary>
            Clase que representa una geometría de tipo Point.
            Las geometrías Point son aquellas que representan una información puntual y
            se georeferencian con una única coordenada.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Point.#ctor">
            <summary>
            Inicializa una nueva instancia de Point con la coordenada facilitada.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Point.#ctor(unoGIS.Entities.Coordinate)">
            <summary>
            Inicializa una nueva instancia de Point con la coordenada facilitada.
            </summary>
            <param name="coordinate">
            Coordenada que se asigna al Point.
            </param>
        </member>
        <member name="P:unoGIS.Entities.Point.Coordinate">
            <summary>
            Coordenada de la geometría Point.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Point.EnumType">
            <summary>
            Devuelve el tipo de geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Point.FixBox">
            <summary>
            Actualiza la caja que contiene a la geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Point.Dimension">
            <summary>
            Devuelve 0, un punto no tiene dimensiones
            </summary>
            <returns>
            0, un punto no tiene dimensiones.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Point.Equals(unoGIS.Entities.Geometry)">
            <summary>
            Determina si la geometría actual es geometricamente igual a otra geometría.
            </summary>
            <param name="another">
            Geometría con la que se realiza la comparación.
            </param>
            <returns>
            Retorna true si ambas geometrías son iguales.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Point.AddVector(unoGIS.Entities.Coordinate)">
            <summary>
            Traslada el elemento
            </summary>
            <param name="vector">Vector de traslación</param>
        </member>
        <member name="M:unoGIS.Entities.Point.DistanceToCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la minima distancia de la geometria a la coordenada pasada como parametro.
            </summary>
            <param name="coord">Coordenada sobre el que se calcula la distancia</param>
            <returns>Distancia a la coordenada</returns>
            <remarks>Puede ser de gran importancia para la localizacion de elementos.</remarks>
        </member>
        <member name="M:unoGIS.Entities.Point.Distance(unoGIS.Entities.Geometry)">
            <summary>
            Devuelve la distancia de la goemetría actual a otra pasada como parámetro.
            </summary>
            <param name="another">
            Geometría a la cual se le calculará la distancia.
            </param>
            <returns>
            Distancia entre las dos geometrías.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Point.Clone">
            <summary>
            Crea una copia del objeto actual.
            </summary>
            <returns>
            Copia del objeto.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Point.CloneAttributes">
            <summary>
            Realiza una copia de los atributos del objeto actual.
            La diferencia con el método Clone es que no se clona la geometría, solo los atributos.
            </summary>
            <returns>Copia de los atributos de la entidad</returns>
        </member>
        <member name="M:unoGIS.Entities.Point.Centroid">
            <summary>
            Devuelve una coordenada que es el centro de la geometría y, asegura que se encuentra dentro de la geometría
            </summary>
            <returns>
            Coordenada calculada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Point.GetCoordinates">
            <summary>
            Devuelve un enumerador sobre todas las coordenadas de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las coordenadas que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Point.GetSegments">
            <summary>
            Devuelve un enumerador sobre todos los segmentos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los segmentos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Point.GetLines">
            <summary>
            Devuelve un enumerador sobre todas las LineString de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las LineString de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Point.GetRings">
            <summary>
            Devuelve un enumerador sobre todos los anillos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los anillos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Point.Transform(unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Aplica una transformación de coordenadas a la geometría.
            </summary>
            <param name="csc">
            Conversor de coordenadas que se va a aplicar a la transformación.
            </param>
        </member>
        <member name="M:unoGIS.Entities.Point.Transform(unoGIS.Renderer.Matrix3D)">
            <summary>
            Transforma la geometría por una matriz
            </summary>
            <param name="matrix">Matrix3D</param>
        </member>
        <member name="T:unoGIS.Entities.IPolygon">
            <summary>
            Interfaz que define a un poligono.
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IPolygon.Rings">
            <summary>
            Lista de anillos de la que se compone el polígono.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.Polygon">
            <summary>
            Poligono.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Polygon.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Polygon.#ctor(System.Collections.Generic.IEnumerable{unoGIS.Entities.LinearRing})">
            <summary>
            Constructor
            </summary>
            <param name="rings"></param>
        </member>
        <member name="P:unoGIS.Entities.Polygon.Rings">
            <summary>
            Lista de anillos de la que se compone el polígono.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Polygon.ToLineString">
            <summary>
            Lista de lineString de la que se compone el polígono.
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Polygon.EnumType">
            <summary>
            Devuelve el tipo de geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Polygon.FixBox">
            <summary>
            Actualiza la caja que contiene a la geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Polygon.AddVector(unoGIS.Entities.Coordinate)">
            <summary>
            Traslada el elemento
            </summary>
            <param name="vector">Vector de traslación</param>
        </member>
        <member name="M:unoGIS.Entities.Polygon.DistanceToCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la minima distancia de la geometria a la coordenada pasada como parametro.
            </summary>
            <param name="coord">Coordenada sobre el que se calcula la distancia</param>
            <returns>Distancia a la coordenada</returns>
            <remarks>Puede ser de gran importancia para la localizacion de elementos.</remarks>
        </member>
        <member name="M:unoGIS.Entities.Polygon.Distance(unoGIS.Entities.Geometry)">
            <summary>
            Devuelve la distancia de la goemetría actual a otra pasada como parámetro.
            </summary>
            <param name="another">
            Geometría a la cual se le calculará la distancia.
            </param>
            <returns>
            Distancia entre las dos geometrías.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.Dimension">
            <summary>
            Dimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.Equals(unoGIS.Entities.Geometry)">
            <summary>
            Determina si la geometría actual es geometricamente igual a otra geometría.
            </summary>
            <param name="another">
            Geometría con la que se realiza la comparación.
            </param>
            <returns>
            Retorna true si ambas geometrías son iguales.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.Clone">
            <summary>
            Crea una copia del objeto actual.
            </summary>
            <returns>
            Copia del objeto.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.CloneAttributes">
            <summary>
            Realiza una copia de los atributos del objeto actual.
            La diferencia con el método Clone es que no se clona la geometría, solo los atributos.
            </summary>
            <returns>Copia de los atributos de la entidad</returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.GetCoordinates">
            <summary>
            Devuelve un enumerador sobre todas las coordenadas de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las coordenadas que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.GetSegments">
            <summary>
            Devuelve un enumerador sobre todos los segmentos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los segmentos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.GetLines">
            <summary>
            Devuelve un enumerador sobre todas las LineString de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las LineString de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.GetRings">
            <summary>
            Devuelve un enumerador sobre todos los anillos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los anillos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.Transform(unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Aplica una transformación de coordenadas a la geometría.
            </summary>
            <param name="csc">
            Conversor de coordenadas que se va a aplicar a la transformación.
            </param>
        </member>
        <member name="M:unoGIS.Entities.Polygon.Transform(unoGIS.Renderer.Matrix3D)">
            <summary>
            Transforma la geometría por una matriz
            </summary>
            <param name="matrix">Matrix3D</param>
        </member>
        <member name="P:unoGIS.Entities.Polygon.Area">
            <summary>
            Obtiene el área en 2D del Polygon
            </summary>
            <returns>Area calculada de los polígono</returns>
            <remarks>Si el área es negativa indica que hay mayor superficie de anillos orientados en contra de las manecillas del reloj</remarks>
        </member>
        <member name="M:unoGIS.Entities.Polygon.AreaGeographic">
            <summary>
            Obtiene el área en 2D del Polygon. Las coordenadas que definen el polígono han de estar en coordenadas geográficas.
            </summary>
            <returns>Area calculada del polígono</returns>
            <remarks>Si el área es negativa indica que hay mayor superficie de anillos orientados en contra de las manecillas del reloj</remarks>
        </member>
        <member name="P:unoGIS.Entities.Polygon.Perimeter2D">
            <summary>
            Retorna la longitud, en dos dimensiones, de la polilínea
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Polygon.Perimeter3D">
            <summary>
            Retorna la longitud, en 3 dimensiones, de la polilínea
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.CoordinateInPolygon(unoGIS.Entities.Coordinate)">
            <summary>
            Coordenada respecto a un polígono.
            Determina la posición de una coordenada con respecto a un polígono.
            </summary>
            <param name="c">Coordenada a testar.</param>
            <returns>
            Retorna 1 si la coordenada es interior al polígono.
            Retorno -1 si la coordenada es exterior al polígono.
            Retorno 0 si la coordenada está en la frontera del polígono.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.ProjectCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Proyecta una coordenada sobre el perímetro del polígono.
            Se busca el segmento más próximo a la coordenada y se devuelve el punto del segmento más próximo a la coordenada.
            </summary>
            <param name="coord"></param>
            <returns>
            Si la operación falla, se devuelce null.
            Si la proyección tiene exito, se devuelve una coordenada comprendida en el perímetro del polígono.
            La coordenada devuelta, será la más próxima del perimetro a la coordenada pasada como parámetro.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.Centroid">
            <summary>
            Devuelve una coordenada que es el centro de la geometría y, asegura que se encuentra dentro de la geometría
            </summary>
            <returns>Coordenada calculada.</returns>
        </member>
        <member name="M:unoGIS.Entities.Polygon.Union(unoGIS.Entities.Polygon)">
            <summary>
            Devuelve un nuevo polígono que recubre las superficies contenidas en ambos polígonos.
            Los atributos del nuevo polígono serán los mismos del polígono origen.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Entities.IPolyline">
            <summary>
            Interfaz para las geometrias que son una Polyline
            </summary>
        </member>
        <member name="P:unoGIS.Entities.IPolyline.Lines">
            <summary>
            Lineas que conforman la polilínea.
            </summary>
        </member>
        <member name="T:unoGIS.Entities.Polyline">
            <summary>
            Polilinea
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Polyline.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Polyline.#ctor(System.Collections.Generic.IEnumerable{unoGIS.Entities.LineString})">
            <summary>
            Construcntoir
            </summary>
            <param name="lines"></param>
        </member>
        <member name="P:unoGIS.Entities.Polyline.EnumType">
            <summary>
            Devuelve el tipo de geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Polyline.AddVector(unoGIS.Entities.Coordinate)">
            <summary>
            Traslada el elemento
            </summary>
            <param name="vector">Vector de traslación</param>
        </member>
        <member name="M:unoGIS.Entities.Polyline.DistanceToCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la minima distancia de la geometria a la coordenada pasada como parametro.
            </summary>
            <param name="coord">Coordenada sobre el que se calcula la distancia</param>
            <returns>Distancia a la coordenada</returns>
            <remarks>Puede ser de gran importancia para la localizacion de elementos.</remarks>
        </member>
        <member name="M:unoGIS.Entities.Polyline.Distance(unoGIS.Entities.Geometry)">
            <summary>
            Devuelve la distancia de la goemetría actual a otra pasada como parámetro.
            </summary>
            <param name="another">
            Geometría a la cual se le calculará la distancia.
            </param>
            <returns>
            Distancia entre las dos geometrías.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.Dimension">
            <summary>
            Dimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.FixBox">
            <summary>
            Actualiza la caja que contiene a la geometría.
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Polyline.Equals(unoGIS.Entities.Geometry)">
            <summary>
            Determina si la geometría actual es geometricamente igual a otra geometría.
            </summary>
            <param name="another">
            Geometría con la que se realiza la comparación.
            </param>
            <returns>
            Retorna true si ambas geometrías son iguales.
            </returns>
        </member>
        <member name="P:unoGIS.Entities.Polyline.Lines">
            <summary>
            Lineas
            </summary>
        </member>
        <member name="P:unoGIS.Entities.Polyline.Length2D">
            <summary>
            Retorna la longitud, en dos dimensiones, de la polilínea
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Entities.Polyline.Length3D">
            <summary>
            Retorna la longitud, en 3 dimensiones, de la polilínea
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.LengthGeographic">
            <summary>
            Retorna la longitud, en dos dimensiones de la polilínea definida con coordenadas geográficas
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.ProjectCoordinate(unoGIS.Entities.Coordinate)">
            <summary>
            Proyecta una coordenada sobre el perímetro de la polilínea.
            Se busca el segmento más próximo a la coordenada y se devuelve el punto del segmento más próximo a la coordenada.
            </summary>
            <param name="coord"></param>
            <returns>
            Si la operación falla, se devuelce null.
            Si la proyección tiene exito, se devuelve una coordenada comprendida en la polilínea.
            La coordenada devuelta, será la más próxima a la coordenada pasada como parámetro.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.Clone">
            <summary>
            Crea una copia del objeto actual.
            </summary>
            <returns>
            Copia del objeto.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.CloneAttributes">
            <summary>
            Realiza una copia de los atributos del objeto actual.
            La diferencia con el método Clone es que no se clona la geometría, solo los atributos.
            </summary>
            <returns>Copia de los atributos de la entidad</returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.Centroid">
            <summary>
            Devuelve una coordenada que es el centro de la geometría y, asegura que se encuentra dentro de la geometría
            </summary>
            <returns>
            Coordenada calculada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.GetCoordinates">
            <summary>
            Devuelve un enumerador sobre todas las coordenadas de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las coordenadas que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.GetSegments">
            <summary>
            Devuelve un enumerador sobre todos los segmentos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los segmentos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.GetLines">
            <summary>
            Devuelve un enumerador sobre todas las LineString de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las LineString de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.GetRings">
            <summary>
            Devuelve un enumerador sobre todos los anillos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los anillos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Polyline.Transform(unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Aplica una transformación de coordenadas a la geometría.
            </summary>
            <param name="csc">
            Conversor de coordenadas que se va a aplicar a la transformación.
            </param>
        </member>
        <member name="M:unoGIS.Entities.Polyline.Transform(unoGIS.Renderer.Matrix3D)">
            <summary>
            Transforma la geometría por una matriz
            </summary>
            <param name="matrix">Matrix3D</param>
        </member>
        <member name="M:unoGIS.Entities.Polyline.Clip(unoGIS.Entities.Polyline)">
            <summary>
            Intersecta una polilínea pasada por parametro con la polilinea
            actual y devuelve una lista con todas las polilineas resultantes.
            En el resultado solo se incluyen los pedazos de la polilínea pasada
            por parametro.
            </summary>
            <param name="polyline">Polilinea a recortar</param>
            <returns>Polilinea que contiene a todas las lineas resultantes del cliping</returns>
        </member>
        <member name="T:unoGIS.Entities.IRaster">
            <summary>
            Interfaz para las geometrias que son una Polyline
            </summary>
        </member>
        <member name="T:unoGIS.Entities.Raster">
            <summary>
            Raster
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Raster.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Entities.Raster.Clone">
            <summary>
            Crea una copia del objeto actual.
            </summary>
            <returns>
            Copia del objeto.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Raster.CloneAttributes">
            <summary>
            Realiza una copia de los atributos del objeto actual.
            La diferencia con el método Clone es que no se clona la geometría, solo los atributos.
            </summary>
            <returns>Copia de los atributos de la entidad</returns>
        </member>
        <member name="M:unoGIS.Entities.Raster.Centroid">
            <summary>
            Devuelve una coordenada que es el centro de la geometría y, asegura que se encuentra dentro de la geometría
            </summary>
            <returns>
            Coordenada calculada.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Raster.GetCoordinates">
            <summary>
            Devuelve un enumerador sobre todas las coordenadas de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las coordenadas que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Raster.GetSegments">
            <summary>
            Devuelve un enumerador sobre todos los segmentos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los segmentos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Raster.GetLines">
            <summary>
            Devuelve un enumerador sobre todas las LineString de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todas las LineString de la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Raster.GetRings">
            <summary>
            Devuelve un enumerador sobre todos los anillos de la geometría.
            </summary>
            <returns>
            Retorna el enumerador sobre todos los anillos que contiene la geometría.
            </returns>
        </member>
        <member name="M:unoGIS.Entities.Raster.Transform(unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Aplica una transformación de coordenadas a la geometría.
            </summary>
            <param name="csc">
            Conversor de coordenadas que se va a aplicar a la transformación.
            </param>
        </member>
        <member name="M:unoGIS.Entities.Raster.Transform(unoGIS.Renderer.Matrix3D)">
            <summary>
            Transforma la geometría por una matriz
            </summary>
            <param name="matrix">Matrix3D</param>
        </member>
        <member name="T:unoGIS.ExpressionSerializer.Deserialize">
            <summary>
            Clase que deserializa una expresión lambda
            </summary>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.Start(System.String,unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            Deserializa una Expression a partir de un xml y un spatial driver
            </summary>
            <param name="xml">XML en formato string</param>
            <param name="driver">ISpatialDriver</param>
            <returns>Expression si se deserializa correctamente, null si hay algún error</returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.Start(System.Xml.Linq.XContainer,unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            Deserializa una Expression a partir de un xml y un spatial driver
            </summary>
            <param name="xml">XML en formato XDocument</param>
            <param name="driver">ISpatialDriver</param>
            <returns>Expression si se deserializa correctamente, null si hay algún error</returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.InitGenerateExpression(System.Xml.Linq.XElement)">
            <summary>
            Genera una Expression apartir del nodo 'Expression' de un xml
            </summary>
            <param name="xExpression">Nodo 'Expression'</param>
            <returns>Expression si se deserializa correctamente, null si hay algún error</returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.CreateExpression(System.Xml.Linq.XElement)">
            <summary>
            Genera una Expression dependiendo del nombre de un XElement
            </summary>
            <param name="element">Elemento</param>
            <returns>Expression si el nombre es conocido, null si no lo es o hay algun error</returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.CreateConstantExpression(System.Xml.Linq.XElement)">
            <summary>
            Genera una ConstantExpression dependiendo del nombre de un XElement
            </summary>
            <param name="element">Elemento</param>
            <returns>Expression si el nombre es conocido, null si no lo es o hay algun error</returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.CreateBinaryExpression(System.Xml.Linq.XElement)">
            <summary>
            Genera una BinaryExpression dependiendo del nombre de un XElement
            </summary>
            <param name="element">Elemento</param>
            <returns>Expression si el nombre es conocido, null si no lo es o hay algun error</returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.CreateLambdaExpression(System.Xml.Linq.XElement)">
            <summary>
            Genera una LambdaExpression dependiendo del nombre de un XElement
            </summary>
            <param name="element">Elemento</param>
            <returns>Expression si el nombre es conocido, null si no lo es o hay algun error</returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.CreateUnaryExpression(System.Xml.Linq.XElement)">
            <summary>
            Genera una UnaryExpression dependiendo del nombre de un XElement
            </summary>
            <param name="element">Elemento</param>
            <returns>Expression si el nombre es conocido, null si no lo es o hay algun error</returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.CreateMemberExpression(System.Xml.Linq.XElement)">
            <summary>
            Genera una MemberExpression dependiendo del nombre de un XElement
            </summary>
            <param name="element">Elemento</param>
            <returns>Expression si el nombre es conocido, null si no lo es o hay algun error</returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Deserialize.CreateParameterExpression(System.Xml.Linq.XElement)">
            <summary>
            Genera una ParameterExpression dependiendo del nombre de un XElement
            </summary>
            <param name="element">Elemento</param>
            <returns>Expression si el nombre es conocido, null si no lo es o hay algun error</returns>
        </member>
        <member name="T:unoGIS.ExpressionSerializer.Serialize">
            <summary>
            Clase que serializa una expresión lambda
            </summary>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Serialize.Start(System.Linq.Expressions.Expression)">
            <summary>
            Serializa una Expression a XML
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.ExpressionSerializer.Serialize.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visit Constant
            </summary>
            <param name="node">Expression node</param>
            <returns>Expression</returns>
        </member>
        <member name="T:unoGIS.Fence.FenceMode">
            <summary>
            Tipo de operación que se realiza sobre un cercado
            </summary>
        </member>
        <member name="F:unoGIS.Fence.FenceMode.None">
            <summary>
            No se ha definido ningún modo. Ninguna entidad puede cumplir este criterio.
            </summary>               
        </member>
        <member name="F:unoGIS.Fence.FenceMode.Inside">
            <summary>
            Entidades que están completamente dentro del cercado.
            </summary>
        </member>
        <member name="F:unoGIS.Fence.FenceMode.InsideAndOver">
            <summary>
            Entidades que están dentro o sobre el cercado.
            </summary>
        </member>
        <member name="F:unoGIS.Fence.FenceMode.Outside">
            <summary>
            Entidades que están completamente fuera del cercado.
            </summary>
        </member>
        <member name="F:unoGIS.Fence.FenceMode.OutsideAndOver">
            <summary>
            Entidades que están fuera o sobre el cercado.
            </summary>
        </member>
        <member name="F:unoGIS.Fence.FenceMode.Over">
            <summary>
            Entidades que están sobre el cercado.
            </summary>
        </member>
        <member name="F:unoGIS.Fence.FenceMode.ClipIn">
            <summary>
            Entidades o parte de las entidades que están dentro del cercado.
            </summary>
        </member>
        <member name="F:unoGIS.Fence.FenceMode.ClipOut">
            <summary>
            Entidades o parte de las entidades que están fuera del cercado.
            </summary>
        </member>
        <member name="T:unoGIS.Fence.FenceService">
            <summary>
            Implementación del servicio de cercados
            </summary>
        </member>
        <member name="P:unoGIS.Fence.FenceService.Fence">
            <summary>
            Fence
            </summary>
        </member>
        <member name="P:unoGIS.Fence.FenceService.Mode">
            <summary>
            Modo de la Fence
            </summary>
        </member>
        <member name="P:unoGIS.Fence.FenceService.CoordinateSystem">
            <summary>
            Sistema de coordenadas
            </summary>
        </member>
        <member name="P:unoGIS.Fence.FenceService.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="M:unoGIS.Fence.FenceService.#ctor(unoGIS.unoGISContext)">
            <summary>
            Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="E:unoGIS.Fence.FenceService.PropertyChanged">
            <summary>
            Evento Propertychanged
            </summary>
        </member>
        <member name="M:unoGIS.Fence.FenceService.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.Fence.FenceService.SetFence(unoGIS.CoordinateSystems.CoordinateSystem,unoGIS.Entities.Polygon,unoGIS.Fence.FenceMode)">
            <summary>
            
            </summary>
            <param name="coordinateSystem"></param>
            <param name="fence"></param>
            <param name="mode"></param>
        </member>
        <member name="M:unoGIS.Fence.FenceService.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Fence.FenceService.Filter(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            
            </summary>
            <param name="entitySet"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Fence.FenceService.Filter(unoGIS.CoordinateSystems.CoordinateSystem,System.Linq.IQueryable{unoGIS.Entities.Geometry})">
            <summary>
            
            </summary>
            <param name="cs"></param>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Fence.FenceService.Filter(unoGIS.CoordinateSystems.CoordinateSystem,unoGIS.Entities.Geometry)">
            <summary>
            
            </summary>
            <param name="cs"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Fence.FilteredGeometry">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Fence.FilteredGeometry.Geometry">
            <summary>
            Entidad original sobre la que se calcula la fence
            </summary>
        </member>
        <member name="P:unoGIS.Fence.FilteredGeometry.Meets">
            <summary>
            Entidades que cumplen con la fence
            </summary>
        </member>
        <member name="P:unoGIS.Fence.FilteredGeometry.NoMeets">
            <summary>
            Entidades que no cumplen con la fence
            </summary>
        </member>
        <member name="T:unoGIS.Geoprocessing.Analysis">
            <summary>
            Métodos para el análisis espacial.
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.Analysis.Clip(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            Devuelve la intersección espacial entre geometrías.
            </summary>
            <param name="input">Geometrías de entrada.</param>
            <param name="clip">Geometrías con las que hacer el clip.</param>
            <param name="tolerance">Tolerancia</param>
            <returns>Retorna aquellas partes de las geometrías de entrada que coincidan espacialmente con las geometrías del clip. </returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.Analysis.Erase(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            Devuelve las geometrías de entrada suprimiendo aquellas zonas coincidentes con las geometrías de "erase" (borrado).
            </summary>
            <param name="input">Geometrías de entrada.</param>
            <param name="erase">Geometrías para el "erase"</param>
            <param name="tolerance">Tolerancia</param>
            <returns>Devuelve las geometrías de entrada menos la parte que coincide espacialmente con las geometrías del "erase".</returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.Analysis.Overlay(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            Devuelve las geometrías del conjunto de entrada que se superponen con el conjunto "overlay".
            </summary>
            <param name="input">Geometrías de entrada.</param>
            <param name="overlay">Geometrías "overlay".</param>
            <param name="tolerance">Tolerancia para los cálculos.</param>
            <returns>Devuelve las geometrías de la colección "input" que se superponen con la colección "overlay".</returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.Analysis.NotOverlay(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            Devuelve las geometrías del conjunto de entrada que no se superponen con el conjunto "notOverlay".
            </summary>
            <param name="input">Geometrías de entrada.</param>
            <param name="overlay">Geometrías "notOverlay".</param>
            <param name="tolerance">Tolerancia para los cálculos.</param>
            <returns>Devuelve las geometrías de la colección "input" que no se superponen con la colección "notOverlay".</returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.Analysis.Within(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            Devuelve las geometrías del conjunto de entrada que están completamente dentro del conjunto "whitin".
            </summary>
            <param name="input">Geometrías de entrada.</param>
            <param name="overlay">Geometrías "whitin".</param>
            <param name="tolerance">Tolerancia para los cálculos.</param>
            <returns>Devuelve las geometrías de la colección "input" que están completamente dentro del espacio ocupado por la colección "whitin".</returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.Analysis.NotWithin(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            Devuelve las geometrías del conjunto de entrada que no están dentro del conjunto "notWhitin".
            </summary>
            <param name="input">Geometrías de entrada.</param>
            <param name="overlay">Geometrías "notWhitin".</param>
            <param name="tolerance">Tolerancia para los cálculos.</param>
            <returns>Devuelve las geometrías de la colección "input" que están completamente fuera del espacio ocupado por la colección "notWhitin".</returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.Analysis.Union(System.Collections.Generic.IEnumerable{unoGIS.Entities.Polygon},System.Double)">
            <summary>
            Devuelve la unión espacial de las geometrías del conjunto de entrada.
            </summary>
            <param name="input">Colección de geometrías a unir.</param>
            <param name="tolerance">Tolerancia para los cálculos.</param>
            <returns>Devuelve una colección con la unión espacial de las geoemtrías del conjunto de entrada.</returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.Analysis.Buffer(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double,System.Boolean)">
            <summary>
            Crear un buffer espacial de un conjunto de geometrías.
            </summary>
            <param name="input">Conjunto de geometrías de las que se desea realizar el buffer espacial.</param>
            <param name="distance">Distancia que define el buffer espacial.</param>
            <param name="dissolve">Si dissolve es true, se realiza una unión de aquellos buffers que se superponen.</param>
            <returns>Retorna una colección de polígonos que representa el buffer de las geometrías del conjunto de entrada.</returns>
        </member>
        <member name="T:unoGIS.Geoprocessing.AnalysisAlgorithms.Buffer">
            <summary>
            Clase para crear un buffer espacial de un conjunto de geometrías.
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.AnalysisAlgorithms.Buffer.Do(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double,System.Boolean)">
            <summary>
            Crear un buffer espacial de un conjunto de geometrías.
            </summary>
            <param name="input">Conjunto de geometrías de las que se desea realizar el buffer espacial.</param>
            <param name="distance">Distancia que define el buffer espacial.</param>
            <param name="stroke">Precisión de los arcos de circunferencia.</param>
            <param name="dissolve">Si dissolve es true, se realiza una unión de aquellos buffers que se superponen.</param>
            <returns>Retorna una colección de polígonos que representa el buffer de las geometrías del conjunto de entrada.</returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.AnalysisAlgorithms.Clip.Do(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            Las Entidades del clip pueden ser tipo puntos, líneas y polígonos, dependiendo del tipo de las Entidades de entrada.
            Si la entrada son polígonos, las entidades del clip también deben ser polígonos.
            Si la entrada son líneas, las entidades del clip pueden ser líneas o polígonos. Cuando clip son líneas, los segmentos coincidentes se escriben a la salida.
            Si la entrada son puntos, las entidades del clip pueden ser puntos, líneas o polígonos. Cuando clip es puntual, sólo los puntos coincidentes se
            escriben en la salida. Cuando clip es lineal, sólo los puntos que son coincidentes con las líneas se escriben en la salida.
            Las Entidades de salida contendrá todos los atributos de las Entidades de entrada.
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.AnalysisAlgorithms.Erase.Do(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            Las Entidades de Erase pueden ser tipo puntos, líneas y polígonos, dependiendo del tipo de las Entidades de entrada.
            Si la entrada son polígonos, las entidades de Erase también deben ser polígonos.
            Si la entrada son líneas, las entidades Erase pueden ser líneas o polígonos. Cuando Erase son líneas, los segmentos coincidentes son suprimidos de la salida.
            Si la entrada son puntos, las entidades Erase pueden ser puntos, líneas o polígonos. Cuando Erase es puntual, sólo los puntos coincidentes son
            suprimidos de la salida. Cuando Erase es lineal, sólo los puntos que son coincidentes con las líneas son suprimidos de la salida.
            Las Entidades de salida contendrá todos los atributos de las Entidades de entrada.
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.AnalysisAlgorithms.NotOverlay.Do(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.AnalysisAlgorithms.NotWithin.Do(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.AnalysisAlgorithms.Overlay.Do(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.AnalysisAlgorithms.Union.Do(System.Collections.Generic.IEnumerable{unoGIS.Entities.Polygon},System.Double)">
            <summary>
            De un conjunto de polígonos, devuelve un nuevo conjunto de polígonos que representan
            las superficies cubiertas por alguno de los polígonos del conjunto origen.
            </summary>
            <param name="polygons"></param>
            <param name="tolerance"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.AnalysisAlgorithms.Within.Do(System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Collections.Generic.IEnumerable{unoGIS.Entities.Geometry},System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.Generalize.SimplifyBuilding(System.Collections.Generic.IEnumerable{unoGIS.Entities.Polygon},System.Double)">
            <summary>
            Devuelve la intersección espacial entre geometrías.
            </summary>
            <param name="input">Geometrías de entrada.</param>
            <param name="clip">Geometrías con las que hacer el clip.</param>
            <param name="tolerance">Tolerancia</param>
            <returns>Retorna aquellas partes de las geometrías de entrada que coincidan espacialmente con las geometrías del clip. </returns>
        </member>
        <member name="T:unoGIS.Geoprocessing.GeneralizeAlgorithms.SimplifyBuilding">
            <summary>
            Clase para crear un buffer espacial de un conjunto de geometrías.
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.GeneralizeAlgorithms.SimplifyBuilding.Do(System.Collections.Generic.IEnumerable{unoGIS.Entities.Polygon},System.Double)">
            <summary>
            Simplifica el contorno de los edificios manteniendo su forma y tamaño esencial.
            </summary>
        </member>
        <member name="T:unoGIS.Geoprocessing.Routing.Dijkstra">
            <summary>
            Clase para el cálculo de rutas optimas
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.Routing.Dijkstra.#ctor(System.Collections.Generic.IEnumerable{unoGIS.Entities.ArithmeticUtils.Segment})">
            <summary>
            Construtor que crea una instancia de Dijkstra a partir de una colección de Segments.        
            </summary>
            <param name="segments"></param>
        </member>
        <member name="M:unoGIS.Geoprocessing.Routing.Dijkstra.Route(unoGIS.Entities.Coordinate2D,System.Collections.Generic.IEnumerable{unoGIS.Entities.Coordinate2D},System.IProgress{unoGIS.Progress.ProgressReport},System.Threading.CancellationTokenSource)">
            <summary>
            Cálcula la ruta óptima que comenzando en startPoint y pasando por todos los wayPoints.
            Tanto startPoint como los wayPoints deben corresponder con algún nodo del grafo.
            </summary>
            <param name="startPoint"></param>
            <param name="wayPoints"></param>
            <returns></returns>
            <remarks>
            Los nodos del grafo corresponden con las coordenadas que define cada segmento de la colección de segmentos con la que se construyo el grafo.
            </remarks>
        </member>
        <member name="T:unoGIS.Geoprocessing.TopologicalAlgorithms.LineStringBuilder">
            <summary>
            Genera una colección de LineString a partir de una colección de segments uniendo los segmentos que son consecutivos.
            Se puede considerar la operación inversa a Segmenter.
            </summary>
        </member>
        <member name="F:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.FirstNode">
            <summary>
            Primer nodo de la lista enlazada de nodos.</summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.GetRings(System.Collections.Generic.IEnumerable{unoGIS.Entities.LineString})">
            <summary>
            Devuelve un enumerador con los anillos que se construyen a partir de las aristas suministradas.
            </summary>       
            <param name="edges">Enumerador con las aristas para construir los anillos.</param>
            <returns>
            Devuelve un enumerador con los anillos que se construyen a partir de las aristas suministradas.
            </returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.GetRings(System.Collections.Generic.IEnumerable{unoGIS.Entities.LineString},System.Boolean)">
            <summary>
            Devuelve un enumerador con los anillos que se construyen a partir de las aristas suministradas.
            </summary>       
            <param name="edges">Enumerador con las aristas para construir los anillos.</param>
            <param name="breakStrangled">
            No implementado!!!
            </param>
            <returns>
            Devuelve un enumerador con los anillos que se construyen a partir de las aristas suministradas.
            </returns>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.LoadSegments(System.Collections.Generic.IEnumerable{unoGIS.Entities.LineString})">
            <summary>
            Carga los segmentos que tengan longitud distinta de cero a una lista ordenada
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.LinkEdges(System.Collections.Generic.List{unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge})">
            <summary>
            Enlazar los nodos con sus vecinos, eliminando los segmentos duplicados.
            Cuando un segmento está duplicado, elimina uno de ellos para que quede solo una arista
            </summary>        
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.DeleteOpenNodes">
            <summary>
            Elimina los segmentos que no estén apoyados por ambos lados</summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.Delete(unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge,unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge@)">
            <summary>
            Elimina una arista de la lista, de la cual se sabe que uno de sus extremos no tiene vecinos.
            </summary>        
            <param name="singleDelete">Extremo que se conoce que no tiene vecinos</param>
            <param name="outerCursor">Indice del ciclo exterior, que hay que actualizar
            siempre que se elimine un elemento que esté por debajo.</param>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.UnLink(unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge)">
            <summary>
            Este método elimina de la lista enlazada un nodo, verificando si es el
            nodo cabeza, en cuyo caso, pone como cabeza al nodo siguiente</summary>
            <param name="edge">Vértice a desenlazar</param>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.GenerateLinearRings">
            <summary>
            Crea los anillos a partir de la lista ordenada de arcos.
            </summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.RingBuilder.AtMostRight(unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge)">
            <summary>
            Se busca la arista que forma el mayor angulo con un segmento.</summary>
            <param name="LastEdge">Última arista del segmento.</param>
            <returns>Arista encontrada.</returns>
        </member>
        <member name="T:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge">
            <summary>
            Representación del inicio de una arista</summary>
        </member>
        <member name="F:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge.Node">
            <summary>
            Vértice que contiene</summary>
        </member>
        <member name="F:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge.Other">
            <summary>
            Otro extremo de la arista</summary>
        </member>
        <member name="F:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge.InnerCoords">
            <summary>
            Puntos interiores de la linea</summary>
        </member>
        <member name="F:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge.Used">
            <summary>
            Indica si se puede recorrer el segmento comenzando por este nodo </summary>
            <remarks> //Se utiliza como marcas
            0 => No utilizado
            1 => Utilizado
            2 => Eliminado por formar parte de un arco de estrangulación.</remarks>
        </member>
        <member name="F:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge.Last">
            <summary>
            Enlaces al anterior y al siguiente en la lista ordenada</summary>
        </member>
        <member name="F:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge.Next">
            <summary>
            Enlaces al anterior y al siguiente en la lista ordenada</summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge.#ctor(unoGIS.Entities.Coordinate)">
            <summary>
            Crea una instancia de cVertex </summary>
            <param name="node">Vertice que representa.</param>
        </member>
        <member name="P:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge.NextCoord">
            <summary>
            Proximo vértice en la arista empezando por este vértice</summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.cEdge.AppendInnerCoords(unoGIS.Entities.Coordinate[],System.Int32@)">
            <summary>
            Asigna la lista de vértices intermedios en el orden 
            que se ven desde este vértice.</summary>
        </member>
        <member name="T:unoGIS.Geoprocessing.TopologicalAlgorithms.rEdge">
            <summary>
            Esta clase se crea para diferenciar los vertices para los cuales el 
            arreglo referenciado está en el orden inverso ([R]everse)Vertex, o sea, 
            que su posición se corresponde con el final del arreglo</summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.rEdge.#ctor(unoGIS.Entities.Coordinate)">
            <summary>
            Crea una instancia de rVertex </summary>
            <param name="node">Vertice que representa.</param>
        </member>
        <member name="P:unoGIS.Geoprocessing.TopologicalAlgorithms.rEdge.NextCoord">
            <summary>
            Proximo vértice en la arista empezando por este vértice</summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.rEdge.AppendInnerCoords(unoGIS.Entities.Coordinate[],System.Int32@)">
            <summary>
            Asigna la lista de vértices intermedios en el orden 
            que se ven desde este vértice.</summary>
        </member>
        <member name="M:unoGIS.Geoprocessing.TopologicalAlgorithms.Segmenter.InsertCross(unoGIS.Geoprocessing.TopologicalAlgorithms.Segmenter.TSeg,unoGIS.Entities.Coordinate)">
            <summary>
            Añadir cruce a la lista de cruces.
            </summary>
            <param name="pseg"></param>
            <param name="coord"></param>
        </member>
        <member name="T:unoGIS.Geoprocessing.Topology">
            <summary>
            Métodos para operaciones topológicas.
            </summary>
        </member>
        <member name="T:unoGIS.CultureEventArgs">
            <summary>
            Argumentos para evento de cambio de cultura
            </summary>
        </member>
        <member name="P:unoGIS.CultureEventArgs.Culture">
            <summary>
            Cultura
            </summary>
        </member>
        <member name="M:unoGIS.CultureEventArgs.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Contructor
            </summary>
            <param name="culture"></param>
        </member>
        <member name="T:unoGIS.I18n">
            <summary>
            Clase estática que ofrecer soporte para multiples idiomas.
            
            </summary>
        </member>
        <member name="E:unoGIS.I18n.CultureChanged">
            <summary>
            Evento que se produce cuando cambia la cultura activa.
            </summary>
        </member>
        <member name="P:unoGIS.I18n.Availables">
            <summary>
            Devuelve un enumerador con las culturas disponibles
            </summary>
        </member>
        <member name="P:unoGIS.I18n.CurrentCulture">
            <summary>
            Retorna la cultura seleccionada para el hilo de ejecución actual
            </summary>
        </member>
        <member name="M:unoGIS.I18n.ChangeCulture(System.Globalization.CultureInfo)">
            <summary>
            Cambia la cultura actual
            </summary>
            <param name="newCulture"></param>
        </member>
        <member name="M:unoGIS.I18n.Localize(System.Enum)">
            <summary>
            Traductor de enumerados
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.I18n.Localize(System.String)">
            <summary>
            Traductor de strings
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.I18n.Localize(System.String,System.Object[])">
            <summary>
            Traductor de strings con argumentos
            </summary>
            <param name="key"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.I18n.Localize(System.String,System.Globalization.CultureInfo,System.Object[])">
            <summary>
            Traductor
            </summary>
            <param name="key"></param>
            <param name="culture"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.AbstractDynamicLinqCustomTypeProvider">
            <summary>
            The abstract <see cref="T:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.AbstractDynamicLinqCustomTypeProvider"/>. Find all types marked with <see cref="T:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.DynamicLinqTypeAttribute"/>.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.AbstractDynamicLinqCustomTypeProvider.FindTypesMarkedWithDynamicLinqTypeAttribute(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Finds the types marked with DynamicLinqTypeAttribute.
            </summary>
            <param name="assemblies">The assemblies to process.</param>
            <returns>IEnumerable{Type}</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.AbstractDynamicLinqCustomTypeProvider.GetAssemblyTypes(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Gets the assembly types in an Exception friendly way.
            </summary>
            <param name="assemblies">The assemblies to process.</param>
            <returns>IEnumerable{Type}</returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.DefaultDynamicLinqCustomTypeProvider">
            <summary>
            The default <see cref="T:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.IDynamicLinkCustomTypeProvider"/>. Scans the current AppDomain for all types marked with <see cref="T:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.DynamicLinqTypeAttribute"/>, and adds them as custom Dynamic Link types.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.DefaultDynamicLinqCustomTypeProvider.GetCustomTypes">
            <summary>
            Returns a list of custom types that System.Linq.Dynamic.Core will understand.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.HashSet`1" /> list of custom types.
            </returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.DynamicLinqTypeAttribute">
            <summary>
            Indicates to Dynamic Linq to consider the Type as a valid dynamic linq type.
            </summary>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.IDynamicLinkCustomTypeProvider">
            <summary>
            Interface for providing custom types for System.Linq.Dynamic.Core.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.IDynamicLinkCustomTypeProvider.GetCustomTypes">
            <summary>
            Returns a list of custom types that System.Linq.Dynamic.Core will understand.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.HashSet`1" /> list of custom types.</returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.DynamicClass">
            <summary>
            Provides a base class for dynamic objects.
            
            In addition to the methods defined here, the following items are added using reflection:
            - default constructor
            - constructor with all the properties as parameters (if not linq-to-entities)
            - all properties (also with getter and setters)
            - ToString() method
            - Equals() method
            - GetHashCode() method
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClass.GetDynamicPropertyValue``1(System.String)">
            <summary>
            Gets the dynamic property by name.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="propertyName">Name of the property.</param>
            <returns>T</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClass.GetDynamicPropertyValue(System.String)">
            <summary>
            Gets the dynamic property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>value</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClass.SetDynamicPropertyValue``1(System.String,``0)">
            <summary>
            Sets the dynamic property value by name.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClass.SetDynamicPropertyValue(System.String,System.Object)">
            <summary>
            Sets the dynamic property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.DynamicClass.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="name">The name.</param>
            <returns>Value from the property.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClass.GetDynamicMemberNames">
            <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
            <returns>
            A sequence that contains dynamic member names.
            </returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClass.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result" />.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClass.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Provides the implementation for operations that set member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as setting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member to which the value is being assigned. For example, for the statement sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="value">The value to set to the member. For example, for sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, the <paramref name="value" /> is "Test".</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)
            </returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.DynamicClassFactory">
            <summary>
            A factory to create dynamic classes, based on <see href="http://stackoverflow.com/questions/29413942/c-sharp-anonymous-object-with-properties-from-dictionary" />.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClassFactory.#cctor">
            <summary>
            Initializes the <see cref="T:unoGIS.Linq.Dynamic.Core.DynamicClassFactory"/> class.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClassFactory.CreateType(System.Collections.Generic.IList{unoGIS.Linq.Dynamic.Core.DynamicProperty},System.Boolean)">
            <summary>
            The CreateType method creates a new data class with a given set of public properties and returns the System.Type object for the newly created class. If a data class with an identical sequence of properties has already been created, the System.Type object for this class is returned.        
            Data classes implement private instance variables and read/write property accessors for the specified properties.Data classes also override the Equals and GetHashCode members to implement by-value equality.
            Data classes are created in an in-memory assembly in the current application domain. All data classes inherit from <see cref="T:unoGIS.Linq.Dynamic.Core.DynamicClass"/> and are given automatically generated names that should be considered private (the names will be unique within the application domain but not across multiple invocations of the application). Note that once created, a data class stays in memory for the lifetime of the current application domain. There is currently no way to unload a dynamically created data class.
            The dynamic expression parser uses the CreateClass methods to generate classes from data object initializers. This feature in turn is often used with the dynamic Select method to create projections.
            </summary>
            <param name="properties">The DynamicProperties</param>
            <param name="createParameterCtor">Create a constructor with parameters. Default set to true. Note that for Linq-to-Database objects, this needs to be set to false.</param>
            <returns>Type</returns>
            <example>
            <code>
            <![CDATA[
            DynamicProperty[] props = new DynamicProperty[] { new DynamicProperty("Name", typeof(string)), new DynamicProperty("Birthday", typeof(DateTime)) };
            Type type = DynamicClassFactory.CreateType(props);
            DynamicClass dynamicClass = Activator.CreateInstance(type) as DynamicClass;
            dynamicClass.SetDynamicProperty("Name", "Albert");
            dynamicClass.SetDynamicProperty("Birthday", new DateTime(1879, 3, 14));
            Console.WriteLine(dynamicClass);
            ]]>
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicClassFactory.GenerateKey(System.Collections.Generic.IEnumerable{unoGIS.Linq.Dynamic.Core.DynamicProperty},System.Boolean)">
            <summary>
            Generates the key.
            Anonymous classes are generics based. The generic classes are distinguished by number of parameters and name of parameters. The specific types of the parameters are the generic arguments.
            </summary>
            <param name="dynamicProperties">The dynamic propertys.</param>
            <param name="createParameterCtor">if set to <c>true</c> [create parameter ctor].</param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.DynamicEnumerableAsyncExtensions">
            <summary>
            Define async extensions on <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableAsyncExtensions.ToDynamicArrayAsync(System.Collections.IEnumerable,System.Type)">
            <summary>
            Async creates an array of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <param name="type">A <see cref="T:System.Type"/> cast to.</param>
            <returns>An Array that contains the elements from the input sequence.</returns>        
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableAsyncExtensions.ToDynamicArrayAsync(System.Collections.IEnumerable)">
            <summary>
            Async creates an array of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <returns>An array that contains the elements from the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableAsyncExtensions.ToDynamicArrayAsync``1(System.Collections.IEnumerable)">
            <summary>
            Async creates an array of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">The generic type.</typeparam>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <returns>An Array{T} that contains the elements from the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableAsyncExtensions.ToDynamicListAsync(System.Collections.IEnumerable,System.Type)">
            <summary>
            Async creates a list of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <param name="type">A <see cref="T:System.Type"/> cast to.</param>
            <returns>An List that contains the elements from the input sequence.</returns>        
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableAsyncExtensions.ToDynamicListAsync(System.Collections.IEnumerable)">
            <summary>
            Async creates a list of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <returns>A List that contains the elements from the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableAsyncExtensions.ToDynamicListAsync``1(System.Collections.IEnumerable)">
            <summary>
            Async creates a list of dynamic objects from an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">Generic Type</typeparam>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <returns>A List{T} that contains the elements from the input sequence.</returns>        
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.DynamicEnumerableExtensions">
            <summary>
            Define extensions on <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableExtensions.ToDynamicArray(System.Collections.IEnumerable)">
            <summary>
            Creates an array of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <returns>An array that contains the elements from the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableExtensions.ToDynamicArray``1(System.Collections.IEnumerable)">
            <summary>
            Creates an array of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">The generic type.</typeparam>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <returns>An Array{T} that contains the elements from the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableExtensions.ToDynamicArray(System.Collections.IEnumerable,System.Type)">
            <summary>
            Creates an array of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <param name="type">A <see cref="T:System.Type"/> cast to.</param>
            <returns>An Array that contains the elements from the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableExtensions.ToDynamicList(System.Collections.IEnumerable)">
            <summary>
            Creates a list of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <returns>A List that contains the elements from the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableExtensions.ToDynamicList(System.Collections.IEnumerable,System.Type)">
            <summary>
            Creates a list of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <param name="type">A <see cref="T:System.Type"/> cast to.</param>
            <returns>A List that contains the elements from the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicEnumerableExtensions.ToDynamicList``1(System.Collections.IEnumerable)">
            <summary>
            Creates a list of dynamic objects from a <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">Generic Type</typeparam>
            <param name="source">A <see cref="T:System.Collections.IEnumerable"/> to create an array from.</param>
            <returns>A List{T} that contains the elements from the input sequence.</returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.DynamicExpressionParser">
            <summary>
            Helper class to convert an expression into an LambdaExpression
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicExpressionParser.ParseLambda(System.Type,System.String,System.Object[])">
            <summary>
            Parses an expression into a LambdaExpression. (Also create a constructor for all the parameters. Note that this doesn't work for Linq-to-Database entities.)
            </summary>
            <param name="resultType">Type of the result. If not specified, it will be generated dynamically.</param>
            <param name="expression">The expression.</param>
            <param name="values">An object array that contains zero or more objects which are used as replacement values.</param>
            <returns>The generated <see cref="T:System.Linq.Expressions.LambdaExpression"/></returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicExpressionParser.ParseLambda(System.Boolean,System.Type,System.String,System.Object[])">
            <summary>
            Parses an expression into a LambdaExpression.
            </summary>
            <param name="createParameterCtor">if set to <c>true</c> then also create a constructor for all the parameters. Note that this doesn't work for Linq-to-Database entities.</param>
            <param name="resultType">Type of the result. If not specified, it will be generated dynamically.</param>
            <param name="expression">The expression.</param>
            <param name="values">An object array that contains zero or more objects which are used as replacement values.</param>
            <returns>The generated <see cref="T:System.Linq.Expressions.LambdaExpression"/></returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicExpressionParser.ParseLambda(System.Type,System.Type,System.String,System.Object[])">
            <summary>
            Parses an expression into a LambdaExpression. (Also create a constructor for all the parameters. Note that this doesn't work for Linq-to-Database entities.)
            </summary>
            <param name="itType">The main type from the dynamic class expression.</param>
            <param name="resultType">Type of the result. If not specified, it will be generated dynamically.</param>
            <param name="expression">The expression.</param>
            <param name="values">An object array that contains zero or more objects which are used as replacement values.</param>
            <returns>The generated <see cref="T:System.Linq.Expressions.LambdaExpression"/></returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicExpressionParser.ParseLambda(System.Boolean,System.Type,System.Type,System.String,System.Object[])">
            <summary>
            Parses an expression into a LambdaExpression.
            </summary>
            <param name="createParameterCtor">if set to <c>true</c> then also create a constructor for all the parameters. Note that this doesn't work for Linq-to-Database entities.</param>
            <param name="itType">The main type from the dynamic class expression.</param>
            <param name="resultType">Type of the result. If not specified, it will be generated dynamically.</param>
            <param name="expression">The expression.</param>
            <param name="values">An object array that contains zero or more objects which are used as replacement values.</param>
            <returns>The generated <see cref="T:System.Linq.Expressions.LambdaExpression"/></returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicExpressionParser.ParseLambda(System.Linq.Expressions.ParameterExpression[],System.Type,System.String,System.Object[])">
            <summary>
            Parses an expression into a LambdaExpression. (Also create a constructor for all the parameters. Note that this doesn't work for Linq-to-Database entities.)
            </summary>
            <param name="parameters">A array from ParameterExpressions.</param>
            <param name="resultType">Type of the result. If not specified, it will be generated dynamically.</param>
            <param name="expression">The expression.</param>
            <param name="values">An object array that contains zero or more objects which are used as replacement values.</param>
            <returns>The generated <see cref="T:System.Linq.Expressions.LambdaExpression"/></returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicExpressionParser.ParseLambda(System.Boolean,System.Linq.Expressions.ParameterExpression[],System.Type,System.String,System.Object[])">
            <summary>
            Parses an expression into a LambdaExpression.
            </summary>
            <param name="createParameterCtor">if set to <c>true</c> then also create a constructor for all the parameters. Note that this doesn't work for Linq-to-Database entities.</param>
            <param name="parameters">A array from ParameterExpressions.</param>
            <param name="resultType">Type of the result. If not specified, it will be generated dynamically.</param>
            <param name="expression">The expression.</param>
            <param name="values">An object array that contains zero or more objects which are used as replacement values.</param>
            <returns>The generated <see cref="T:System.Linq.Expressions.LambdaExpression"/></returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.DynamicProperty">
            <summary>
            DynamicProperty
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicProperty.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:unoGIS.Linq.Dynamic.Core.DynamicProperty"/> class.
            </summary>
            <param name="name">The name from the property.</param>
            <param name="type">The type from the property.</param>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.DynamicProperty.Name">
            <summary>
            Gets the name from the property.
            </summary>
            <value>
            The name from the property.
            </value>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.DynamicProperty.Type">
            <summary>
            Gets the type from the property.
            </summary>
            <value>
            The type from the property.
            </value>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for querying data structures that implement <see cref="T:System.Linq.IQueryable"/>.
            It allows dynamic string based querying. Very handy when, at compile time, you don't know the type of queries that will be generated,
            or when downstream components only return column names to sort and filter by.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Aggregate(System.Linq.IQueryable,System.String,System.String)">
            <summary>
            Dynamically runs an aggregate function on the IQueryable.
            </summary>
            <param name="source">The IQueryable data source.</param>
            <param name="function">The name of the function to run. Can be Sum, Average, Min or Max.</param>
            <param name="member">The name of the property to aggregate over.</param>
            <returns>The value of the aggregate function run over the specified property.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Any(System.Linq.IQueryable)">
            <summary>
            Determines whether a sequence contains any elements.
            </summary>
            <param name="source">A sequence to check for being empty.</param>
            <example>
            <code language="cs">
            IQueryable queryable = employees.AsQueryable();
            var result = queryable.Any();
            </code>
            </example>
            <returns>true if the source sequence contains any elements; otherwise, false.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Any(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Determines whether a sequence contains any elements.
            </summary>
            <param name="source">A sequence to check for being empty.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <example>
            <code language="cs">
            IQueryable queryable = employees.AsQueryable();
            var result1 = queryable.Any("Income > 50");
            var result2 = queryable.Any("Income > @0", 50);
            var result3 = queryable.Select("Roles.Any()");
            </code>
            </example>
            <returns>true if the source sequence contains any elements; otherwise, false.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Any(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Determines whether a sequence contains any elements.
            </summary>
            <param name="source">A sequence to check for being empty.</param>
            <param name="lambda">A cached Lambda Expression.</param>
            <returns>true if the source sequence contains any elements; otherwise, false.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.AsEnumerable(System.Linq.IQueryable)">
            <summary>
            Returns the input typed as <see cref="T:System.Collections.Generic.IEnumerable`1"/> of dynamic.
            </summary>
            <param name="source">The sequence to type as <see cref="T:System.Collections.Generic.IEnumerable`1"/> of dynamic.</param>
            <returns>The input typed as <see cref="T:System.Collections.Generic.IEnumerable`1"/> of dynamic.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Count(System.Linq.IQueryable)">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> that contains the elements to be counted.</param>
            <example>
            <code language="cs">
            IQueryable queryable = employees.AsQueryable();
            var result = queryable.Count();
            </code>
            </example>
            <returns>The number of elements in the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Count(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> that contains the elements to be counted.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <example>
            <code language="cs">
            IQueryable queryable = employees.AsQueryable();
            var result1 = queryable.Count("Income > 50");
            var result2 = queryable.Count("Income > @0", 50);
            var result3 = queryable.Select("Roles.Count()");
            </code>
            </example>
            <returns>The number of elements in the specified sequence that satisfies a condition.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Count(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> that contains the elements to be counted.</param>
            <param name="lambda">A cached Lambda Expression.</param>
            <returns>The number of elements in the specified sequence that satisfies a condition.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.DefaultIfEmpty(System.Linq.IQueryable)">
            <summary>
            Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return a default value for if empty.</param>
            <example>
            <code language="cs">
            IQueryable queryable = employees.DefaultIfEmpty();
            </code>
            </example>
            <returns>An <see cref="T:System.Linq.IQueryable"/> that contains default if source is empty; otherwise, source.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.DefaultIfEmpty(System.Linq.IQueryable,System.Object)">
            <summary>
            Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return a default value for if empty.</param>
            <param name="defaultValue">The value to return if the sequence is empty.</param>
            <example>
            <code language="cs">
            IQueryable queryable = employees.DefaultIfEmpty(new Employee());
            </code>
            </example>
            <returns>An <see cref="T:System.Linq.IQueryable"/> that contains defaultValue if source is empty; otherwise, source.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Distinct(System.Linq.IQueryable)">
            <summary>
            Returns distinct elements from a sequence by using the default equality comparer to compare values.
            </summary>
            <param name="source">The sequence to remove duplicate elements from.</param>
            <example>
            <code language="cs">
            IQueryable queryable = employees.AsQueryable();
            var result1 = queryable.Distinct();
            var result2 = queryable.Select("Roles.Distinct()");
            </code>
            </example>
            <returns>An <see cref="T:System.Linq.IQueryable"/> that contains distinct elements from the source sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.First(System.Linq.IQueryable)">
            <summary>
            Returns the first element of a sequence.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the first element of.</param>
            <returns>The first element in source.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.First(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the first element of.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.First(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the first element of.</param>
            <param name="lambda">A cached Lambda Expression.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.FirstOrDefault(System.Linq.IQueryable)">
            <summary>
            Returns the first element of a sequence, or a default value if the sequence contains no elements.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the first element of.</param>
            <returns>default if source is empty; otherwise, the first element in source.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.FirstOrDefault(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the first element of.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>default if source is empty or if no element passes the test specified by predicate; otherwise, the first element in source that passes the test specified by predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.FirstOrDefault(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the first element of.</param>
            <param name="lambda">A cached Lambda Expression.</param>
            <returns>default if source is empty or if no element passes the test specified by predicate; otherwise, the first element in source that passes the test specified by predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.GroupBy(System.Linq.IQueryable,System.String,System.String,System.Object[])">
            <summary>
            Groups the elements of a sequence according to a specified key string function 
            and creates a result value from each group and its key.
            </summary>
            <param name="source">A <see cref="T:System.Linq.IQueryable"/> whose elements to group.</param>
            <param name="keySelector">A string expression to specify the key for each element.</param>
            <param name="resultSelector">A string expression to specify a result value from each group.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters.  Similar to the way String.Format formats strings.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> where each element represents a projection over a group and its key.</returns>
            <example>
            <code>
            var groupResult1 = queryable.GroupBy("NumberPropertyAsKey", "StringProperty");
            var groupResult2 = queryable.GroupBy("new (NumberPropertyAsKey, StringPropertyAsKey)", "new (StringProperty1, StringProperty2)");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.GroupBy(System.Linq.IQueryable,System.String,System.String)">
            <summary>
            Groups the elements of a sequence according to a specified key string function 
            and creates a result value from each group and its key.
            </summary>
            <param name="source">A <see cref="T:System.Linq.IQueryable"/> whose elements to group.</param>
            <param name="keySelector">A string expression to specify the key for each element.</param>
            <param name="resultSelector">A string expression to specify a result value from each group.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> where each element represents a projection over a group and its key.</returns>
            <example>
            <code>
            var groupResult1 = queryable.GroupBy("NumberPropertyAsKey", "StringProperty");
            var groupResult2 = queryable.GroupBy("new (NumberPropertyAsKey, StringPropertyAsKey)", "new (StringProperty1, StringProperty2)");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.GroupBy(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Groups the elements of a sequence according to a specified key string function 
            and creates a result value from each group and its key.
            </summary>
            <param name="source">A <see cref="T:System.Linq.IQueryable"/> whose elements to group.</param>
            <param name="keySelector">A string expression to specify the key for each element.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> where each element represents a projection over a group and its key.</returns>
            <example>
            <code>
            var groupResult1 = queryable.GroupBy("NumberPropertyAsKey");
            var groupResult2 = queryable.GroupBy("new (NumberPropertyAsKey, StringPropertyAsKey)");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.GroupByMany``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
            <summary>
            Groups the elements of a sequence according to multiple specified key string functions 
            and creates a result value from each group (and subgroups) and its key.
            </summary>
            <typeparam name="TElement"></typeparam>
            <param name="source">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements to group.</param>
            <param name="keySelectors"><see cref="T:System.String"/> expressions to specify the keys for each element.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of type <see cref="T:unoGIS.Linq.Dynamic.Core.GroupResult"/> where each element represents a projection over a group, its key, and its subgroups.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.GroupByMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Object}[])">
            <summary>
            Groups the elements of a sequence according to multiple specified key functions 
            and creates a result value from each group (and subgroups) and its key.
            </summary>
            <typeparam name="TElement"></typeparam>
            <param name="source">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements to group.</param>
            <param name="keySelectors">Lambda expressions to specify the keys for each element.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of type <see cref="T:unoGIS.Linq.Dynamic.Core.GroupResult"/> where each element represents a projection over a group, its key, and its subgroups.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.GroupJoin(System.Linq.IQueryable,System.Collections.IEnumerable,System.String,System.String,System.String,System.Object[])">
            <summary>
            Correlates the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.
            </summary>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The sequence to join to the first sequence.</param>
            <param name="outerKeySelector">A dynamic function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A dynamic function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A dynamic function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicates as parameters. Similar to the way String.Format formats strings.</param>
            <returns>An <see cref="T:System.Linq.IQueryable"/> obtained by performing a grouped join on two sequences.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Join(System.Linq.IQueryable,System.Collections.IEnumerable,System.String,System.String,System.String,System.Object[])">
            <summary>
            Correlates the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.
            </summary>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The sequence to join to the first sequence.</param>
            <param name="outerKeySelector">A dynamic function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A dynamic function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A dynamic function to create a result element from two matching elements.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicates as parameters.  Similar to the way String.Format formats strings.</param>
            <returns>An <see cref="T:System.Linq.IQueryable"/> obtained by performing an inner join on two sequences.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Join``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String,System.Object[])">
            <summary>
            Correlates the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.
            </summary>
            <typeparam name="TElement">The type of the elements of both sequences, and the result.</typeparam>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The sequence to join to the first sequence.</param>
            <param name="outerKeySelector">A dynamic function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A dynamic function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A dynamic function to create a result element from two matching elements.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicates as parameters.  Similar to the way String.Format formats strings.</param>
            <remarks>This overload only works on elements where both sequences and the resulting element match.</remarks>
            <returns>An <see cref="T:System.Linq.IQueryable`1"/> that has elements of type TResult obtained by performing an inner join on two sequences.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Last(System.Linq.IQueryable)">
            <summary>
            Returns the last element of a sequence.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <returns>The last element in source.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Last(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Returns the last element of a sequence that satisfies a specified condition.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Last(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Returns the last element of a sequence that satisfies a specified condition.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <param name="lambda">A cached Lambda Expression.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.LastOrDefault(System.Linq.IQueryable)">
            <summary>
            Returns the last element of a sequence, or a default value if the sequence contains no elements.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <returns>default if source is empty; otherwise, the last element in source.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.LastOrDefault(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Returns the last element of a sequence that satisfies a specified condition, or a default value if the sequence contains no elements.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.LastOrDefault(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Returns the last element of a sequence that satisfies a specified condition, or a default value if the sequence contains no elements.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <param name="lambda">A cached Lambda Expression.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.OrderBy``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <summary>
            Sorts the elements of a sequence in ascending or descending order according to a key.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to order.</param>
            <param name="ordering">An expression string to indicate values to order by.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>A <see cref="T:System.Linq.IQueryable`1"/> whose elements are sorted according to the specified <paramref name="ordering"/>.</returns>
            <example>
            <code>
            <![CDATA[
            var resultSingle = queryable.OrderBy<User>("NumberProperty");
            var resultSingleDescending = queryable.OrderBy<User>("NumberProperty DESC");
            var resultMultiple = queryable.OrderBy<User>("NumberProperty, StringProperty");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.OrderBy(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Sorts the elements of a sequence in ascending or descending order according to a key.
            </summary>
            <param name="source">A sequence of values to order.</param>
            <param name="ordering">An expression string to indicate values to order by.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters.  Similar to the way String.Format formats strings.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> whose elements are sorted according to the specified <paramref name="ordering"/>.</returns>
            <example>
            <code>
            var resultSingle = queryable.OrderBy("NumberProperty");
            var resultSingleDescending = queryable.OrderBy("NumberProperty DESC");
            var resultMultiple = queryable.OrderBy("NumberProperty, StringProperty DESC");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Page(System.Linq.IQueryable,System.Int32,System.Int32)">
            <summary>
            Returns the elements as paged.
            </summary>
            <param name="source">The IQueryable to return elements from.</param>
            <param name="page">The page to return.</param>
            <param name="pageSize">The number of elements per page.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> that contains the paged elements.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Page``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            Returns the elements as paged.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The IQueryable to return elements from.</param>
            <param name="page">The page to return.</param>
            <param name="pageSize">The number of elements per page.</param>
            <returns>A <see cref="T:System.Linq.IQueryable`1"/> that contains the paged elements.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.PageResult(System.Linq.IQueryable,System.Int32,System.Int32)">
            <summary>
            Returns the elements as paged and include the CurrentPage, PageCount, PageSize and RowCount.
            </summary>
            <param name="source">The IQueryable to return elements from.</param>
            <param name="page">The page to return.</param>
            <param name="pageSize">The number of elements per page.</param>
            <returns>PagedResult</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.PageResult``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            Returns the elements as paged and include the CurrentPage, PageCount, PageSize and RowCount.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The IQueryable to return elements from.</param>
            <param name="page">The page to return.</param>
            <param name="pageSize">The number of elements per page.</param>
            <returns>PagedResult{TSource}</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Reverse(System.Linq.IQueryable)">
            <summary>
            Inverts the order of the elements in a sequence.
            </summary>
            <param name="source">A sequence of values to reverse.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> whose elements correspond to those of the input sequence in reverse order.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Select(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Projects each element of a sequence into a new form.
            </summary>
            <param name="source">A sequence of values to project.</param>
            <param name="selector">A projection string expression to apply to each element.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters.  Similar to the way String.Format formats strings.</param>
            <returns>An <see cref="T:System.Linq.IQueryable"/> whose elements are the result of invoking a projection string on each element of source.</returns>
            <example>
            <code>
            var singleField = queryable.Select("StringProperty");
            var dynamicObject = queryable.Select("new (StringProperty1, StringProperty2 as OtherStringPropertyName)");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Select``1(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Projects each element of a sequence into a new class of type TResult.
            Details see <see href="http://solutionizing.net/category/linq/"/>.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="source">A sequence of values to project.</param>
            <param name="selector">A projection string expression to apply to each element.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters.</param>
            <returns>An <see cref="T:System.Linq.IQueryable`1"/> whose elements are the result of invoking a projection string on each element of source.</returns>
            <example>
            <code language="cs">
            <![CDATA[
            var users = queryable.Select<User>("new (Username, Pwd as Password)");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Select(System.Linq.IQueryable,System.Type,System.String,System.Object[])">
            <summary>
            Projects each element of a sequence into a new class of type TResult.
            Details see http://solutionizing.net/category/linq/ 
            </summary>
            <param name="source">A sequence of values to project.</param>
            <param name="resultType">The result type.</param>
            <param name="selector">A projection string expression to apply to each element.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters.</param>
            <returns>An <see cref="T:System.Linq.IQueryable`1"/> whose elements are the result of invoking a projection string on each element of source.</returns>
            <example>
            <code>
            var users = queryable.Select(typeof(User), "new (Username, Pwd as Password)");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.SelectMany(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Linq.IQueryable"/> and combines the resulting sequences into one sequence.
            </summary>
            <param name="source">A sequence of values to project.</param>
            <param name="selector">A projection string expression to apply to each element.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters.  Similar to the way String.Format formats strings.</param>
            <returns>An <see cref="T:System.Linq.IQueryable"/> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</returns>
            <example>
            <code>
            var roles = users.SelectMany("Roles");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.SelectMany(System.Linq.IQueryable,System.Type,System.String,System.Object[])">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Linq.IQueryable"/> and combines the resulting sequences into one sequence.
            </summary>
            <param name="source">A sequence of values to project.</param>
            <param name="selector">A projection string expression to apply to each element.</param>
            <param name="resultType">The result type.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>An <see cref="T:System.Linq.IQueryable"/> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</returns>
            <example>
            <code>
            var permissions = users.SelectMany(typeof(Permission), "Roles.SelectMany(Permissions)");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.SelectMany``1(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Linq.IQueryable`1"/> and combines the resulting sequences into one sequence.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="source">A sequence of values to project.</param>
            <param name="selector">A projection string expression to apply to each element.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>An <see cref="T:System.Linq.IQueryable`1"/> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</returns>
            <example>
            <code>
            <![CDATA[
            var permissions = users.SelectMany<Permission>("Roles.SelectMany(Permissions)");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.SelectMany(System.Linq.IQueryable,System.String,System.String,System.Object[],System.Object[])">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Linq.IQueryable"/>
            and invokes a result selector function on each element therein. The resulting
            values from each intermediate sequence are combined into a single, one-dimensional
            sequence and returned.
            </summary>
            <param name="source">A sequence of values to project.</param>
            <param name="collectionSelector">A projection function to apply to each element of the input sequence.</param>
            <param name="resultSelector">A projection function to apply to each element of each intermediate sequence. Should only use x and y as parameter names.</param>
            <param name="collectionSelectorArgs">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <param name="resultSelectorArgs">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable"/> whose elements are the result of invoking the one-to-many 
            projection function <paramref name="collectionSelector"/> on each element of source and then mapping
            each of those sequence elements and their corresponding source element to a result element.
            </returns>
            <example>
            <code>
            <![CDATA[
            // TODO
            ]]>
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.SelectMany(System.Linq.IQueryable,System.String,System.String,System.String,System.String,System.Object[],System.Object[])">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Linq.IQueryable"/>
            and invokes a result selector function on each element therein. The resulting
            values from each intermediate sequence are combined into a single, one-dimensional
            sequence and returned.
            </summary>
            <param name="source">A sequence of values to project.</param>
            <param name="collectionSelector">A projection function to apply to each element of the input sequence.</param>
            <param name="collectionParameterName">The name from collectionParameter to use. Default is x.</param>
            <param name="resultSelector">A projection function to apply to each element of each intermediate sequence.</param>
            <param name="resultParameterName">The name from resultParameterName to use. Default is y.</param>
            <param name="collectionSelectorArgs">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <param name="resultSelectorArgs">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable"/> whose elements are the result of invoking the one-to-many 
            projection function <paramref name="collectionSelector"/> on each element of source and then mapping
            each of those sequence elements and their corresponding source element to a result element.
            </returns>
            <example>
            <code>
            <![CDATA[
            // TODO
            ]]>
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Single(System.Linq.IQueryable)">
            <summary>
            Returns the only element of a sequence, and throws an exception if there
            is not exactly one element in the sequence.
            </summary>
            <param name="source">A <see cref="T:System.Linq.IQueryable"/> to return the single element of.</param>
            <returns>The single element of the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Single(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Returns the only element of a sequence that satisfies a specified condition, and throws an exception if there
            is not exactly one element in the sequence.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Single(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Returns the only element of a sequence that satisfies a specified condition, and throws an exception if there
            is not exactly one element in the sequence.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <param name="lambda">A cached Lambda Expression.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.SingleOrDefault(System.Linq.IQueryable)">
            <summary>
            Returns the only element of a sequence, or a default value if the sequence
            is empty; this method throws an exception if there is more than one element
            in the sequence.
            </summary>
            <param name="source">A <see cref="T:System.Linq.IQueryable"/> to return the single element of.</param>
            <returns>The single element of the input sequence, or default if the sequence contains no elements.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.SingleOrDefault(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Returns the only element of a sequence that satisfies a specified condition or a default value if the sequence
            is empty; and throws an exception if there is not exactly one element in the sequence.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.SingleOrDefault(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Returns the only element of a sequence that satisfies a specified condition or a default value if the sequence
            is empty; and throws an exception if there is not exactly one element in the sequence.
            </summary>
            <param name="source">The <see cref="T:System.Linq.IQueryable"/> to return the last element of.</param>
            <param name="lambda">A cached Lambda Expression.</param>
            <returns>The first element in source that passes the test in predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Skip(System.Linq.IQueryable,System.Int32)">
            <summary>
            Bypasses a specified number of elements in a sequence and then returns the remaining elements.
            </summary>
            <param name="source">A <see cref="T:System.Linq.IQueryable"/> to return elements from.</param>
            <param name="count">The number of elements to skip before returning the remaining elements.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> that contains elements that occur after the specified index in the input sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.SkipWhile(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.
            </summary>
            <param name="source">A sequence to check for being empty.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <example>
            <code language="cs">
            IQueryable queryable = employees.AsQueryable();
            var result1 = queryable.SkipWhile("Income > 50");
            var result2 = queryable.SkipWhile("Income > @0", 50);
            </code>
            </example>
            <returns>An <see cref="T:System.Linq.IQueryable"/> that contains elements from source starting at the first element in the linear series that does not pass the test specified by predicate.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Sum(System.Linq.IQueryable)">
            <summary>
            Computes the sum of a sequence of numeric values.
            </summary>
            <param name="source">A sequence of numeric values to calculate the sum of.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Take(System.Linq.IQueryable,System.Int32)">
            <summary>
            Returns a specified number of contiguous elements from the start of a sequence.
            </summary>
            <param name="source">The sequence to return elements from.</param>
            <param name="count">The number of elements to return.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> that contains the specified number of elements from the start of source.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.TakeWhile(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Returns elements from a sequence as long as a specified condition is true.
            </summary>
            <param name="source">A sequence to check for being empty.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <example>
            <code language="cs">
            IQueryable queryable = employees.AsQueryable();
            var result1 = queryable.TakeWhile("Income > 50");
            var result2 = queryable.TakeWhile("Income > @0", 50);
            </code>
            </example>
            <returns>An <see cref="T:System.Linq.IQueryable"/> that contains elements from the input sequence occurring before the element at which the test specified by predicate no longer passes.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.ThenBy``1(System.Linq.IOrderedQueryable{``0},System.String,System.Object[])">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to order.</param>
            <param name="ordering">An expression string to indicate values to order by.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>A <see cref="T:System.Linq.IOrderedQueryable`1"/> whose elements are sorted according to the specified <paramref name="ordering"/>.</returns>
            <example>
            <code>
            <![CDATA[
            var result = queryable.OrderBy<User>("LastName");
            var resultSingle = result.ThenBy<User>("NumberProperty");
            var resultSingleDescending = result.ThenBy<User>("NumberProperty DESC");
            var resultMultiple = result.ThenBy<User>("NumberProperty, StringProperty");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.ThenBy(System.Linq.IOrderedQueryable,System.String,System.Object[])">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.
            </summary>
            <param name="source">A sequence of values to order.</param>
            <param name="ordering">An expression string to indicate values to order by.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters.  Similar to the way String.Format formats strings.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> whose elements are sorted according to the specified <paramref name="ordering"/>.</returns>
            <example>
            <code>
            var result = queryable.OrderBy("LastName");
            var resultSingle = result.OrderBy("NumberProperty");
            var resultSingleDescending = result.OrderBy("NumberProperty DESC");
            var resultMultiple = result.OrderBy("NumberProperty, StringProperty DESC");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Where``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A <see cref="T:System.Linq.IQueryable`1"/> to filter.</param>
            <param name="predicate">An expression string to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>A <see cref="T:System.Linq.IQueryable`1"/> that contains elements from the input sequence that satisfy the condition specified by predicate.</returns>
            <example>
            <code language="cs">
            var result1 = queryable.Where("NumberProperty = 1");
            var result2 = queryable.Where("NumberProperty = @0", 1);
            var result3 = queryable.Where("StringProperty = null");
            var result4 = queryable.Where("StringProperty = \"abc\"");
            var result5 = queryable.Where("StringProperty = @0", "abc");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Where(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
            <param name="source">A <see cref="T:System.Linq.IQueryable"/> to filter.</param>
            <param name="predicate">An expression string to test each element for a condition.</param>
            <param name="args">An object array that contains zero or more objects to insert into the predicate as parameters. Similar to the way String.Format formats strings.</param>
            <returns>A <see cref="T:System.Linq.IQueryable"/> that contains elements from the input sequence that satisfy the condition specified by predicate.</returns>
            <example>
            <code>
            var result1 = queryable.Where("NumberProperty = 1");
            var result2 = queryable.Where("NumberProperty = @0", 1);
            var result3 = queryable.Where("StringProperty = null");
            var result4 = queryable.Where("StringProperty = \"abc\"");
            var result5 = queryable.Where("StringProperty = @0", "abc");
            </code>
            </example>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions.Where(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
            <param name="source">A <see cref="T:System.Linq.IQueryable"/> to filter.</param>
            <param name="lambda">A cached Lambda Expression.</param>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.Exceptions.ParseException">
            <summary>
            Represents errors that occur while parsing dynamic linq string expressions.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.Exceptions.ParseException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:unoGIS.Linq.Dynamic.Core.Exceptions.ParseException"/> class with a specified error message and position.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="position">The location in the parsed string that produced the <see cref="T:unoGIS.Linq.Dynamic.Core.Exceptions.ParseException"/></param>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.Exceptions.ParseException.Position">
            <summary>
            The location in the parsed string that produced the <see cref="T:unoGIS.Linq.Dynamic.Core.Exceptions.ParseException"/>.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.Exceptions.ParseException.ToString">
            <summary>
            Creates and returns a string representation of the current exception.
            </summary>
            <returns>A string representation of the current exception.</returns>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.Exceptions.ParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
            </PermissionSet>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.ExpressionParser.ParseIdentifierWithAccessMembersInBrackets(System.Linq.Expressions.Expression)">
            <summary>
            Parsing de identificador contenido entre corchetes
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.ExtensibilityPoint">
            <summary>
            Extensibility point: If you want to modify expanded queries before executing them
            set your own functionality to override empty QueryOptimizer
            </summary>
        </member>
        <member name="F:unoGIS.Linq.Dynamic.Core.ExtensibilityPoint.QueryOptimizer">
            <summary>
            Place to optimize your queries. Example: Add a reference to Nuget package Linq.Expression.Optimizer 
            and in your program initializers set Extensibility.QueryOptimizer = ExpressionOptimizer.visit;
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.Extensions.LinqProviderExtensions.IsLinqToObjects(System.Linq.IQueryable)">
            <summary>
            Check if the Provider from IQueryable is a LinqToObjects provider.
            </summary>
            <param name="source">The IQueryable</param>
            <returns>true if provider is LinqToObjects, else false</returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.GlobalConfig">
            <summary>
            Static configuration class for Dynamic Linq.
            </summary>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.GlobalConfig.CustomTypeProvider">
            <summary>
            Gets or sets the <see cref="T:unoGIS.Linq.Dynamic.Core.CustomTypeProviders.IDynamicLinkCustomTypeProvider"/>.
            </summary>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.GlobalConfig.AreContextKeywordsEnabled">
            <summary>
            Determines if the context keywords (it, parent, and root) are valid and usable inside a Dynamic Linq string expression.  
            Does not affect the usability of the equivalent context symbols ($, ^ and ~).
            </summary>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.GlobalConfig.UseDynamicObjectClassForAnonymousTypes">
            <summary>
            Gets or sets a value indicating whether to use dynamic object class for anonymous types.
            </summary>
            <value>
            <c>true</c> if wether to use dynamic object class for anonymous types; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.GroupResult">
            <summary>
            The result of a call to a <see cref="T:unoGIS.Linq.Dynamic.Core.DynamicQueryableExtensions"/>.GroupByMany() overload.
            </summary>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.GroupResult.Key">
            <summary>
            The key value of the group.
            </summary>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.GroupResult.Count">
            <summary>
            The number of resulting elements in the group.
            </summary>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.GroupResult.Items">
            <summary>
            The resulting elements in the group.
            </summary>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.GroupResult.Subgroups">
            <summary>
            The resulting subgroups in the group.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.GroupResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> showing the key of the group and the number of items in the group.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.IAssemblyHelper">
            <summary>
            IAssemblyHelper interface which is used to retrieve assemblies that have been loaded into the execution context of this application domain.
            </summary>
        </member>
        <member name="M:unoGIS.Linq.Dynamic.Core.IAssemblyHelper.GetAssemblies">
            <summary>
            Gets the assemblies that have been loaded into the execution context of this application domain.
            </summary>
            
            <returns>
            An array of assemblies in this application domain.
            </returns>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.PagedResult">
            <summary>
            PagedResult
            </summary>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.PagedResult.Queryable">
            <summary>
            Gets or sets the queryable.
            </summary>
            <value>
            The queryable.
            </value>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.PagedResult.CurrentPage">
            <summary>
            Gets or sets the current page.
            </summary>
            <value>
            The current page.
            </value>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.PagedResult.PageCount">
            <summary>
            Gets or sets the page count.
            </summary>
            <value>
            The page count.
            </value>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.PagedResult.PageSize">
            <summary>
            Gets or sets the size of the page.
            </summary>
            <value>
            The size of the page.
            </value>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.PagedResult.RowCount">
            <summary>
            Gets or sets the row count.
            </summary>
            <value>
            The row count.
            </value>
        </member>
        <member name="T:unoGIS.Linq.Dynamic.Core.PagedResult`1">
            <summary>
            PagedResult{TSource}
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="P:unoGIS.Linq.Dynamic.Core.PagedResult`1.Queryable">
            <summary>
            Gets or sets the queryable.
            </summary>
            <value>
            The queryable.
            </value>
        </member>
        <member name="T:unoGIS.LogEntryClass">
            <summary>
            Clasificación de mensajes
            </summary>
        </member>
        <member name="F:unoGIS.LogEntryClass.Information">
            <summary>
            Información
            </summary>
        </member>
        <member name="F:unoGIS.LogEntryClass.Warning">
            <summary>
            Alerta
            </summary>
        </member>
        <member name="F:unoGIS.LogEntryClass.Success">
            <summary>
            Éxito
            </summary>
        </member>
        <member name="F:unoGIS.LogEntryClass.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:unoGIS.LogEntryClass.InlineHelp">
            <summary>
            Ayuda en línea
            </summary>
        </member>
        <member name="T:unoGIS.LogEntryEventArgs">
            <summary>
            Argumentos para entrada de Log
            </summary>
        </member>
        <member name="T:unoGIS.LogManager">
            <summary>
            Gestor de incidencias/mensajes (Logger)
            </summary>
        </member>
        <member name="M:unoGIS.LogManager.WriteEntry(System.String)">
            <summary>
            Escribe una entrada en el Log
            </summary>
            <param name="title">Título del mensaje</param>
        </member>
        <member name="M:unoGIS.LogManager.WriteEntry(System.String,unoGIS.LogEntryClass)">
            <summary>
            Escribe una entrada en el Log
            </summary>
            <param name="title">Título del mensaje</param>
            <param name="classification"></param>
        </member>
        <member name="T:unoGIS.Log.ToolLog">
            <summary>
            Logger de operaciones con herramientas
            </summary>
        </member>
        <member name="M:unoGIS.Log.ToolLog.Serialize">
            <summary>
            Serializa a XML
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Log.ToolLog.Deserialize(System.Xml.Linq.XElement)">
            <summary>
            Deserializa desde XML
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Permissions.DefaultPermissions">
            <summary>
            Implementación mínima de Manager de Permisos (permite todo)
            </summary>
        </member>
        <member name="T:unoGIS.Permissions.IPermissions">
            <summary>
            Gestión de Permisos
            </summary>
        </member>
        <member name="P:unoGIS.Permissions.IPermissions.HasPermissions">
            <summary>
            Indica si existen permisos
            </summary>
        </member>
        <member name="M:unoGIS.Permissions.IPermissions.GetPermission(System.Type)">
            <summary>
            Obtiene el permiso sobre un tipo de dato
            </summary>
            <param name="type"></param>
            <returns>Valor del permiso</returns>
        </member>
        <member name="M:unoGIS.Permissions.IPermissions.GetPermission(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Obtiene el permiso sobre una propiedad de un tipo de dato
            </summary>
            <param name="source">Tipo que contiene la propiedad, ya sea declarada o heredada</param>
            <param name="field">Propiedad</param>
            <returns>Valor del permiso</returns>
        </member>
        <member name="M:unoGIS.Permissions.IPermissions.GetPermission(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            Obtiene el permiso sobre una instancia de EntitySet
            </summary>
            <param name="eset"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Permissions.PermissionValue">
            <summary>
            Valores de permisos
            </summary>
        </member>
        <member name="F:unoGIS.Permissions.PermissionValue.None">
            <summary>
            Ninguno
            </summary>
        </member>
        <member name="F:unoGIS.Permissions.PermissionValue.Hidden">
            <summary>
            Oculto
            </summary>
        </member>
        <member name="F:unoGIS.Permissions.PermissionValue.Read">
            <summary>
            Lectura
            </summary>
        </member>
        <member name="F:unoGIS.Permissions.PermissionValue.Write">
            <summary>
            Escritura
            </summary>
        </member>
        <member name="F:unoGIS.Permissions.PermissionValue.Execution">
            <summary>
            Ejecución
            </summary>
        </member>
        <member name="T:unoGIS.Progress.EnumerableProgress`1">
            <summary>
            Soporte para generar progreso en UI de un origen enumerable
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:unoGIS.Progress.IProgress">
            <summary>
            Define las operaciones que se implementan para notificar el progreso de una operación
            </summary>
        </member>
        <member name="P:unoGIS.Progress.IProgress.Description">
            <summary>
            Descripción de la tarea en progreso
            </summary>
        </member>
        <member name="E:unoGIS.Progress.IProgress.Progress">
            <summary>
            Notificación de operación en progreso
            </summary>
        </member>
        <member name="P:unoGIS.Progress.IProgress.CurrentPercent">
            <summary>
            Retorna el progreso actual en %
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Progress.ProgressEventArgs">
            <summary>
            Argumentos para evento Progress
            </summary>
        </member>
        <member name="F:unoGIS.Progress.ProgressEventArgs.Empty">
            <summary>
            Argumentos de progreso por defecto
            </summary>
        </member>
        <member name="F:unoGIS.Progress.ProgressEventArgs.Percent">
            <summary>
            Cantidad de progreso generado desde la última vez
            </summary>
        </member>
        <member name="M:unoGIS.Progress.ProgressEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="delta">Cantidad de progreso generado desde la última vez</param>
        </member>
        <member name="T:unoGIS.Progress.ProgressManager">
            <summary>
            Manager para operaciones de progreso en comandos
            </summary>
        </member>
        <member name="M:unoGIS.Progress.ProgressManager.Register(unoGIS.Progress.IProgress)">
            <summary>
            Registra una instancia que implementa IProgress
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:unoGIS.Progress.ProgressManager.Unregister(unoGIS.Progress.IProgress)">
            <summary>
            Quita del registro una instancia de IProgress
            </summary>
            <param name="instance"></param>
        </member>
        <member name="P:unoGIS.Progress.ProgressManager.Items">
            <summary>
            Retorna las instancias en progreso
            </summary>
        </member>
        <member name="T:unoGIS.Progress.StreamProgress">
            <summary>
            Clase que encapsula un stream y que se encarga de gestionar el IProgress sobre el stream.
            </summary>
        </member>
        <member name="T:unoGIS.unoGISProject">
            <summary>
            Guarda la configuración de usuario sobre un mapa
            </summary>
        </member>
        <member name="P:unoGIS.unoGISProject.Name">
            <summary>
            Nombre del mapa
            </summary>
        </member>
        <member name="P:unoGIS.unoGISProject.FileName">
            <summary>
            Archivo del mapa
            </summary>
        </member>
        <member name="P:unoGIS.unoGISProject.ProjectExtension">
            <summary>
            Extension del archivo del projecto
            </summary>
        </member>
        <member name="P:unoGIS.unoGISProject.StyleExtension">
            <summary>
            Extension del archivo de estilos
            </summary>
        </member>
        <member name="P:unoGIS.unoGISProject.IsDefined">
            <summary>
            Indica si el proyecto esta definido
            </summary>
        </member>
        <member name="P:unoGIS.unoGISProject.Stroke">
            <summary>
            Trazo
            </summary>
        </member>
        <member name="P:unoGIS.unoGISProject.PointStyles">
            <summary>
            Colección de todos los estilos para puntuales del proyecto
            </summary>
        </member>
        <member name="P:unoGIS.unoGISProject.LineStyles">
            <summary>
            Colección de todos los estilos de línea del proyecto
            </summary>
        </member>
        <member name="P:unoGIS.unoGISProject.FillStyles">
            <summary>
            Colección de todos los estilos de relleno del proyecto
            </summary>
        </member>
        <member name="F:unoGIS.unoGISProject.ProjectLoaded">
            <summary>
            Evento que se lanza cada vez que se carga un proyecto
            </summary>
        </member>
        <member name="F:unoGIS.unoGISProject.ProjectUnloaded">
            <summary>
            Evento que se lanza cada vez que se descarga un proyecto
            </summary>
        </member>
        <member name="M:unoGIS.unoGISProject.#ctor(unoGIS.unoGISContext)">
            <summary>
            Constructor
            </summary>
            <param name="unoGISContext"></param>
        </member>
        <member name="E:unoGIS.unoGISProject.PropertyChanged">
            <summary>
            Evento Propertychanged
            </summary>
        </member>
        <member name="M:unoGIS.unoGISProject.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.unoGISProject.CreateNew(System.String)">
            <summary>
            Crea un nuevo proyecto
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:unoGIS.unoGISProject.Unload">
            <summary>
            Descarga el proyecto actual
            </summary>
        </member>
        <member name="M:unoGIS.unoGISProject.SaveAs(System.String)">
            <summary>
            Guardar como
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.unoGISProject.Save">
            <summary>
            Guardar
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.unoGISProject.Load(System.String)">
            <summary>
            Cargar
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Renderer.Brush">
            <summary>
            Brush
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Brush.Color">
            <summary>
            Color para el patrón de relleno
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Brush.BackColor">
            <summary>
            Color para el fondo del patrón de relleno
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Brush.PathEffect">
            <summary>
            Efecto para aplicar al Paint de Skia
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Brush.#ctor">
            <summary>
            Black solid brush
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Brush.#ctor(SkiaSharp.SKColor)">
            <summary>
            Solid brush
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Brush.#ctor(SkiaSharp.SKColor,SkiaSharp.SKColor,unoGIS.Renderer.HatchStyle)">
            <summary>
            Brush
            </summary>
            <param name="foreColor"></param>
            <param name="backColor"></param>
            <param name="hatchStyle"></param>
        </member>
        <member name="M:unoGIS.Renderer.Brush.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Brushes">
            <summary>
            Brushes
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Brushes.Gray">
            <summary>
            Gray Brush
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Brushes.White">
            <summary>
            White Brush
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Brushes.Black">
            <summary>
            Black Brush
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Brushes.Red">
            <summary>
            Red Brush
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Brushes.DarkGray">
            <summary>
            DarkGray Brush
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Brushes.Silver">
            <summary>
            Silver Brush
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Camera">
            <summary>
            Camara
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.BackColor">
            <summary>
            Color de fondo de la cámara.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.HightLightColor">
            <summary>
            Color de selección de la cámara.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.CoordinateSystem">
            <summary>
            Sistema de coordenadas de la cámara.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.Pitch">
            <summary>
            Ángulo de rotación sobre el eje X.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.Roll">
            <summary>
            Ángulo de rotación sobre el eje Y.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.Yaw">
            <summary>
            Ángulo de rotación sobre el eje Z.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.Scale">
            <summary>
            Factor de escala de la cámara
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.CenterView">
            <summary>
            Centro en coordenadas pixel del Graphics
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.Position">
            <summary>
            Posición de la cámara en coordenadas mundo.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.ScreenM">
            <summary>
            Valor que toma la componente M de las coordenadas generadas por un screen.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.ScreenZ">
            <summary>
            Valor que toma la componente Z de las coordenadas generadas por un screen.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.STWMatrix">
            <summary>
            Matriz de transformación de coordenadas para los ejes de coordenadas en el visor. 
            Se utiliza para transformar las coordenadas correspondientes al curor, click, reset, etc...
            IMPORTANTE: Esta matriz no tiene inversa, por lo que solo hace falta 
            multiplicar el punto por la matriz para obtener su transformado.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.WTSMatrix">
            <summary>
            Matriz de transformación calculada a partir de los parámetros Scale, Yaw, Roll, Pitch y Position
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Camera.CalculateVectorMatrix(unoGIS.Entities.Coordinate,System.Double,System.Double,System.Double)">
            <summary>
            Este método obtienene la matriz utilizada para calcular el vector de selección del visor. 
            IMPORTANTE: La matriz devuelta no tiene inversa, por lo que solo hace falta 
            multiplicar el punto por la matriz para obtener su transformado.
            </summary>
            <param name="center"></param>
            <param name="yaw"></param>
            <param name="pitch"></param>
            <param name="roll"></param>
            <returns></returns>
        </member>
        <member name="E:unoGIS.Renderer.Camera.WinFinished">
            <summary>
            Notifica que ha finalizado de realizar las operaciones de zoom ventana
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Camera.DpmmX">
            <summary>
            Puntos (pixels) por milimetro en horizontal
            </summary>
            <remarks>Por defecto toma el valor 3.77952766f que correcponde a 96 puntos por pulgada</remarks>
        </member>
        <member name="P:unoGIS.Renderer.Camera.DpmmY">
            <summary>
            Puntos (pixels) por milimetro en vertical
            </summary>
            <remarks>Por defecto toma el valor 3.77952766f que correcponde a 96 puntos por pulgada</remarks>
        </member>
        <member name="P:unoGIS.Renderer.Camera.ClipBounds">
            <summary>
            Área visible
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Camera.Clone">
            <summary>
            Implementación de la interfaz ICloneable
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Camera.UndoView">
            <summary>
            Vuelve a la vista anterior
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Camera.Pan(unoGIS.Entities.Coordinate)">
            <summary>
            Realiza Pan
            </summary>
            <param name="vectorScreen">Vector de desplazamineto para el pan.</param>
        </member>
        <member name="M:unoGIS.Renderer.Camera.Win(unoGIS.CoordinateSystems.CoordinateSystem,unoGIS.Entities.BoundingBox)">
            <summary>
            Realiza un win manteniendo la relación de aspecto.
            </summary>
            <param name="worldBox"></param>
        </member>
        <member name="M:unoGIS.Renderer.Camera.Win(unoGIS.CoordinateSystems.CoordinateSystem,unoGIS.Entities.BoundingBox,System.Double,System.Boolean)">
            <summary>
            Realiza un Zoom Ventana
            </summary>
            <param name="cs"></param>
            <param name="worldBox"></param>
            <param name="percentage"></param>
            <param name="ForceAspectRatio"></param>
        </member>
        <member name="M:unoGIS.Renderer.Camera.Zoom(System.Double)">
            <summary>
            Hace Zoom
            </summary>
            <param name="factor"></param>
        </member>
        <member name="M:unoGIS.Renderer.Camera.Zoom(System.Double,unoGIS.Entities.Coordinate)">
            <summary>
            Hace zoom con una coordenada central
            </summary>
            <param name="factor"></param>
            <param name="pointScreen"></param>
        </member>
        <member name="M:unoGIS.Renderer.Camera.Fit(System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}})">
            <summary>
            Hace Fit
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Camera.BoundingBoxOf(unoGIS.CoordinateSystems.CoordinateSystem,System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}})">
            <summary>
            Retorna el BoundingBox que contiene a todas las entitySets en el sistema de coordenadas facilitado.
            </summary>
            <param name="coordinateSystem"></param>
            <param name="entitySets"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Camera.CoordinateScreenToWorld(unoGIS.Entities.Coordinate)">
            <summary>
            Transforma una coordenada pantalla a una mundo.
            </summary>
            <param name="coordinate"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Camera.CoordinateWorldToScreen(unoGIS.Entities.Coordinate)">
            <summary>
            Convierte una coordenada Mundo a una coordenada pantalla.
            </summary>
            <param name="coordinate"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Camera.PixelInWorldUnits">
            <summary>
            Devuelve lo que es un Pixel en unidades mundo del sistema de coordenadas asignado a la cámara.
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Renderer.DashStyle">
            <summary>
            Especifica el estilo de las líneas discontinuas dibujadas con Pen
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.DashStyle.Solid">
            <summary>
            Especifica una línea sólida.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.DashStyle.Dash">
            <summary>
            Especifica una línea formada por guiones.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.DashStyle.Dot">
            <summary>
            Especifica una línea formada por puntos.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.DashStyle.DashDot">
            <summary>
            Especifica una línea formada por un patrón de repetición de guión-punto.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.DashStyle.DashDotDot">
            <summary>
            Especifica una línea formada por un modelo extensible de guión-punto-punto.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.DashStyle.Custom">
            <summary>
            Especifica un estilo de guión personalizado definido por el usuario.
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Dashes">
            <summary>
            Guiones predefinidos
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Dashes.Dash">
            <summary>
            - - - - - - 
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Dashes.Dot">
            <summary>
            · · · · ·
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Dashes.DashDot">
            <summary>
            - · - · - ·
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Dashes.DashDotDot">
            <summary>
            - · · - · · 
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Font">
            <summary>
            Fuente
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Font.Size">
            <summary>
            Alto
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Font.FontName">
            <summary>
            Nombre
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Font.FontStyle">
            <summary>
            Estilo
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Font.GraphicsUnit">
            <summary>
            Unidad gráfica
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Font.Brush">
            <summary>
            Brush
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Font.StringFormat">
            <summary>
            Formato texto
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Font.#ctor(System.String,System.Single)">
            <summary>
            Fuente
            </summary>
            <param name="fontName"></param>
            <param name="height"></param>
        </member>
        <member name="M:unoGIS.Renderer.Font.#ctor(System.String,System.Single,unoGIS.Renderer.GraphicsUnit)">
            <summary>
            Fuente
            </summary>
            <param name="fontName"></param>
            <param name="height"></param>
            <param name="graphicsUnit"></param>
        </member>
        <member name="M:unoGIS.Renderer.Font.#ctor(unoGIS.Renderer.FontFamily,System.Single,unoGIS.Renderer.FontStyle)">
            <summary>
            Fuente
            </summary>
            <param name="fontFamily"></param>
            <param name="size"></param>
            <param name="regular"></param>
        </member>
        <member name="M:unoGIS.Renderer.Font.#ctor(System.String,System.Single,unoGIS.Renderer.FontStyle,unoGIS.Renderer.GraphicsUnit)">
            <summary>
            Fuente
            </summary>
            <param name="fontName"></param>
            <param name="height"></param>
            <param name="fontStyle"></param>
            <param name="pixel"></param>
        </member>
        <member name="M:unoGIS.Renderer.Font.#ctor(System.String,System.Single,unoGIS.Renderer.Brush,SkiaSharp.SKRect,unoGIS.Renderer.StringFormat)">
            <summary>
            Fuente
            </summary>
            <param name="fontName"></param>
            <param name="height"></param>
            <param name="brush"></param>
            <param name="rect"></param>
            <param name="format"></param>
        </member>
        <member name="M:unoGIS.Renderer.Font.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.FontFamily">
            <summary>
            Familia de Fuente
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.FontFamily.Families">
            <summary>
            Familias de Fuente
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.FontFamily.Name">
            <summary>
            Nombre
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.FontFamily.#ctor(System.String)">
            <summary>
            Familia de Fuente
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:unoGIS.Renderer.FontStyle">
            <summary>
            Especifica la información del estilo aplicada al texto
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.FontStyle.Bold">
            <summary>
            Texto en negrita
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.FontStyle.Italic">
            <summary>
            Texto en cursiva
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.FontStyle.Regular">
            <summary>
            Texto normal
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.FontStyle.Strikeout">
            <summary>
            Texto tachado
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.FontStyle.Underline">
            <summary>
            Texto subrayado
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.GraphicsExtensions">
            <summary>
            Clases de extensión
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawLine(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,SkiaSharp.SKPoint,SkiaSharp.SKPoint)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="pen"></param>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawLine(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="pen"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawLines(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,SkiaSharp.SKPoint[])">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="pen"></param>
            <param name="p"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawRect(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,SkiaSharp.SKRect)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="pen"></param>
            <param name="rect"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawRect(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FillRect(SkiaSharp.SKCanvas,unoGIS.Renderer.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="brush"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FillRect(SkiaSharp.SKCanvas,unoGIS.Renderer.Brush,SkiaSharp.SKRect)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="brush"></param>
            <param name="rect"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawEllipse(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="rx"></param>
            <param name="ry"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FillEllipse(SkiaSharp.SKCanvas,unoGIS.Renderer.Brush,SkiaSharp.SKRect)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="brush"></param>
            <param name="rect"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FillEllipse(SkiaSharp.SKCanvas,unoGIS.Renderer.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="brush"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="rx"></param>
            <param name="ry"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawString(SkiaSharp.SKCanvas,System.String,unoGIS.Renderer.Font,unoGIS.Renderer.Brush,SkiaSharp.SKPoint)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <param name="s"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="point"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawString(SkiaSharp.SKCanvas,System.String,unoGIS.Renderer.Font,unoGIS.Renderer.Brush,SkiaSharp.SKRect)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <param name="s"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="rect"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawString(SkiaSharp.SKCanvas,System.String,unoGIS.Renderer.Font,unoGIS.Renderer.Brush,SkiaSharp.SKPoint,unoGIS.Renderer.StringFormat)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <param name="s"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="point"></param>
            <param name="format"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawString(SkiaSharp.SKCanvas,System.String,unoGIS.Renderer.Font,unoGIS.Renderer.Brush,SkiaSharp.SKRect,unoGIS.Renderer.StringFormat)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <param name="s"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="rect"></param>
            <param name="format"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawString(SkiaSharp.SKCanvas,System.String,unoGIS.Renderer.Font,unoGIS.Renderer.Brush,System.Single,System.Single,unoGIS.Renderer.StringFormat)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <param name="s"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="format"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawString(SkiaSharp.SKCanvas,System.String,SkiaSharp.SKPoint,System.Double,unoGIS.Renderer.Font,unoGIS.Entities.Justification,unoGIS.Renderer.Brush,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="text"></param>
            <param name="point"></param>
            <param name="angle"></param>
            <param name="font"></param>
            <param name="justification"></param>
            <param name="brush"></param>
            <param name="glowPen"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.MeasureString(SkiaSharp.SKCanvas,System.String,unoGIS.Renderer.Font)">
            <summary>
            Calcula el tamaño del texto en el canvas
            </summary>
            <param name="c">Canvas</param>
            <param name="text">Texto</param>
            <param name="font">Fuente</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.MeasureString(SkiaSharp.SKCanvas,System.String,System.String,System.Single)">
            <summary>
            Calcula el tamaño del texto en el canvas
            </summary>
            <param name="c">Canvas</param>
            <param name="text">Texto</param>
            <param name="fontFamily">Familia de la fuente</param>
            <param name="textSize">Tamaño del texto</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPoint(SkiaSharp.SKCanvas,unoGIS.Entities.Point,unoGIS.Renderer.Matrix3D,unoGIS.Renderer.unoBitmap)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="point"></param>
            <param name="matrix"></param>
            <param name="bmp"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPoint(SkiaSharp.SKCanvas,unoGIS.Entities.Point,unoGIS.Renderer.Matrix3D,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="point"></param>
            <param name="matrix"></param>
            <param name="pen"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPoint(SkiaSharp.SKCanvas,unoGIS.Entities.Point,unoGIS.Renderer.Matrix3D,unoGIS.Renderer.Pen,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="point"></param>
            <param name="matrix"></param>
            <param name="pen"></param>
            <param name="glow"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPoint(SkiaSharp.SKCanvas,unoGIS.Entities.Point,unoGIS.Renderer.Matrix3D,unoGIS.Entities.MultiGeometry,unoGIS.Renderer.Pen,unoGIS.Renderer.Brush)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="point"></param>
            <param name="matrix"></param>
            <param name="style"></param>
            <param name="pen"></param>
            <param name="brush"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPoint(SkiaSharp.SKCanvas,unoGIS.Entities.Point,unoGIS.Renderer.Matrix3D,unoGIS.Entities.MultiGeometry,unoGIS.Renderer.Pen,unoGIS.Renderer.Brush,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="point"></param>
            <param name="matrix"></param>
            <param name="style"></param>
            <param name="pen"></param>
            <param name="brush"></param>
            <param name="glow"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPolyline(SkiaSharp.SKCanvas,unoGIS.Entities.Polyline,unoGIS.Renderer.Matrix3D,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="polyline"></param>
            <param name="matrix"></param>
            <param name="pen"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPolyline(SkiaSharp.SKCanvas,unoGIS.Entities.Polyline,unoGIS.Renderer.Matrix3D,unoGIS.Renderer.Pen,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="polyline"></param>
            <param name="matrix"></param>
            <param name="pen"></param>
            <param name="glow"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPolyline(SkiaSharp.SKCanvas,unoGIS.Entities.Polyline,unoGIS.Renderer.Matrix3D,unoGIS.Entities.MultiGeometry,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="polyline"></param>
            <param name="matrix"></param>
            <param name="style"></param>
            <param name="pen"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPolyline(SkiaSharp.SKCanvas,unoGIS.Entities.Polyline,unoGIS.Renderer.Matrix3D,unoGIS.Entities.MultiGeometry,unoGIS.Renderer.Pen,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="polyline"></param>
            <param name="matrix"></param>
            <param name="style"></param>
            <param name="pen"></param>
            <param name="glow"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPolygon(SkiaSharp.SKCanvas,unoGIS.Entities.Polygon,unoGIS.Renderer.Matrix3D,unoGIS.Renderer.Pen,unoGIS.Renderer.Brush)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="polygon"></param>
            <param name="matrix"></param>
            <param name="pen"></param>
            <param name="brush"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPolygon(SkiaSharp.SKCanvas,unoGIS.Entities.Polygon,unoGIS.Renderer.Matrix3D,unoGIS.Entities.MultiGeometry,unoGIS.Renderer.Pen,unoGIS.Renderer.Brush)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="polygon"></param>
            <param name="matrix"></param>
            <param name="style"></param>
            <param name="pen"></param>
            <param name="brush"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPolygon(SkiaSharp.SKCanvas,unoGIS.Entities.Polygon,unoGIS.Renderer.Matrix3D,unoGIS.Entities.MultiGeometry,unoGIS.Renderer.Pen,unoGIS.Renderer.Pen,unoGIS.Renderer.Brush)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="polygon"></param>
            <param name="matrix"></param>
            <param name="style"></param>
            <param name="pen"></param>
            <param name="glow"></param>
            <param name="brush"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawMultiPoint(SkiaSharp.SKCanvas,unoGIS.Entities.MultiPoint,unoGIS.Renderer.Matrix3D,unoGIS.Renderer.unoBitmap)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="mPoint"></param>
            <param name="matrix"></param>
            <param name="bmp"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawMultiPoint(SkiaSharp.SKCanvas,unoGIS.Entities.MultiPoint,unoGIS.Renderer.Matrix3D,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="mPoint"></param>
            <param name="matrix"></param>
            <param name="pen"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawMultiPoint(SkiaSharp.SKCanvas,unoGIS.Entities.MultiPoint,unoGIS.Renderer.Matrix3D,unoGIS.Renderer.Pen,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="mPoint"></param>
            <param name="matrix"></param>
            <param name="pen"></param>
            <param name="glow"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawMultiPoint(SkiaSharp.SKCanvas,unoGIS.Entities.MultiPoint,unoGIS.Renderer.Matrix3D,unoGIS.Entities.MultiGeometry,unoGIS.Renderer.Pen,unoGIS.Renderer.Brush)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="mPoint"></param>
            <param name="matrix"></param>
            <param name="style"></param>
            <param name="pen"></param>
            <param name="brush"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawMultiPoint(SkiaSharp.SKCanvas,unoGIS.Entities.MultiPoint,unoGIS.Renderer.Matrix3D,unoGIS.Entities.MultiGeometry,unoGIS.Renderer.Pen,unoGIS.Renderer.Brush,unoGIS.Renderer.Pen)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="mPoint"></param>
            <param name="matrix"></param>
            <param name="style"></param>
            <param name="pen"></param>
            <param name="brush"></param>
            <param name="glow"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawRaster(SkiaSharp.SKCanvas,unoGIS.Entities.Raster,unoGIS.Renderer.Matrix3D,System.Byte)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="raster"></param>
            <param name="matrix"></param>
            <param name="Alpha"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPath(SkiaSharp.SKCanvas,unoGIS.Renderer.Brush,System.Collections.Generic.List{SkiaSharp.SKPoint[]})">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="brush"></param>
            <param name="rings"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPath(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,SkiaSharp.SKPath)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="pen"></param>
            <param name="path"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FillPie(SkiaSharp.SKCanvas,unoGIS.Renderer.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="brush"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="startAngle"></param>
            <param name="sweepAngle"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPie(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Dibuja una tarta
            </summary>
            <param name="canvas"></param>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="startAngle"></param>
            <param name="sweepAngle"></param>
            <param name="drawCircumference"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawImage(SkiaSharp.SKCanvas,unoGIS.Renderer.unoBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="bmp"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawImageUnscaled(SkiaSharp.SKCanvas,unoGIS.Renderer.unoBitmap,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="bmp"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPath(SkiaSharp.SKCanvas,SkiaSharp.SKPaint,SkiaSharp.SKPath,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="paint"></param>
            <param name="dash"></param>
            <param name="x0"></param>
            <param name="y0"></param>
            <param name="x1"></param>
            <param name="y1"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawLinesClipped(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,System.Collections.Generic.IEnumerable{SkiaSharp.SKPoint})">
            <summary>
            Dibuja líneas recortadas (Clipping) a los límites de visualización de un Graphics
            </summary>
            <param name="canvas">Lienzo</param>
            <param name="pen">Lápiz</param>
            <param name="points">Puntos que definen los segmentos de línea</param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawLinesFast(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,System.Collections.Generic.IEnumerable{SkiaSharp.SKPoint})">
            <summary>
            Dibuja líneas sin recortar a los límites de visualización de un Graphics
            </summary>
            <param name="canvas">Lienzo</param>
            <param name="pen">Lápiz</param>
            <param name="points">Puntos que definen los segmentos de línea</param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FillPolygon(SkiaSharp.SKCanvas,unoGIS.Renderer.Brush,SkiaSharp.SKPoint[])">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="brush"></param>
            <param name="points"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.DrawPolygon(SkiaSharp.SKCanvas,unoGIS.Renderer.Pen,SkiaSharp.SKPoint[])">
            <summary>
            
            </summary>
            <param name="canvas"></param>
            <param name="pen"></param>
            <param name="points"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FillPolygonClipped(SkiaSharp.SKCanvas,unoGIS.Renderer.Brush,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{SkiaSharp.SKPoint}})">
            <summary>
            Dibuja polígonos recortadas (Clipping) a los límites de visualización de un Graphics
            </summary>
            <param name="canvas">Lienzo</param>
            <param name="brush">Brocha</param>
            <param name="rings">Anillos que forman el polígono</param>        
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FillPolygonFast(SkiaSharp.SKCanvas,unoGIS.Renderer.Brush,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{SkiaSharp.SKPoint}})">
            <summary>
            Dibuja polígonos sin recortar a los límites de visualización de un Graphics
            </summary>
            <param name="canvas">Lienzo</param>
            <param name="brush">Brocha</param>
            <param name="rings">Anillos que forman el polígono</param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.ClampPoints(System.Collections.Generic.IEnumerable{SkiaSharp.SKPoint})">
            <summary>
            Limita las coordenadas que definen geometría a dibujar para que no aparezcan Overflows
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.PaintWithStyle(SkiaSharp.SKCanvas,System.Collections.Generic.List{SkiaSharp.SKPoint},unoGIS.Entities.MultiGeometry,unoGIS.Renderer.Pen)">
            <summary>
            Pinta una línea con un estilo basado en geometría
            </summary>
            <param name="canvas"></param>
            <param name="points"></param>
            <param name="scaledGeometries"></param>
            <param name="pen"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.Clone(SkiaSharp.SKBitmap)">
            <summary>
            
            </summary>
            <param name="bitmap"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.Clone(SkiaSharp.SKMatrix)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.RotateAt(SkiaSharp.SKMatrix,System.Single,SkiaSharp.SKPoint)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
            <param name="angle"></param>
            <param name="center"></param>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.GetName(SkiaSharp.SKColor)">
            <summary>
            
            </summary>
            <param name="skColor"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.ToArgb(SkiaSharp.SKColor)">
            <summary>
            
            </summary>
            <param name="skColor"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FromArgb(SkiaSharp.SKColor,System.Int32,SkiaSharp.SKColor)">
            <summary>
            
            </summary>
            <param name="skColor"></param>
            <param name="alpha"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.GraphicsExtensions.FromArgb(SkiaSharp.SKColor,System.Int32)">
            <summary>
            
            </summary>
            <param name="skColor"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Renderer.GraphicsUnit">
            <summary>
            Especifica la unidad de medida para los datos dados.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.GraphicsUnit.World">
            <summary>
            Especifica la unidad del sistema de coordenadas mundiales como la unidad de medida.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.GraphicsUnit.Display">
            <summary>
            Especifica la unidad de medida del dispositivo de visualización. Típicamente píxeles para pantallas de video, y 1/100 pulgadas
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.GraphicsUnit.Pixel">
            <summary>
            Especifica un píxel de dispositivo como la unidad de medida.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.GraphicsUnit.Point">
            <summary>
            Especifica el punto de una impresora (1/72 de pulgada) como la unidad de medida.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.GraphicsUnit.Inch">
            <summary>
            Especifica la pulgada como la unidad de medida.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.GraphicsUnit.Document">
            <summary>
            Especifica la unidad de documento (1/300 pulgada) como la unidad de medida.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.GraphicsUnit.Millimeter">
            <summary>
            Especifica el milímetro como la unidad de medida.
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.HatchStyle">
            <summary>
            Especifica los distintos patrones disponibles para Renderer.HatchBrush
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Horizontal">
            <summary>
            Patrón de líneas horizontales.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Vertical">
            <summary>
            Patrón de líneas verticales.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.ForwardDiagonal">
            <summary>
            Patrón de líneas en diagonal desde el lado superior izquierdo al inferior derecho.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.BackwardDiagonal">
            <summary>
            Patrón de líneas en diagonal desde el lado superior derecho al inferior izquierdo.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.LargeGrid">
            <summary>
            Especifica el estilo de trama System.Drawing.Drawing2D.HatchStyle.Cross.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DiagonalCross">
            <summary>
            Modelo de líneas diagonales entrecruzadas.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent05">
            <summary>
            Especifica una trama del 5 por ciento. La proporción del color de primer plano al color de fondo es 5:95.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent10">
            <summary>
            Especifica una trama de 10 por ciento. La proporción del color de primer plano al color de fondo es 10:90.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent20">
            <summary>
            Especifica una trama del 20 por ciento. La proporción del color de primer plano al color de fondo es 20:80.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent25">
            <summary>
            Especifica una trama de 25 por ciento. La proporción del color de primer plano al color de fondo es 25:75.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent30">
            <summary>
            Especifica una trama de 30 por ciento. La proporción del color de primer plano al color de fondo es 30:70.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent40">
            <summary>
            Especifica una trama de 40 por ciento. La proporción del color de primer plano al color de fondo es 40:60.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent50">
            <summary>
            Especifica una trama del 50 por ciento. La proporción del color de primer plano al color de fondo es 50: 50.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent60">
            <summary>
            Especifica una trama de 60 por ciento. La proporción del color de primer plano al color de fondo es 60:40.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent70">
            <summary>
            Especifica una trama de 70 por ciento. La proporción del color de primer plano al color de fondo es 70:30.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent75">
            <summary>
            Especifica una trama en un 75%. La proporción del color de primer plano al color de fondo es 75:25.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent80">
            <summary>
            Especifica una trama del 80 por ciento. La proporción del color de primer plano al color de fondo es 80:100.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Percent90">
            <summary>
            Especifica una trama del 90 por ciento. La proporción del color de primer plano al color de fondo es 90:10.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.LightDownwardDiagonal">
            <summary>
            Especifica líneas diagonales inclinación hacia la derecha desde los puntos superiores
            a los inferiores, con una separación un 50 por ciento menos que System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal,
            pero no con suavizado de contorno.
            </summary>        
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.LightUpwardDiagonal">
            <summary>
            Especifica líneas diagonales inclinación hacia la izquierda desde los puntos
            superiores a los inferiores, con una separación un 50 por ciento menos que System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal,
            pero no lo son con suavizado de contorno.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DarkDownwardDiagonal">
            <summary>
            Especifica líneas diagonales inclinación hacia la derecha desde los puntos superiores
            a los inferiores, espaciados 50 por ciento menos que, y son el doble de ancho
            de System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal. Este patrón de trama
             no es AntiAlias.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DarkUpwardDiagonal">
            <summary>
            Especifica líneas diagonales inclinadas hacia la izquierda desde los puntos superiores
            a los inferiores, espaciados 50 por ciento menos que System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal,
            y son el doble de ancho, pero las líneas no son AntiAlias.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.WideDownwardDiagonal">
            <summary>
            Especifica líneas diagonales inclinadas hacia la derecha desde los puntos superiores
            a los inferiores, con la misma separación que el estilo de trama System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal,
            y es el triple de anchas, pero no son AntiAlias.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.WideUpwardDiagonal">
            <summary>
            Especifica líneas diagonales inclinadas hacia la izquierda desde los puntos superiores
            a los inferiores, con la misma separación que el estilo de trama System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal,
            y es el triple de anchas, pero no son AntiAlias.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.LightVertical">
            <summary>
            Especifica líneas verticales separadas un 50 por ciento menos que System.Drawing.Drawing2D.HatchStyle.Vertical.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.LightHorizontal">
            <summary>
            Especifica líneas horizontales separadas un 50 por ciento menos que System.Drawing.Drawing2D.HatchStyle.Horizontal.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.NarrowVertical">
            <summary>
            Especifica líneas verticales separadas un 75 por ciento menos que el estilo de
            trama System.Drawing.Drawing2D.HatchStyle.Vertical (o 25 por ciento menos que
            System.Drawing.Drawing2D.HatchStyle.LightVertical).
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.NarrowHorizontal">
            <summary>
            Especifica líneas horizontales separadas un 75 por ciento menos que el estilo
            de trama System.Drawing.Drawing2D.HatchStyle.Horizontal (o 25 por ciento menos
            que System.Drawing.Drawing2D.HatchStyle.LightHorizontal).
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DarkVertical">
            <summary>
            Especifica líneas verticales separadas un 50 por ciento menos que System.Drawing.Drawing2D.HatchStyle.Vertical y son el doble de ancho.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DarkHorizontal">
            <summary>
            Especifica líneas horizontales separadas un 50 por ciento menos que System.Drawing.Drawing2D.HatchStyle.Horizontal
            y son el doble de ancho de System.Drawing.Drawing2D.HatchStyle.Horizontal.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DashedDownwardDiagonal">
            <summary>
            Especifica líneas discontinuas diagonales inclinación hacia la derecha desde
            los puntos superiores a los inferiores.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DashedUpwardDiagonal">
            <summary>
            Especifica líneas discontinuas diagonales inclinación hacia la izquierda desde
            los puntos superiores a los inferiores.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DashedHorizontal">
            <summary>
            Especifica líneas discontinuas horizontales.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DashedVertical">
            <summary>
            Especifica líneas discontinuas verticales.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.SmallConfetti">
            <summary>
            Especifica una trama con el aspecto de confeti.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.LargeConfetti">
            <summary>
            Especifica una trama con el aspecto de confeti formado por piezas más grandes
            que System.Drawing.Drawing2D.HatchStyle.SmallConfetti.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.ZigZag">
            <summary>
            Especifica líneas horizontales zigzag.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Wave">
            <summary>
            Especifica líneas horizontales formadas por tildes.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DiagonalBrick">
            <summary>
            Especifica una trama con el aspecto de ladrillos superpuestos inclinadas hacia
            la izquierda desde los puntos superiores a los inferiores.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.HorizontalBrick">
            <summary>
            Especifica una trama con el aspecto de ladrillos superpuestos horizontalmente.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Weave">
            <summary>
            Especifica una trama con el aspecto de un tejido.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Plaid">
            <summary>
            Especifica una trama con el aspecto de un material tartán.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Divot">
            <summary>
            Especifica una trama con el aspecto de terrones.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DottedGrid">
            <summary>
            Especifica líneas horizontales y verticales, cada uno de ellos está formado por puntos, que cruzan.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.DottedDiamond">
            <summary>
            Especifica hacia delante y hacia atrás líneas diagonales, cada uno de ellos está
            formado por puntos, que cruzan.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Shingle">
            <summary>
            Especifica una trama con el aspecto de capas guijarros diagonales inclinadas
            hacia la derecha desde los puntos superiores a los inferiores.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Trellis">
            <summary>
            Especifica una trama con el aspecto de un enrejado.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Sphere">
            <summary>
            Especifica una trama con el aspecto de esferas situadas unas junto a ellas.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.SmallGrid">
            <summary>
            Especifica líneas horizontales y verticales separadas un 50 por ciento menos
            que el estilo de trama System.Drawing.Drawing2D.HatchStyle.Cross.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.SmallCheckerBoard">
            <summary>
            Especifica una trama con el aspecto de un tablero.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.LargeCheckerBoard">
            <summary>
            Especifica una trama con el aspecto de un tablero de cuadros que son dos veces
            el tamaño de System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.OutlinedDiamond">
            <summary>
             Especifica líneas diagonales hacia delante y hacia atrás que se entrecruzan pero
             sin aplicar suavizado de contorno.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.SolidDiamond">
            <summary>
            Especifica una trama con el aspecto de un tablero diagonal.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.HatchStyle.Solid">
            <summary>
            Solido
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Matrix3D">
            <summary>
            Un objeto Matrix3D representa una matriz de 4x4, la matrix representa una transformación afin.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Matrix3D.Identity">
            <summary>
            Matriz identidad
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.RotateAt(System.Double,System.Double,System.Double,unoGIS.Entities.Coordinate)">
            <summary>
            
            </summary>
            <param name="yaw">Ángulo de rotación sobre el eje Z</param>
            <param name="pitch">Ángulo de rotación sobre el eje X</param>
            <param name="roll">Ángulo de rotación sobre el eje Y</param>
            <param name="center"></param>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.CoordinateToPoint(System.Collections.Generic.List{unoGIS.Entities.Coordinate})">
            <summary>
            Aplica la matriz a una colección de puntos.
            </summary>
            <param name="coordinates"></param>
            <returns>Devuelve una secuencia de Point donde se han surprimido los repetidos.</returns>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.Equals(unoGIS.Renderer.Matrix3D,unoGIS.Renderer.Matrix3D)">
            <summary>
            Determina si dos matrices son iguales.
            </summary>
            <param name="matrix1">Primera matriz a comparar.</param>
            <param name="matrix2">Segunda matriz a comparar.</param>
            <returns>Retorna true si las dos matrices son iguales.</returns>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.Equals(System.Object)">
            <summary>
            Determina si la matriz es igual a otra matriz.
            </summary>
            <param name="o">Matriz contra la que se compara.</param>
            <returns>Retorna true si las dos matrices son iguales.</returns>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.Equals(unoGIS.Renderer.Matrix3D)">
            <summary>
            Determina si la matriz es igual a otra matriz.
            </summary>
            <param name="matriz">Matriz contra la que se compara.</param>
            <returns>Retorna true si las dos matrices son iguales.</returns>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.GetHashCode">
            <summary>
            Calcula una clave Hash para la matriz.
            </summary>
            <returns>Retorna un entero que es una clave Hash para esta matriz.</returns>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.Clone">
            <summary>
            Devuelve una Matrix3D igual a la invocadora.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.GetSchema">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.ReadXml(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3D.WriteXml(System.Xml.XmlWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:unoGIS.Renderer.Matrix3x3Solver">
            <summary>
            Clase para resolver sistemas de ecuaciones que den lugar a una matriz de 3x3
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Matrix3x3Solver.matrix">
            <summary>
            Matriz que representa la ecuacion
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Matrix3x3Solver.der">
            <summary>
            Parte derecha de la ecuacion
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Matrix3x3Solver.dm">
            <summary>
            Determinate
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3x3Solver.#ctor(System.Double[][],System.Double[])">
            <summary>
            Inicializa el sistema de ecuaciones
            </summary>
            <param name="_matrix">Matriz que representa las ecuaciones</param>
            <param name="_der">Parte derecha de las ecuaciones</param>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3x3Solver.SwapRows(System.Int32,System.Int32,System.Double[][]@)">
            <summary>
            Metodo para calcular el determinate de una matriz
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="m"></param>
        </member>
        <member name="M:unoGIS.Renderer.Matrix3x3Solver.Solve">
            <summary>
            Metodo que resuelve el sistema de ecuaciones
            </summary>
            <returns>Arreglo con las soluciones</returns>
        </member>
        <member name="T:unoGIS.Renderer.Painters.IPainter">
            <summary>
            Interfaz para las clases que se encargan del render de las geometrías.
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.IPainter.StartPaint">
            <summary>
            Se informa al Painter de que se va a comenzar un ciclo de refresco.
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.IPainter.EndPaint">
            <summary>
            Se informa al Painter de que se ha terminado un ciclo de refresco.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.IPainter.Alpha">
            <summary>
            Componente Alpha (traspariencia)
            0 - Trasparente .. 255 - Opaco
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.IPainter.Render(unoGIS.Renderer.Camera,SkiaSharp.SKCanvas,unoGIS.Renderer.Painters.PaintMode,unoGIS.Entities.Geometry,unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Renderiza una geometría sobre un Graphics
            </summary>
            <param name="camera">Cámara del observador</param>
            <param name="graphics">Graphics sobre el que se hace el render</param>
            <param name="mode">Modo en el que se hace el render de la geometría</param>
            <param name="geometry">Geoemtría a renderizar</param>
            <param name="csc">
            Conversor de sistemas de coordenadas para convertir las coordenadas del sistemade de coordenadas de la geometría al sistema de coordendas de la cámara.
            Se admite que el parámetro sea null, en cuyo caso no se aplicará ningún cambio de sistema de coordendas.
            </param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.IPainter.GetSample(System.Int32,System.Int32,System.Type)">
            <summary>
            Crea un bitmap con un ejemplo de como se visualiza una geometría con este IPainter.
            </summary>
            <param name="width">Ancho del bitmap de salida.</param>
            <param name="height">Alto del bitmap de salida.</param>
            <param name="gType">Tipo de la entidad de la cual se desea el ejemplo.</param>
            <returns>Bitmap con la imagen que representa un ejemplo de cómo hace el render el IPainter</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.IPainter.Clone">
            <summary>
            Crea y devuelve una copia exacta del objeto.
            </summary>
            <returns>
            Devuelve una copia del objeto.
            </returns>
        </member>
        <member name="T:unoGIS.Renderer.Painters.IThematization">
            <summary>
            Representa una tematización dinámica sobre elementos gráficos
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.IThematization.Owner">
            <summary>
            Tema asociado a la tematización
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.IThematization.Enabled">
            <summary>
            Indica si la tematización es aplicable
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ITheme">
            <summary>
            Representa un tema de un mapa temático (en UI)
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ITheme.Title">
            <summary>
            Título
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ITheme.ThematicMap">
            <summary>
            Mapa temático
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ITheme.Style">
            <summary>
            Estilo de representación
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.LabelPainter">
            <summary>
            Pintor para etiquetas.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.Description">
            <summary>
            Descripcción
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.Alpha">
            <summary>
            Grado de transparencia
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.Justification">
            <summary>
            Justificación del texto.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.Text">
            <summary>
            Texto a mostrar.
            El texto es dinámico, por lo que aquellas partes del texto entre llaves, se tratará de sustituir por el valor del atributo de nombre coincidente.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.AngleFieldName">
            <summary>
            Atributo de una Geometría que contiene el ángulo para el texto.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.UseScaleFactor">
            <summary>
            Indica si el tamaño de las fuentes varía en función de la escala de visualización
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.FontName">
            <summary>
            Nombre de la fuente
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.FontSize">
            <summary>
            Tamaño de la fuente
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.GlowColor">
            <summary>
            Color del glow
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.GlowWidth">
            <summary>
            Ancho del glow
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.FillColor">
            <summary>
            Color del relleno
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.#ctor">
            <summary>
            Constructor por defecto
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.#ctor(SkiaSharp.SKColor,System.Single,SkiaSharp.SKColor,System.String,System.String,System.Single,unoGIS.Entities.Justification,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="GlowColor"></param>
            <param name="GlowWidth"></param>
            <param name="FillColor"></param>
            <param name="text"></param>
            <param name="fontName"></param>
            <param name="fontSize"></param>
            <param name="justify"></param>
            <param name="UseScaleFactor"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.#ctor(unoGIS.Renderer.Painters.LabelPainter)">
            <summary>
            Constructor a partir de otro label painter
            </summary>
            <param name="other"></param>
        </member>
        <member name="P:unoGIS.Renderer.Painters.LabelPainter.Active">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.StartPaint">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.EndPaint">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.Render(unoGIS.Renderer.Camera,SkiaSharp.SKCanvas,unoGIS.Renderer.Painters.PaintMode,unoGIS.Entities.Geometry,unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Renderiza una geometría sobre un Graphics
            </summary>
            <param name="camera">Cámara del observador</param>
            <param name="canvas">Canvas sobre el que se hace el render</param>
            <param name="mode">Modo en el que se hace el render de la geometría</param>
            <param name="geometry">Geoemtría a renderizar</param>
            <param name="csc">
            Conversor de sistemas de coordenadas para convertir las coordenadas del sistemade de coordenadas de la geometría al sistema de coordendas de la cámara.
            Se admite que el parámetro sea null, en cuyo caso no se aplicará ningún cambio de sistema de coordendas.
            </param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.GetSample(System.Int32,System.Int32,System.Type)">
            <summary>
            Crea un bitmap con un ejemplo de como se visualiza una geometría con este IPainter.
            </summary>
            <param name="width">Ancho del bitmap de salida.</param>
            <param name="height">Alto del bitmap de salida.</param>
            <param name="type">Tipo de geometría que se desea en el ejemplo.</param>
            <returns>Bitmap con la imagen que representa un ejemplo de cómo hace el render el IPainter</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.GetSchema">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.ScaleText(System.Single)">
            <summary>
            
            </summary>
            <param name="scale"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.ReadXml(System.Xml.XmlReader)">
            <summary>
            Se carga desde un XML.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Se escribe en un XML.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.LabelPainter.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.Painter">
            <summary>
            Clase que contiene la información de configuración de una EntitySet
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.Alpha">
            <summary>
            Grado de transparencia aplicado a los raster
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.LineColor">
            <summary>
            Color de la linea.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.LineWidth">
            <summary>
            Ancho de línea de la capa 
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.GlowColor">
            <summary>
            Color del halo
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.GlowWidth">
            <summary>
            Ancho del halo
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.FillColor">
            <summary>
            Color del relleno
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.PointStyle">
            <summary>
            Estilo para los puntuales.
            Si el valor es null se dibuja un circulo.
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.LineStyle">
            <summary>
            Estilo para líneas.
            Si toma el valor null el estilo es un trazo continuo.
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.FillStyle">
            <summary>
            Patrón para dibujar rellenos
            </summary>    
        </member>
        <member name="P:unoGIS.Renderer.Painters.Painter.Thematizations">
            <summary>
            Listado de tematizaciones
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.#ctor">
            <summary>
            Constructor. Crea un EntitySetPaintStyle con los valores por defecto
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.#ctor(SkiaSharp.SKColor,SkiaSharp.SKColor,SkiaSharp.SKColor,System.Single,System.Single)">
            <summary>
            Crea un Painter con los valores pasados por parámetros.
            </summary>
            <param name="lineColor"></param>
            <param name="fillColor"></param>
            <param name="glowColor"></param>
            <param name="lineWidth"></param>
            <param name="glowWidth"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.RandomCfg(unoGIS.Entities.GeometryEnumType)">
            <summary>
            Genera una configuración aletoria
            </summary>
            <param name="gType"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.InvertColor(SkiaSharp.SKColor)">
            <summary>
            Invierte un color
            </summary>
            <param name="source">Color a invertir</param>
            <returns>Color invertido</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.RandomColor(SkiaSharp.SKColor)">
            <summary>
            Genera un color de forma aleatoria.
            </summary>
            <param name="colorBase">Color a partir que se genera el nuevo color</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.Clone">
            <summary>
            Retorna un objeto indentico a este.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.StartPaint">
            <summary>
            Indica que se va a comenzar un pintado nuevo.
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.EndPaint">
            <summary>
            Indica que se ha terminado un pintado.
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.StyleComponentsFor(unoGIS.Entities.Geometry)">
            <summary>
            Devuelve un StyleComponents con los estilos y tematizaciones aplicadas para una geometría concreta.
            Si geometry es null no se trata de aplicar las tematizaciones.
            </summary>
            <param name="geometry"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.Render(unoGIS.Renderer.Camera,SkiaSharp.SKCanvas,unoGIS.Renderer.Painters.PaintMode,unoGIS.Entities.Geometry,unoGIS.CoordinateSystems.CoordinateSystemsConverter)">
            <summary>
            Renderiza una geometría sobre un Graphics
            </summary>
            <param name="camera">Cámara del observador</param>
            <param name="canvas">Canvas sobre el que se hace el render</param>
            <param name="mode">Modo en el que se hace el render de la geometría</param>
            <param name="geometry">Geoemtría a renderizar</param>
            <param name="csc">
            Conversor de sistemas de coordenadas para convertir las coordenadas del sistemade de coordenadas de la geometría al sistema de coordendas de la cámara.
            Se admite que el parámetro sea null, en cuyo caso no se aplicará ningún cambio de sistema de coordendas.
            </param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.RenderMultiPoint(unoGIS.Entities.MultiPoint,SkiaSharp.SKCanvas,unoGIS.Renderer.Camera,unoGIS.Renderer.Painters.PaintMode,unoGIS.Renderer.StyleComponents)">
            <summary>
            Renderiza un multipunto.
            </summary>
            <param name="mPoint"></param>
            <param name="canvas"></param>
            <param name="camera"></param>
            <param name="mode"></param>
            <param name="style"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.RenderMultiGeometry(unoGIS.Entities.MultiGeometry,SkiaSharp.SKCanvas,unoGIS.Renderer.Camera,unoGIS.Renderer.Painters.PaintMode,unoGIS.Renderer.StyleComponents)">
            <summary>
            Renderiza una multigeometría
            </summary>
            <param name="multigeometry"></param>
            <param name="canvas"></param>
            <param name="camera"></param>
            <param name="mode"></param>
            <param name="style"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.RenderRaster(unoGIS.Entities.Raster,SkiaSharp.SKCanvas,unoGIS.Renderer.Camera,unoGIS.Renderer.Painters.PaintMode,unoGIS.Renderer.StyleComponents)">
            <summary>
            Renderiza un raster
            </summary>
            <param name="raster"></param>
            <param name="canvas"></param>
            <param name="camera"></param>
            <param name="mode"></param>
            <param name="style"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.GetSample(System.Int32,System.Int32,System.Type)">
            <summary>
            Crea un bitmap con un ejemplo de como se visualiza una geometría con este IPainter.
            </summary>
            <param name="width">Ancho del bitmap de salida.</param>
            <param name="height">Alto del bitmap de salida.</param>
            <param name="type">Tipo de geometría que se desea en el ejemplo.</param>
            <returns>Bitmap con la imagen que representa un ejemplo de cómo hace el render el IPainter</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.GetSchema">
            <summary>
            Devuelve el XmlSchema
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.ReadXml(System.Xml.XmlReader)">
            <summary>
            Rellena al invocador.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.Painter.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escribe en invocador.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ColorExtensions">
            <summary>
            Clase que extiende los métodos de Color para ser serializable a una cadena de texto
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Painters.ColorExtensions.ColorSeparator">
            <summary>
            Separador de las componentes del color
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ColorExtensions.ToXmlString(SkiaSharp.SKColor)">
            <summary>
            Devuelve un String en formato : "A,R,G,B"
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ColorExtensions.ToColor(System.String)">
            <summary>
            A partir de un String en formato "A,R,G,B" devuelve un color.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ColorExtensions.ToHtml(SkiaSharp.SKColor)">
            <summary>
            A partir de un Color devuelve un string en formato Html (#RRGGBBAA)
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Renderer.Painters.PaintMode">
            <summary>
            Enumerador que se emplea para definir modos de los painters.
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.StylePainter">
            <summary>
            Estilo para dibujar elementos gráficos (Geometry)
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.StylePainter.Value">
            <summary>
            Valor del estilo de línea
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.#ctor(unoGIS.Renderer.unoBitmap)">
            <summary>
            
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.#ctor(unoGIS.Renderer.HatchStyle)">
            <summary>
            
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.#ctor(unoGIS.Renderer.DashStyle)">
            <summary>
            
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.#ctor(unoGIS.Entities.MultiGeometry)">
            <summary>
            
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.ToBase64">
            <summary>
            Serializa el estilo a cadena de caracteres codificada en Base64
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.FromBase64(System.String)">
            <summary>
            Deserializa el estilo
            </summary>
            <param name="base64"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.Equals(unoGIS.Renderer.Painters.StylePainter)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.StylePainter.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ThematicMap">
            <summary>
            Mapa temático
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematicMap.Title">
            <summary>
            Título
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematicMap.Themes">
            <summary>
            Lista de temas
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ThematicMaps.DefaultThematization">
            <summary>
            Tematizador para aplicar los estilos de los mapas temáticos
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.DefaultThematization.#ctor(unoGIS.SpatialObjects.ISpatialDriver,unoGIS.Renderer.Painters.ThematicMaps.Theme,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="driver">ISpatialDriver</param>
            <param name="entityTypeName">Nombre del tipo de la entidad sobre la que se aplica la tematización</param>
            <param name="theme">Definición de estilos de la tematización</param>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematicMaps.DefaultThematization.Theme">
            <summary>
            Estilos de la tematización
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper">
            <summary>
            Helper para gestionar temas de Mapas Temáticos
            </summary>
        </member>
        <member name="E:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper.ThematicMapChanged">
            <summary>
            Notifica actualizaciones de mapas temáticos
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper.ParseThemes(System.String)">
            <summary>
            Obtiene todos los temas que conforman un mapa temático
            </summary>
            <param name="xml">Contenido XML como string</param>
            <returns>Temas</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper.ParseThemes(System.Xml.Linq.XElement)">
            <summary>
            Obtiene todos los temas que conforman un mapa temático
            </summary>
            <param name="xml">Contenido XML como instancia XElement</param>
            <returns>Temas</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper.Serialize(unoGIS.Renderer.Painters.ThematicMaps.Theme)">
            <summary>
            Serializa un tema a XML
            </summary>
            <param name="theme">Tema</param>
            <returns>XML</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper.Serialize(System.Collections.Generic.IEnumerable{unoGIS.Renderer.Painters.ThematicMaps.Theme})">
            <summary>
            Serializa una colección de temas a XML
            </summary>
            <param name="themes">Colección de temas</param>
            <returns>XML</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper.ReplaceThemes(System.Collections.Generic.IEnumerable{unoGIS.Renderer.Painters.ThematicMaps.Theme},System.Collections.Generic.IEnumerable{unoGIS.Renderer.Painters.ThematicMaps.Theme})">
            <summary>
            Cambia unos temas por otros
            </summary>
            <param name="driver">ISpatialDriver que contiene los EntitySet</param>
            <param name="oldThemes">Temas antiguos</param>
            <param name="newThemes">Temas nuevos</param>
            <returns>XML</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper.ApplyThemes(unoGIS.SpatialObjects.ISpatialDriver,System.Collections.Generic.IEnumerable{unoGIS.Renderer.Painters.ThematicMaps.Theme})">
            <summary>
            Aplica temas a EntitySets
            </summary>
            <param name="driver">ISpatialDriver que contiene los EntitySet</param>
            <param name="themes">Temas que se aplican</param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper.RemoveThemes(unoGIS.SpatialObjects.ISpatialDriver,System.Collections.Generic.IEnumerable{unoGIS.Renderer.Painters.ThematicMaps.Theme})">
            <summary>
            Quita los temas indicados de los EntitySets correspondientes
            </summary>
            <param name="driver">ISpatialDriver que contiene los EntitySet</param>
            <param name="themes">Temas que se van a quitar</param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.ThematicMapHelper.RemoveAllThemes(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            Quita todos los temas aplicados a todos los EntitySets existentes en el driver
            </summary>
            <param name="driver">ISpatialDriver que contiene los EntitySets</param>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ThematicMaps.Theme">
            <summary>
            Representa un tema/tematización de un mapa temático
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.Theme.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.Theme.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="xmlStyleDefinition">Definición de estilo de visualización en formato XML</param>
            <param name="xmlQueryDefinition">Definición de consulta en formato XML</param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.Theme.#ctor(unoGIS.Renderer.StyleComponents)">
            <summary>
            Constructor
            </summary>
            <param name="styleComponents">El styleComponents que se utiliza en la tematización.</param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.Theme.CreateXmlStyleDefinition(unoGIS.Renderer.StyleComponents,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Crea una definición de estilo en formato XML
            </summary>
            <param name="style">Estilo de visualización</param>
            <param name="useAlpha">Indica si hace uso de transparencia</param>
            <param name="useFillColor">Indica si hace uso de color de relleno</param>
            <param name="useFillStyle">Indica si hace uso de estilo de relleno</param>
            <param name="useGlowColor">Indica si hace uso de color de halo</param>
            <param name="useGlowWidth">Indica si hace uso de ancho de halo</param>
            <param name="useLineColor">Indica si hace uso de color de línea</param>
            <param name="useLineStyle">Indica si hace uso de estilo de línea</param>
            <param name="useLineWidth">Indica si hace uso de ancho de línea</param>
            <param name="usePointStyle">Indica si hace uso de estilo de puntual</param>
            <returns>Definición de estilo en XML</returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.Theme.CreateXmlQueryDefinition(System.String,System.String,System.String,System.String)">
            <summary>
            Crea una definición de consulta en formato XML
            </summary>
            <param name="entityTypeName">Nombre del tipo de la entidad origen de la consulta</param>
            <param name="fieldPath">Ruta completa al campo de la entidad origen de la consulta (p.e. P1.P11.P111)</param>
            <param name="fieldValue">Valor del campo</param>
            <param name="whereFilter">Definición de la consulta (formato XML)</param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematicMaps.Theme.XmlQueryDefinition">
            <summary>
            Definición de la consulta en formato XML
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematicMaps.Theme.XmlStyleDefinition">
            <summary>
            Definición del estilo en formato XML
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematicMaps.Theme.EntityTypeName">
            <summary>
            Obtiene el nombre del tipo de la entidad que se tematiza
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematicMaps.Theme.StyleComponents">
            <summary>
            Componentes de estilo de visualización
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.Theme.Build(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            Construye estilo de visualización (StyleComponents) y consulta/filtro (Lambda)
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.Theme.BuildStyle">
            <summary>
            Construye estilo de visualización a partir de la definición XML (StyleComponents)
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematicMaps.Theme.BuildQuery(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            Construye consulta a partir de la definición XML (Query/Lambda)
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ThematizationColorById">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorById.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorById.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorById.#ctor(System.Collections.Generic.Dictionary{System.Int32,SkiaSharp.SKColor},System.Boolean)">
            <summary>
            
            </summary>
            <param name="thematization"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorById.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorById.Thematize(unoGIS.Entities.Geometry,unoGIS.Renderer.StyleComponents)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="styleComponentes"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ThematizationColorByPercentage">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByPercentage.FieldName1">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByPercentage.FieldName2">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByPercentage.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="FieldName1"></param>
            <param name="FieldName2"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByPercentage.#ctor(unoGIS.Renderer.Painters.ThematizationColorByPercentage,System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByPercentage.Thematize(unoGIS.Entities.Geometry,unoGIS.Renderer.StyleComponents)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="styleComponentes"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByPercentage.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByPercentage.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByPercentage.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ThematizationColorByRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByRange.FieldName">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByRange.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="FieldName"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByRange.#ctor(unoGIS.Renderer.Painters.ThematizationColorByRange,System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByRange.AddThematizationColorByRange(System.Double,SkiaSharp.SKColor)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="color"></param>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByRange.ColorTable">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByRange.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByRange.Thematize(unoGIS.Entities.Geometry,unoGIS.Renderer.StyleComponents)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="styleComponentes"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByRange.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByRange.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ThematizationColorByValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByValue.FieldName">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByValue.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="FieldName"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByValue.#ctor(unoGIS.Renderer.Painters.ThematizationColorByValue,System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByValue.#ctor(System.String,System.Object,SkiaSharp.SKColor,System.Boolean)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="attribute"></param>
            <param name="color"></param>
            <param name="enabled"></param>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByValue.ColorTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByValue.ChangeColorForAttribute(System.Object,SkiaSharp.SKColor)">
            <summary>
            
            </summary>
            <param name="attribute"></param>
            <param name="color"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByValue.AddThematizationColorForAttribute(System.Object,SkiaSharp.SKColor)">
            <summary>
            
            </summary>
            <param name="attribute"></param>
            <param name="color"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationColorByValue.Thematize(unoGIS.Entities.Geometry,unoGIS.Renderer.StyleComponents)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="styleComponentes"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByValue.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationColorByValue.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationPointStyle.AddThematizationStyleForAttribute(System.Object,unoGIS.Renderer.Painters.StylePainter)">
            <summary>
            
            </summary>
            <param name="attribute"></param>
            <param name="style"></param>
        </member>
        <member name="M:unoGIS.Renderer.Painters.ThematizationPointStyle.ChangeStyleForAttribute(System.Object,unoGIS.Renderer.Painters.StylePainter)">
            <summary>
            
            </summary>
            <param name="attribute"></param>
            <param name="style"></param>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationPointStyle.FieldName">
            <summary>
            Nombre del campo por el que se realiza la tematización.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationPointStyle.Table">
            <summary>
            Tabla con las correspondencias para la tematización.
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Painters.ThematizationPrint">
            <summary>
            Temático para la herramienta de impresión.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationPrint.FieldName">
            <summary>
            Nombre del campo por el que se realiza la tematización.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationPrint.Value">
            <summary>
            Valor al que se va a sobreescribir el valor del campo.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationStyle.FieldName">
            <summary>
            Nombre del campo por el que se realiza la tematización.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Painters.ThematizationStyle.Table">
            <summary>
            Tabla con las correspondencias para la tematización.
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Pen">
            <summary>
            Pen
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Pen.Width">
            <summary>
            Ancho
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.Pen.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Pen.DashStyle">
            <summary>
            Dash style
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.Pen.#ctor(SkiaSharp.SKColor)">
            <summary>
            Pen
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:unoGIS.Renderer.Pen.#ctor(SkiaSharp.SKColor,System.Single)">
            <summary>
            Pen
            </summary>
            <param name="color"></param>
            <param name="width"></param>
        </member>
        <member name="M:unoGIS.Renderer.Pen.#ctor(unoGIS.Renderer.Brush,System.Single)">
            <summary>
            Pen
            </summary>
            <param name="brush"></param>
            <param name="width"></param>
        </member>
        <member name="M:unoGIS.Renderer.Pen.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.Pens">
            <summary>
            Pens
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Pens.Black">
            <summary>
            Black Pen
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.Pens.Blue">
            <summary>
            Blue Pen
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.RenderMap">
            <summary>
            Dibuja contenido cartográfico proveniente de diversos orígenes de datos
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.RenderMap.Render(SkiaSharp.SKCanvas,unoGIS.Renderer.Camera,System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}},System.Nullable{System.DateTime})">
            <summary>
            Renderiza las geometrías
            </summary>
            <param name="canvas">Canvas sobre el que se realizará el render</param>
            <param name="camera">Cámara utilizada en la proyección</param>
            <param name="EntitySets">Contenedores de geometrías</param>
        </member>
        <member name="M:unoGIS.Renderer.RenderMap.Render(SkiaSharp.SKCanvas,unoGIS.Renderer.Camera,System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}},System.Threading.CancellationToken,System.Nullable{System.DateTime})">
            <summary>
            Renderiza las geometrías
            </summary>
            <param name="canvas">Canvas sobre el que se realizará el render</param>
            <param name="camera">Cámara utilizada en la proyección</param>
            <param name="EntitySets">Contenedores de geometrías</param>
        </member>
        <member name="M:unoGIS.Renderer.RenderMap.Render(SkiaSharp.SKCanvas,unoGIS.Renderer.Camera,System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}},unoGIS.Renderer.OnRenderProgress,System.Action,System.Threading.CancellationToken,System.Nullable{System.DateTime})">
            <summary>
            Renderiza las geometrías
            </summary>
            <param name="canvas">Canvas sobre el que se realizará el render</param>
            <param name="camera">Cámara utilizada en la proyección</param>
            <param name="EntitySets">Contenedores de geometrías</param>
            <param name="renderProgress">Notifica Render en progreso</param>
            <param name="OnRenderFinished">Notifica Render finalizado</param>
        </member>
        <member name="M:unoGIS.Renderer.RenderMap.Render(SkiaSharp.SKCanvas,unoGIS.Renderer.Camera,System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}},unoGIS.Renderer.OnRenderProgress,System.Action,System.Boolean,System.Threading.CancellationToken,System.Nullable{System.DateTime})">
            <summary>
            Renderiza las geometrías
            </summary>
            <param name="canvas">Canvas sobre el que se realizará el render</param>
            <param name="camera">Cámara utilizada en la proyección</param>
            <param name="EntitySets">Contenedores de geometrías</param>
            <param name="renderProgress">Notifica Render en progreso</param>
            <param name="OnRenderFinished">Notifica Render finalizado</param>
            <param name="filter">True si se filtra por Fence</param>
        </member>
        <member name="M:unoGIS.Renderer.RenderMap.RenderInternal(SkiaSharp.SKCanvas,unoGIS.Renderer.Camera,System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}},unoGIS.Renderer.OnRenderProgress,System.Boolean,System.Threading.CancellationToken,System.Nullable{System.DateTime})">
            <summary>
            Renderiza las zonas especificadas.
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.RenderMap.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Permite hacer Distinct sobre campos de entidades (pero en memoria, no en base de datos)
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.Renderer.StringFormat">
            <summary>
            Encapsula información de diseño de texto (como alineación, orientación y tabulaciones) muestra manipulaciones (como inserción de puntos suspensivos y sustitución de dígitos nacionales) y características OpenType.
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.StringFormat.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.StringFormat.#ctor(unoGIS.Renderer.StringFormatFlags)">
            <summary>
            
            </summary>
            <param name="directionVertical"></param>
        </member>
        <member name="P:unoGIS.Renderer.StringFormat.GenericDefault">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.StringFormat.Alignment">
            <summary>
            Obtiene o establece la alineación horizontal de la cadena.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.StringFormat.LineAlignment">
            <summary>
            Obtiene o establece la alineación vertical de la cadena.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.StringFormat.FormatFlags">
            <summary>
            Obtiene o establece la información de visualización y diseño de la cadena
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.StringAlignment">
            <summary>
            Especifica el alineamiento del texto relativo a su rectángulo de diseño
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringAlignment.Center">
            <summary>
            Espeficica que el texto es alineado en el centro del rectángulo de diseño
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringAlignment.Far">
            <summary>
            Especifica que el texto está alineado lejos de la posición de origen del rectángulo de diseño. En un diseño de izquierda a derecha, la posición más lejana es correcta. En un diseño de derecha a izquierda, queda la posición más lejana.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringAlignment.Near">
            <summary>
            Especifica que el texto se alinee cerca del diseño. En un diseño de izquierda a derecha, queda la posición de cerca. En un diseño de derecha a izquierda, la posición más cercana es la correcta.
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.StringFormatFlags">
            <summary>
            Especifica la información de visualización y diseño para cadenas de texto.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringFormatFlags.DirectionRightToLeft">
            <summary>
            El texto se muestra de derecha a izquierda.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringFormatFlags.DirectionVertical">
            <summary>
            El texto está alineado verticalmente.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringFormatFlags.DisplayFormatControl">
            <summary>
            Los caracteres de control, como la marca de izquierda a derecha, se muestran en la salida con un glifo representativo.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringFormatFlags.FitBlackBox">
            <summary>
            Se permite que las partes de los caracteres sobresalgan en el rectángulo de diseño de la cuerda. Por defecto, los personajes están posicionados para evitar cualquier saliente.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringFormatFlags.LineLimit">
            <summary>
            Solo líneas enteras se disponen en el rectángulo de formateo. Por defecto, el diseño continúa hasta el final del texto, o hasta que no haya más líneas visibles como resultado del recorte, lo que ocurra primero. Tenga en cuenta que las configuraciones predeterminadas permiten que la última línea quede parcialmente oscurecida por un rectángulo de formato que no es un múltiplo entero de la altura de la línea. Para asegurarse de que solo se vean líneas completas, especifique este valor y tenga cuidado de proporcionar un rectángulo de formateo al menos tan alto como el alto de una línea.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringFormatFlags.MeasureTrailingSpaces">
            <summary>
            Incluye el espacio al final de cada línea. Por defecto, el rectángulo delimitado por el método MeasureString excluye el espacio al final de cada línea. Establezca esta bandera para incluir ese espacio en la medición.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringFormatFlags.NoClip">
            <summary>
            Las partes sobresalientes de los glifos y el texto no envuelto que se extiende fuera del rectángulo de formato se pueden mostrar. De forma predeterminada, todas las partes de texto y glifo que se extienden fuera del rectángulo de formateo se recortan.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringFormatFlags.NoFontFallback">
            <summary>
            Fallback para fuentes alternativas para caracteres no admitidos en la fuente solicitada está deshabilitado. Los caracteres faltantes se muestran con las fuentes que faltan glifos, generalmente un cuadrado abierto.
            </summary>
        </member>
        <member name="F:unoGIS.Renderer.StringFormatFlags.NoWrap">
            <summary>
            El ajuste de texto entre líneas al formatear dentro de un rectángulo está deshabilitado. Esta bandera está implícita cuando se pasa un punto en lugar de un rectángulo, o cuando el rectángulo especificado tiene una longitud de línea cero.
            </summary>
        </member>
        <member name="T:unoGIS.Renderer.StyleComponents">
            <summary>
            StyleComponent
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.Name">
            <summary>
            Nombre del estilo
            </summary>
            <remarks>
            El nombre del estilo por defecto es null.
            </remarks>
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.Alpha">
            <summary>
            Grado de transparencia aplicado a los raster
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.LineColor">
            <summary>
            Color de la linea.
            </summary>
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.LineWidth">
            <summary>
            Ancho de línea de la capa 
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.GlowColor">
            <summary>
            Color del halo
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.GlowWidth">
            <summary>
            Ancho del halo
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.FillColor">
            <summary>
            Color del relleno
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.PointStyle">
            <summary>
            Estilo para los puntuales.
            Si el valor es null se dubuja un circulo.
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.LineStyle">
            <summary>
            Estilo para líneas.
            Si toma el valor null el estilo es un trazo continuo.
            </summary>        
        </member>
        <member name="P:unoGIS.Renderer.StyleComponents.FillStyle">
            <summary>
            Patrón para dibujar rellenos
            </summary>    
        </member>
        <member name="M:unoGIS.Renderer.StyleComponents.#ctor">
            <summary>
            Constructor por defecto
            </summary>
        </member>
        <member name="M:unoGIS.Renderer.StyleComponents.#ctor(unoGIS.Renderer.StyleComponents)">
            <summary>
            Constructor da partir de otro StyleComponent
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:unoGIS.Renderer.StyleComponents.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.StyleComponents.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.StyleComponents.Equals(unoGIS.Renderer.StyleComponents)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.StyleComponents.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.unoBitmap.FromStream(System.IO.Stream)">
            <summary>
            Genera un bitmap a partir de un stream de datos.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Renderer.unoBitmap.CopyRect(System.Int32,System.Int32)">
            <summary>
            Cambia de tamaño del bitmap manteniendo el contenido.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:unoGIS.Renderer.unoBitmap.Save(System.IO.Stream,SkiaSharp.SKEncodedImageFormat)">
            <summary>
            Guarda un bitmap dentro de un stream dado.
            </summary>
            <param name="stream"></param>
            <param name="format"></param>
        </member>
        <member name="T:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService">
            <summary>
            Servicio API REST de ArcGIS
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.GetToken(System.String,System.String)">
            <summary>
            Obtiene el token
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.GetFeatureServices(System.String)">
            <summary>
            Obtiene los Feature Services
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.AddEntities(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{unoGIS.Entities.Geometry}})">
            <summary>
            Añade entidades
            </summary>
            <param name="operations"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.UpdateEntities(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{unoGIS.Entities.Geometry}})">
            <summary>
            Actualiza entidades
            </summary>
            <param name="operations"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.DeleteEntities(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{unoGIS.Entities.Geometry}})">
            <summary>
            Elimina un conjunto de entidades
            </summary>
            <param name="operations"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.SerializeEntity(Newtonsoft.Json.JsonWriter,unoGIS.Entities.Geometry)">
            <summary>
            Serializa una geometría
            </summary>
            <param name="writer"></param>
            <param name="geometry"></param>
            <param name="isUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.WriteAttributes(Newtonsoft.Json.JsonWriter,unoGIS.Entities.Geometry)">
            <summary>
            Escribe los atributos
            </summary>
            <param name="writer"></param>
            <param name="geometry"></param>
            <param name="isUpdate"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.FilterProperty(System.String)">
            <summary>
            Filtro de propiedades
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.WriteGeometry(Newtonsoft.Json.JsonWriter,unoGIS.Entities.Geometry)">
            <summary>
            Escribe la geometría
            </summary>
            <param name="writer"></param>
            <param name="geometry"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.WritePoint(Newtonsoft.Json.JsonWriter,unoGIS.Entities.Point)">
            <summary>
            Escribe un puntual
            </summary>
            <param name="writer"></param>
            <param name="point"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.WriteMultiPoint(Newtonsoft.Json.JsonWriter,unoGIS.Entities.MultiPoint)">
            <summary>
            Escribe un multipunto
            </summary>
            <param name="writer"></param>
            <param name="multiPoint"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.WritePolyline(Newtonsoft.Json.JsonWriter,unoGIS.Entities.Polyline)">
            <summary>
            Escribe una polilínea
            </summary>
            <param name="writer"></param>
            <param name="polyline"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.WritePolygon(Newtonsoft.Json.JsonWriter,unoGIS.Entities.Polygon)">
            <summary>
            Escribe un polígono
            </summary>
            <param name="writer"></param>
            <param name="polygon"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.WriteCoordinate(Newtonsoft.Json.JsonWriter,unoGIS.Entities.Coordinate,System.Boolean)">
            <summary>
            Escribe una coordenada
            </summary>
            <param name="writer"></param>
            <param name="coordinate"></param>
            <param name="asProperty"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.WriteCoordinateComponentsConfig(Newtonsoft.Json.JsonWriter,unoGIS.Entities.CoordinateEnumType)">
            <summary>
            Escribe la configuración de las componentes de la coordenada
            </summary>
            <param name="writer"></param>
            <param name="coordinateType"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISService.ExecuteAction(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Ejecuta una acción
            </summary>
            <param name="action"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISSpatialDriver.Service">
            <summary>
            Servicio ArcGIS
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISSpatialDriver.Connection">
            <summary>
            SpatialConnectionBuilder que identifica la ubicación del origen de datos.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISSpatialDriver.MapAttribute(System.String,System.String)">
            <summary>
            Obtiene la correspondencia entre el nombre real y el nombre final de un atributo de un tipo proveniente del origen de datos
            </summary>
            <param name="typeName"></param>
            <param name="attrbName"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISSpatialDriver.Equals(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            Comprueba si esta instancia de ArcGISSpatialDriver es igual a otra comparando sus correspondientes Connection.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ArcGISSpatialDriver.ArcGISSpatialDriver.Equals(System.Object)">
            <summary>
            Comprueba si esta instancia de ArcGISSpatialDriver es igual a otra comparando sus correspondientes Connection.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingConn">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.IsReadOnly">
            <summary>
            Indica si es de solo lectura
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.Localizable">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.Connection">
            <summary>
            Conexión
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.DataModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.EntitySets">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.Set``1">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.GetBoundingBox(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="E:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.Open">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations.GetEntitySets">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations.GetGeometries">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations.ExecuteQuery">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations.GetBoundingBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations.GetCatalog">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations.AddEntity">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations.DeleteEntity">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations.AttachEntity">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.GetOperation(unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.CloudMappingOperations)">
            <summary>
            
            </summary>
            <param name="op"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.ExistsSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.GetCatalog(unoGIS.SpatialObjects.SpatialConnectionBuilder)">
            <summary>
            
            </summary>
            <param name="scb"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.AddEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.AttachEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.DeleteEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.UpdateEntity(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="newEntity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.SaveChanges">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.SetCoordinateSystem(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry},unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            
            </summary>
            <param name="entitySet"></param>
            <param name="cs"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver.Equals(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingConnection">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingEnumerable`1">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingEnumerable`1.#ctor(unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingSpatialDriver,System.Linq.Expressions.Expression,System.String)">
            <summary>
            
            </summary>
            <param name="driver"></param>
            <param name="expression"></param>
            <param name="serializedExpression"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.CloudMappingSpatialDriver.CloudMappingEnumerable`1.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver">
            <summary>
            Clase abstracta para la creación de drivers en base de datos relacionales.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.entitySets">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.UserTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Connection">
            <summary>
            SpatialConnectionBuilder que identifica la ubicación del origen de datos.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.ConnectionString(unoGIS.SpatialObjects.SpatialConnectionBuilder)">
            <summary>
            
            </summary>
            <param name="scb"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.GetOptionsBuilder">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.ModelFromDataModel(System.Collections.Generic.List{System.Type})">
            <summary>
            
            </summary>
            <param name="dataModel"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.GetXmlDataModelFromDatabase(System.Data.Common.DbConnection)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.GetXmlDataModelFromGeometryColumns(System.Data.Common.DbConnection)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.DataModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.EntitySets">
            <summary>
            
            </summary>
        </member>
        <member name="E:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Open">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.CreateSource(System.Boolean)">
            <summary>
            
            </summary>
            <param name="overridePrevious"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.DeleteSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.ExistsSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.GetCatalog(unoGIS.SpatialObjects.SpatialConnectionBuilder)">
            <summary>
            
            </summary>
            <param name="scb"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Transaction">
            <summary>
            Obtiene transacción del contexto actual
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.BeginTransaction">
            <summary>
            Inicia transacción en el contexto actual
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.CommitTransaction">
            <summary>
            Finaliza transacción en el contexto actual
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.RollbackTransaction">
            <summary>
            Deshace cambios de la transacción en el contexto actual
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.GetBoundingBox(unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            Obtiene el BoundingBox del Mapa
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.GetBoundingBox(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            Obtiene el BoundingBox de la entitySet
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Localizable">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.GetEntityTypes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Set``1">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.AddEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.AttachEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.DeleteEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.UpdateEntity(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="newEntity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.GetHistory(unoGIS.Entities.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.getDriverContext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.SaveChanges">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.SaveChangesWithoutHistory">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Migrate(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xmlDataModel"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.SqliteDropColumOperations(Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
            Genera las operaciones necesarias para que se puedan eliminar columnas en Sqlite
            </summary>
            <param name="dropColumnOperation"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.SetCoordinateSystem(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry},unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            
            </summary>
            <param name="entitySet"></param>
            <param name="cs"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Equals(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            Comprueba si esta instancia de ArcGISSpatialDriver es igual a otra comparando sus correspondientes Connection.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.Equals(System.Object)">
            <summary>
            Comprueba si esta instancia es igual a otra comparando sus correspondientes Connection.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriver.RelationsOf(unoGIS.Entities.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.DbSpatialDrivers.DbSpatialDriverCreateEntitySet">
            <summary>
            Clase abstracta para la creación de drivers en base de datos relacionales con soporte para la creación y eliminación de EntitySets
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.EcwEntitySet`1.GetBoundingBox">
            <summary>
            Devuelve un BoundingBox con las coordenadas máximas y mínimas de la EntitySet en su sistema de coordenadas.        
            </summary>
            <returns>BoundingBox con las coordenadas máximas y mínimas de la EntitySet.
            Si la EntitySet no contiene ninguna geometría devuelve null.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DbSpatialDrivers.EcwEntitySet`1.Clone">
            <summary>
            Devuelve una copia de la EntitySet. También se crea una copia de los Painters de la EntitySet.
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.Digi3DSpatialDriver.Digi3DSpatialDriver">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.Digi3DSpatialDriver.Digi3DSpatialDriver.CanAddCustomFields">
            <summary>
            Determina si las entitySets pueden añadir campos personalizadas
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.Digi3DSpatialDriver.Digi3DSpatialDriver.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.Digi3DSpatialDriver.Digi3DSpatialDriver.Open">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIIFile.Initialize(System.IO.Stream,System.Int32)">
            <summary>
            El fichero en ASCII Esri se compone de una cabecera que contiene:
            -Número de columnas de la matriz
            -Número de filas de la matriz
            -Coordenada X de la esquina SurOeste
            -Coordenada Y de la esquina SurOeste
            -Distancia entre puntos
            -Valor que indica que no se tiene datos de ese punto
            </summary>
            <param name="stream"></param>
            <param name="cacheMaxSize"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIIFile.GetCoordinates(unoGIS.Entities.BoundingBox)">
            <summary>        
            Devuelve las coordenadas de cada punto del MDT que esten comprendidos dentro de la caja.
            </summary>
            <param name="box"></param>        
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIIFile.GetCoordinates">
            <summary>        
            Devuelve las coordenadas de cada punto del MDT.
            </summary>     
        </member>
        <member name="T:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.asciiFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="E:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.Open">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.ExistsSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.GetCatalog(unoGIS.SpatialObjects.SpatialConnectionBuilder)">
            <summary>
            
            </summary>
            <param name="scb"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.Localizable">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.DataModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.EntitySets">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.Set``1">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.GetBoundingBox(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.AddEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.AttachEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.DeleteEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.UpdateEntity(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="newEntity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.SaveChanges">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.SetCoordinateSystem(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry},unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            
            </summary>
            <param name="entitySet"></param>
            <param name="cs"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.Equals(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMASCIISpatialDriver.DTMASCIISpatialDriver.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMCoordinate">
            <summary>
            Clase que define una coordenada de un MDT.
            Las coordenadas de un MDT, a diferencia de una coordenada corriente, tienen un ID único.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMFile.Initialize(System.IO.Stream,System.Int32)">
            <summary>
            La estructura del MDT se compone de una cabecera que contiene:
            -minX, minY, minZ, maxX, maxY, maxZ del MDT
            -Cadena WKT que define el sistema de coordenadas del MDT (4096 bytes).
            -Index First Triangle (long)
            -Index First Triangle Hole (long)
            -Index First Coordinate Hole (long)
            </summary>
            <param name="stream"></param>
            <param name="cacheMaxSize"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMFile.GetTriangles(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve los triángulos que comparten la coordenada.
            Los triángulos devuelvetos están ordenados en sentido horario.
            </summary>
            <param name="coord"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMFile.Height(unoGIS.Entities.Coordinate)">
            <summary>
            Devuelve la altura del modelo digital del terreno en la coordenada indicada. 
            </summary>
            <param name="coordinate"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.dtmFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="E:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.Open">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.ExistsSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.GetCatalog(unoGIS.SpatialObjects.SpatialConnectionBuilder)">
            <summary>
            
            </summary>
            <param name="scb"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.CreateSource(System.Boolean)">
            <summary>
            
            </summary>
            <param name="overridePrevious"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.DeleteSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.Localizable">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.DataModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.EntitySets">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.Set``1">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.GetBoundingBox(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.AddEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.AttachEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.DeleteEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.UpdateEntity(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="newEntity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.SaveChanges">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.SetCoordinateSystem(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry},unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            
            </summary>
            <param name="entitySet"></param>
            <param name="cs"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.Equals(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMSpatialDriver.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.DTMSpatialDriver.Triangle">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.Triangle.V1">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.Triangle.V2">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.Triangle.V3">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.DTMSpatialDriver.Triangle.Average">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.DTMSpatialDriver.DTMTriangle">
            <summary>
            Clase que define un triangulo de un MDT
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.EcwSpatialDriver.CompressFormat.COMPRESS_NONE">
            The compressed data is unformatted 
        </member>
        <member name="F:unoGIS.SpatialDrivers.EcwSpatialDriver.CompressFormat.COMPRESS_byte">
            Greyscale format, single band 
        </member>
        <member name="F:unoGIS.SpatialDrivers.EcwSpatialDriver.CompressFormat.COMPRESS_YUV">
            JPEG standard YUV digital format, three band 
        </member>
        <member name="F:unoGIS.SpatialDrivers.EcwSpatialDriver.CompressFormat.COMPRESS_MULTI">
            Multiband format 
        </member>
        <member name="F:unoGIS.SpatialDrivers.EcwSpatialDriver.CompressFormat.COMPRESS_RGB">
            RGB images (converted to COMPRESS_YUV internally) 
        </member>
        <member name="T:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwLowLevel">
            <summary>
            Descripción breve de ECWLowLevel.
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.EcwSpatialDriver.Pack">
            <summary>
            Descripción breve de EcwPack.
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="E:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.Open">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.ExistsSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.GetCatalog(unoGIS.SpatialObjects.SpatialConnectionBuilder)">
            <summary>
            
            </summary>
            <param name="scb"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.Localizable">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.DataModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.EntitySets">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.Set``1">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.GetBoundingBox(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.AddEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.AttachEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.DeleteEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.UpdateEntity(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="newEntity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.SaveChanges">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.SetCoordinateSystem(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry},unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            
            </summary>
            <param name="entitySet"></param>
            <param name="cs"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.Equals(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.EcwSpatialDriver.EcwSpatialDriver.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.KMLSpatialDriver.KMLSpatialDriver">
            <summary>
            Implementación (en memoria) del SpatialDriver de KML/KMZ (OGC/Google)
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.KMLSpatialDriver.KMLWriter">
            <summary>
            Clase para crear un archivo XML con formato KMZ
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.KMLSpatialDriver.KMZReader">
            <summary>
            Lector de KMZ
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARFile">
            <summary>
            Lector de ficheros LIDAR
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARFile.Box">
            <summary>
            Caja del LIDAR
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARFile.#ctor(System.String)">
            <summary>
            Constructor pasando el nombre del fichero LIDAR a cargar
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARFile.GetCoordinates">
            <summary>        
            Devuelve las coordenadas de cada punto del LIDAR.
            </summary>     
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARFile.GetCoordinates(unoGIS.Entities.BoundingBox)">
            <summary>        
            Devuelve las coordenadas de cada punto del LIDAR que esten comprendidos dentro de la caja.
            </summary>
            <param name="box"></param>        
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARFile.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARFile.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver">
            <summary>
            Implementación (en memoria) del SpatialDriver de ficheros LIDAR en LAS/LAZ
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.LidarFile">
            <summary>
            Lector de ficheros LIDAR
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.Open">
            <summary>
            Apertura del Driver
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.ExistsSource">
            <summary>
            Comprueba que existe el origen de datos
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.GetCatalog(unoGIS.SpatialObjects.SpatialConnectionBuilder)">
            <summary>
            
            </summary>
            <param name="scb"></param>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.Name">
            <summary>
            Nombre del fichero
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.Connection">
            <summary>
            Cadena de conexion
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.IsReadOnly">
            <summary>
            Driver de solo lectura
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.Localizable">
            <summary>
            Si permite traducciones
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.DataModel">
            <summary>
            Modelo de datos
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.EntitySets">
            <summary>
            Entidades del driver
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.SetCoordinateSystem(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry},unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            Cambia el sistema de coordenadas
            </summary>
            <param name="entitySet"></param>
            <param name="cs"></param>
        </member>
        <member name="E:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.GetBoundingBox(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            Caja total de las entidades
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.Set``1">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.AddEntity(System.Object)">
            <summary>
            No implementado
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.AttachEntity(System.Object)">
            <summary>
            No implementado
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.UpdateEntity(System.Object,System.Object)">
            <summary>
            No implementado
            </summary>
            <param name="entity"></param>
            <param name="newEntity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.DeleteEntity(System.Object)">
            <summary>
            No implementado
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.SaveChanges">
            <summary>
            No implementado
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.Equals(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.LIDARSpatialDriver.LIDARSpatialDriver.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.MemorySpatialDriver.MemorySpatialDriver">
            <summary>
            
            </summary>
            <remarks>
            Aunque se implementan las interfacez IDataSourceSpatialDriver y ICreateEntitySet, no se añaden a la definición de la clase
            para que los SpatialDriver que hereden de este puedan optar a añadir las interfaces IDataSourceSpatialDriver e
            ICreateEntitySet, o no.
            </remarks>
        </member>
        <member name="E:unoGIS.SpatialDrivers.MemorySpatialDriver.MemorySpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.MemorySpatialDriver.MemorySpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFHeader">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFHeader.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFHeader.RecordCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFHeader.HeaderLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFHeader.RecordLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFHeader.Encoding">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFHeader.CodePage">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFHeader.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFHeader.From(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFReader">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFReader.Header">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFReader.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFReader.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="codePage"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFReader.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFReader.GetPrimitiveString(System.IO.BinaryReader,System.Int32)">
            <summary>
            
            </summary>
            <param name="br"></param>
            <param name="fSize"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFReader.IsAsterField(System.String)">
            <summary>
            
            </summary>
            <param name="fvalue"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFReader.GetNextRecordValues">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.DBFWriter.Finalize">
            <summary>
            Actualiza la cabecera y escribe la marca de final de fichero.
            </summary>
            <remarks>
            Una vez se invoca este método no se puede
            </remarks>
        </member>
        <member name="E:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileFolderSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileFolderSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileFolderSpatialDriver.Connection">
            <summary>
            Ruta absoluta a una carpeta con archivos Shape
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.EntityType">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.CoordinateSystem">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="FileName"></param>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.Current">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.MoveNext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadPolygon(System.Int32@)">
            <summary>
            Bien
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadPolygonM(System.Int32@)">
            <summary>
            Bien
            </summary>
            <param name="recordLength"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadPolygonZ(System.Int32@)">
            <summary>
            Bien ( Falta testear con poligonos internos )
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadPolilyne(System.Int32@)">
            <summary>
            Bien
            </summary>
            <param name="recordLength"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadPolilyneM(System.Int32@)">
            <summary>
            Bien
            </summary>
            <param name="recordLength"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadPolylineZ(System.Int32@)">
            <summary>
            Bien
            </summary>
            <param name="recordLength"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadPointZ(System.Int32@)">
            <summary>
            Bien
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadPoint(System.Int32@)">
            <summary>
            Bien
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadPointM(System.Int32@)">
            <summary>
            Bien
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadMultiPoint(System.Int32@)">
            <summary>
            Bien
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadMultiPointM(System.Int32@)">
            <summary>
            Bien
            </summary>
            <param name="recordLength"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapefileReader.ReadMultiPointZ(System.Int32@)">
            <summary>
            Bien
            </summary>
            <param name="recordLength"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileSpatialDriver.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="E:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileSpatialDriver.Connection">
            <summary>
            Ruta absoluta a una carpeta con archivos Shape
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeType">
            <summary>
            Enumeration defining the various shape types. Each shapefile
            contains only one type of shape (e.g., all polygons or all
            polylines).
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeType.NullShape">
            <summary>
            Nullshape / placeholder record.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeType.Point">
            <summary>
            Point record, for defining point locations such as a city.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeType.PolyLine">
            <summary>
            One or more sets of connected points. Used to represent roads,
            hydrography, etc.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeType.Polygon">
            <summary>
            One or more sets of closed figures. Used to represent political
            boundaries for countries, lakes, etc.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeType.Multipoint">
            <summary>
            A cluster of points represented by a single shape record.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeType.MultiPatch">
            <summary>
            No se soporta el tipo MultiPath pero en su lugar lo usamos para dar soporte a MultiGeometry.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.BigEndiandOrderReader.ReadInt32_BE(System.IO.Stream)">
            <summary>
            Read a 4-byte integer using big endian
            byte ordering.
            </summary>
            <param name="stream">Input stream to read.</param>
            <returns>The integer value.</returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader">
            <summary>
            The ShapeFileHeader class represents the contents
            of the fixed length, 100-byte file header at the
            beginning of every shapefile.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.#ctor">
            <summary>
            Constructor for the ShapeFileHeader class.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.Length">
            <summary>
            Indicate the fixed-length of this header in bytes.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.FileCode">
            <summary>
            Specifies the file code for an ESRI shapefile, which
            should be the value, 9994.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.FileLength">
            <summary>
            Specifies the length of the shapefile, expressed
            as the number of 16-bit words in the file.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.Version">
            <summary>
            Specifies the shapefile version number.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.ShapeType">
            <summary>
            Specifies the shape type for the file. A shapefile
            contains only one type of shape.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.XMin">
            <summary>
            Indicates the minimum x-position of the bounding
            box for the shapefile (expressed in degrees longitude).
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.ZMin">
            <summary>
            Indicates the minimum x-position of the bounding
            box for the shapefile (expressed in degrees longitude).
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.YMin">
            <summary>
            Indicates the minimum y-position of the bounding
            box for the shapefile (expressed in degrees latitude).
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.XMax">
            <summary>
            Indicates the maximum x-position of the bounding
            box for the shapefile (expressed in degrees longitude).
            </summary>       
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.ZMax">
            <summary>
            Indicates the maximum x-position of the bounding
            box for the shapefile (expressed in degrees longitude).
            </summary>       
        </member>
        <member name="P:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.YMax">
            <summary>
            Indicates the maximum y-position of the bounding
            box for the shapefile (expressed in degrees latitude).
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.ToStream(System.IO.BinaryWriter)">
            <summary>
            Salva el actual fileHeader a disco.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.ShapeFileSpatialDriver.ShapeFileHeader.FromStream(System.IO.BinaryReader)">
            <summary>
            Read the file header of the shapefile.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.Texts.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.Cells.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.Icons.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.Points.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader">
            <summary>
            Lector de VEC
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.Version">
            <summary>
            Versión del fichero VEC
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.#ctor">
            <summary>
            Constructor sin argumentos
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.BuildDataModel(System.Collections.Generic.Dictionary{System.UInt16,System.String})">
            <summary>
            Construye el modelo de datos a partir de las capas
            </summary>
            <param name="layers"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.GetElement(System.IO.BinaryReader)">
            <summary>
            Metodo para obtener un elemento a partir de un BinaryReader.
            </summary>
            <param name="reader">BinaryReader</param>
            <returns>Elemento leido</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.ReadElement(System.Byte,System.UInt16,System.IO.BinaryReader)">
            <summary>
            Metodo para leer un elemento a partir de un BinaryReader.
            </summary>
            <param name="NType">El tipo del elemento</param>
            <param name="layer">Número de capa</param>
            <param name="reader">BinaryReader</param>
            <returns>Elemento leido</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.ReadVectorArray(System.UInt32,System.IO.BinaryReader)">
            <summary>
            Lee una cantidad de vectores a partir de un BinaryReader.
            </summary>
            <param name="NVertex">Cantidad de vectores.</param>
            <param name="reader">BinaryReader</param>
            <returns>Arreglo de vectores.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.ReadVectorArray(System.IO.BinaryReader)">
            <summary>
            Lee un arreglo de vectores.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Arreglo de puntos.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.ReadVector(System.IO.BinaryReader)">
            <summary>
            Lee un vector (Coordinate3D) a partir de un BinaryReader.
            </summary>
            <param name="reader">BinaryReader</param>
            <returns>Vector con las coordenadas leidas.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.DecodeBytes(System.Byte[])">
            <summary>
            Codifica una cadena a una representación en bytes</summary>
            <param name="bytes">Cadena de texto a codificar</param>
            <returns>Arreglo de bytes codificado.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECReader.Dispose">
            <summary>
            Metodo que se llama al destruir la clase
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver">
            <summary>
            Implementación (en memoria) del SpatialDriver del formato VEC
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.IsReadOnly">
            <summary>
            Driver de solo lectura
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Localizable">
            <summary>
            Permitie traducciones
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Version">
            <summary>
            Versión del fichero VEC
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Name">
            <summary>
            Nombre del Driver
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Connection">
            <summary>
            Gestor de la cadena de conexión
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.DataModel">
            <summary>
            Modelo de datos
            </summary>
        </member>
        <member name="P:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.EntitySets">
            <summary>
            Listado de capas
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Set``1">
            <summary>
            Colección de entidades
            </summary>
            <typeparam name="TEntity">Tipo de las entidades a recuperar</typeparam>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.GetBoundingBox(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            Caja total de la capa
            </summary>
            <param name="entitySet">Capa</param>
            <returns></returns>
        </member>
        <member name="E:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Open">
            <summary>
            Apertura del Driver
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Close">
            <summary>
            Cerrar Driver
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Dispose">
            <summary>
            Destruir Driver
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.CreateSource(System.Boolean)">
            <summary>
            Crea todo el soporte que precisa el driver para poder gestionar datos gráficos y alfanuméricos
            <param name="overridePrevious">Indica si se sobreescribe el origen existente</param>
            <returns>true si la operación se realizó con éxito</returns>
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.DeleteSource">
            <summary>
            Insta al Driver para que elimine el origen de datos
            <returns>true si la operación se realizó con éxito</returns>
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.ExistsSource">
            <summary>
            Comprueba si existe el fichero de origen
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.GetCatalog(unoGIS.SpatialObjects.SpatialConnectionBuilder)">
            <summary>
            
            </summary>
            <param name="scb"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.AddEntity(System.Object)">
            <summary>
            Añade una nueva entidad
            </summary>
            <param name="entity">Entidad a añadir</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.AttachEntity(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.DeleteEntity(System.Object)">
            <summary>
            Elimina una entidad
            </summary>
            <param name="entity">Entidad a eliminar</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.UpdateEntity(System.Object,System.Object)">
            <summary>
            Actualiza una entidad
            </summary>
            <param name="entity">Entidad original</param>
            <param name="newEntity">Entidad con los nuevos valores</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.SaveChanges">
            <summary>
            Guardar cambios (Sin efecto en este Driver)
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Backup">
            <summary>
            Realiza una copia de seguridad
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.SetCoordinateSystem(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry},unoGIS.CoordinateSystems.CoordinateSystem)">
            <summary>
            Asigna un nuevo sistema de coordenadas a la capa
            </summary>
            <param name="entitySet">Capa</param>
            <param name="cs">Sistema de coordenadas</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECSpatialDriver.Equals(unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            Compara dos drivers
            </summary>
            <param name="other">Driver a comparar</param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.VECWriter">
            <summary>
            Guarda un archivo en formato VEC
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECWriter.#ctor(System.String,System.Byte,System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="connectionString"></param>
            <param name="version"></param>
            <param name="subversion"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECWriter.SaveElement(unoGIS.Entities.Geometry)">
            <summary>
            Escribe un elemento en el fichero VEC
            </summary>
            <param name="element">Geometría a guardar</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECWriter.Close">
            <summary>
            Metodo para cerrar el archivo.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECWriter.Dispose">
            <summary>
            Destrucción de la clase
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2">
            <summary>
            Clase para manejar un archivo VEC de version 2.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.ReadVector(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un vector (Coordinate3D) a partir de un BinaryReader.
            </summary>
            <param name="reader">BinaryReader</param>
            <returns>Vector con las coordenadas leidas.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.WriteVector(unoGIS.Entities.Coordinate,System.IO.BinaryWriter)">
            <summary>
            Metodo para escrivir un vector (Coordinate3D) en un BinaryWriter.
            </summary>
            <param name="vector">Vector</param>
            <param name="writer">BinaryWriter</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.ReadVectorArray(System.UInt32,System.IO.BinaryReader)">
            <summary>
            Metodo para leer una cantidad de vectores a partir de un BinaryReader.
            </summary>
            <param name="NVertex">Cantidad de vectores.</param>
            <param name="reader">BinaryReader</param>
            <returns>Arreglo de vectores.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.WriteVectorArray(System.Collections.Generic.IEnumerable{unoGIS.Entities.Coordinate},System.IO.BinaryWriter)">
            <summary>
            Metodo para escribir en un BinaryReader un arreglo de vectores.
            </summary>
            <param name="vertex">Arreglo de puntos.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.EncodeBytes(System.String)">
            <summary>
            Codifica una cadena a una representación en bytes</summary>
            <param name="text">Cadena de texto a codificar</param>
            <returns>Arreglo de bytes codificado.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.DecodeBytes(System.Byte[])">
            <summary>
            Codifica una cadena a una representación en bytes</summary>
            <param name="text">Cadena de texto a codificar</param>
            <returns>Arreglo de bytes codificado.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.ReadOneElement(System.Byte,System.IO.BinaryReader)">
            <summary>
            Metodo para leer un elemento a partir de un BinaryReader.
            </summary>
            <param name="NType">El tipo del elemento.</param>
            <param name="reader">BinaryReader.</param>
            <returns>Elemento leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.SaveOneElement(unoGIS.Entities.Geometry,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un elemento.
            </summary>
            <param name="element">Elemento.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.IsValidInVersion(unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType)">
            <summary>
            Metodo para validar si un elemento es valido en esta version de VEC.
            </summary>
            <param name="element">Elemento.</param>
            <returns>Verdadero si es valido y falso si no lo es.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.GetElement(System.IO.BinaryReader)">
            <summary>
            Metodo para obtener un elemento a partir de un BinaryReader.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Elemento leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.ReadPolyLine(System.IO.BinaryReader)">
            <summary>
            Metodo para leer una Polilinea.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Polilinea leida</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.ReadShape(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un Shape.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Shape leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.ReadText(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un Texto
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Texto leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.ReadCell(System.IO.BinaryReader)">
            <summary>
            Metodo para leer una celula.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Celula leida.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.SavePolyLine(unoGIS.Entities.Polyline,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar una polilinea.
            </summary>
            <param name="e">Polilinea.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.SaveShape(unoGIS.Entities.Polygon,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un shape.
            </summary>
            <param name="e">Shape.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.SaveText(unoGIS.Entities.Point,System.IO.BinaryWriter)">
            <summary>
            Metodo para salver un Texto
            </summary>
            <param name="reader">BinaryWriter al que se escribirá.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.SaveCell(unoGIS.Entities.Point,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar una celula.
            </summary>
            <param name="reader">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager2.Save(unoGIS.Entities.Geometry,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un elemento.
            </summary>
            <param name="element">Elemento.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager3">
            <summary>
            Clase para manejar un archivo VEC de version 3.
            </summary>
            <remarks>Añade ancho en los textos y cambia la escala en las células por una ancho y alto.</remarks>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager3.ReadText(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un texto.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Texto leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager3.ReadCell(System.IO.BinaryReader)">
            <summary>
            Metodo para leer una celula.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager3.Save(unoGIS.Entities.Geometry,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un elemento.
            </summary>
            <param name="element">Elemento.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager3.IsValidInVersion(unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType)">
            <summary>
            Metodo para validar si un elemento es valido en esta version de VEC.
            </summary>
            <param name="element">Elemento.</param>
            <returns>Verdadero si es valido y falso si no lo es.</returns>
        </member>
        <!-- El comentario XML con formato incorrecto se ha omitido para el miembro "M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager3.SaveText(unoGIS.Entities.Point,System.IO.BinaryWriter)" -->
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager3.SaveCell(unoGIS.Entities.Point,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar una celula.
            </summary>
            <param name="e">Celula.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager4">
            <summary>
            Clase para manejar un archivo VEC de version 4.
            </summary>
            <remarks>Añade huecos a los shapes y soporte para los elementos Iconos</remarks>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager4.ReadShape(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un shape.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Shape leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager4.ReadIcon(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un Icon.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Icon leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager4.SaveShape(unoGIS.Entities.Polygon,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un shape.
            </summary>
            <param name="e">Shape.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager4.SaveIcon(unoGIS.Entities.Point,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un Icon.
            </summary>
            <param name="e">Icon.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager4.ReadOneElement(System.Byte,System.IO.BinaryReader)">
            <summary>
            Metodo para leer un elemento.
            </summary>
            <param name="NType">Tipo del elemento.</param>
            <param name="reader">BinariReader.</param>
            <returns>Elemento leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager4.SaveOneElement(unoGIS.Entities.Geometry,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un elemento.
            </summary>
            <param name="element">Elemento.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager4.IsValidInVersion(unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType)">
            <summary>
            Metodo para validar si un elemento es valido en esta version de VEC.
            </summary>
            <param name="element">Elemento.</param>
            <returns>Verdadero si es valido y falso si no lo es.</returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager5">
            <summary>
            Clase para manejar un archivo VEC de version 5.
            </summary>
            <remarks> Añade los atributos.
            </remarks>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager5.GetElement(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un elemento.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Elemento leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager5.Save(unoGIS.Entities.Geometry,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un elemento.
            </summary>
            <param name="element">Elemento.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10">
            <summary>
            Clase para manejar un archivo VEC de version 10.
            </summary>
            <remarks>
            Añade Textos Flotantes y dinamicos, y Textos Flotantes.
            Cambia las unidades a milimetros.
            Implementa compresión de campos.
            Elimina el campo selección de los elementos.
            Cambia la forma en que se salvan los atributos (2 uint por atributo).
            Cambia la forma en que se salvan los shapes. (NRings incluye al anillo exterior).
            Cambia la codificación de los textos a UTF8
            </remarks>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.IsValidInVersion(unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType)">
            <summary>
            Indica si un tipo de elemento es valido en esta versión de VEC.
            </summary>
            <param name="NType">Tipo del elemento.</param>
            <returns>true si elemento está soportado en esta versión.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.GetElement(System.IO.BinaryReader)">
            <summary>
            Metodo para obtener un elemento.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Elemento.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.Save(unoGIS.Entities.Geometry,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un elemento.
            </summary>
            <param name="element">elemento.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.ReadOneElement(System.Byte,System.IO.BinaryReader)">
            <summary>
            Metood para leer un elemento.
            </summary>
            <param name="NType">Tipo del elemento.</param>
            <param name="reader">BinaryReader.</param>
            <returns>Elemento leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.ReadShape(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un shape.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Shape leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.SaveShape(unoGIS.Entities.Polygon,System.IO.BinaryWriter)">
            <summary>
            Metodo para salver un shape.
            </summary>
            <param name="e">Shape.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.ReadPolyLine(System.IO.BinaryReader)">
            <summary>
            Metodo para leer una polilinea.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Polilinea leida.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.SavePolyLine(unoGIS.Entities.Polyline,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar una polilinea.
            </summary>
            <param name="e">Polilinea.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.ReadIcon(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un Icon.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Icon leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.SaveIcon(unoGIS.Entities.Point,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un Icon.
            </summary>
            <param name="e">Icon.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.ReadVector(System.IO.BinaryReader)">
            <summary>
            Metodo para leer un vector.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Punto leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.WriteVector(unoGIS.Entities.Coordinate,System.IO.BinaryWriter)">
            <summary>
            Metodo para escribir un vector.
            </summary>
            <param name="v">Punto.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.ReadVectorArray(System.IO.BinaryReader)">
            <summary>
            Metodo para leer una arreglo de vectores.
            </summary>
            <param name="reader">BinaryReader.</param>
            <returns>Arreglo de puntos.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.WriteVectorArray(System.Collections.Generic.IEnumerable{unoGIS.Entities.Coordinate},System.IO.BinaryWriter)">
            <summary>
            Metodo para escribir un arreglo de vectores.
            </summary>
            <param name="vertex">Arreglo de puntos.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.EncodeBytes(System.String)">
            <summary>
            Codifica una cadena a una representación en bytes</summary>
            <param name="text">Cadena de texto a codificar</param>
            <returns>Arreglo de bytes codificado.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager10.DecodeBytes(System.Byte[])">
            <summary>
            Codifica una cadena a una representación en bytes</summary>
            <param name="text">Cadena de texto a codificar</param>
            <returns>Arreglo de bytes codificado.</returns>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager11">
            <summary>
            Clase para manejar un archivo VEC de version 11.
            </summary>
            <remarks>
            Annade el soporte para puntos (LtnPoint)
            </remarks>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager11.IsValidInVersion(unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType)">
            <summary>
            Indica si un tipo de elemento es valido en esta versión de VEC.
            </summary>
            <param name="NType">Tipo del elemento.</param>
            <returns>true si elemento está soportado en esta versión.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager11.ReadOneElement(System.Byte,System.IO.BinaryReader)">
            <summary>
            Metood para leer un elemento.
            </summary>
            <param name="NType">Tipo del elemento.</param>
            <param name="reader">BinaryReader.</param>
            <returns>Elemento leido.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.VECManager11.SaveOneElement(unoGIS.Entities.Geometry,System.IO.BinaryWriter)">
            <summary>
            Metodo para salvar un elemento.
            </summary>
            <param name="element">Elemento.</param>
            <param name="writer">BinaryWriter.</param>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.WorkVEC">
            <summary>
            Descripción breve de WorkVECReader.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.WorkVEC.createVECManager">
            <summary>
            Metododo para crear el VECManager correspondiente a la version del archivo.
            </summary>
        </member>
        <member name="T:unoGIS.SpatialDrivers.VECSpatialDriver.WorkVECWriter">
            <summary>
            Descripción breve de WorkVECWriter.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.WorkVECWriter.createVECManager">
            <summary>
            Metodo para crear el VECManager correspondiente a la version del VEC.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.WorkVECWriter.#ctor(System.String,System.Byte,System.Byte)">
            <summary>
            Constructor de WorkVECWriter
            </summary>
            <param name="FileName">Nombre del fichero, con el path completo</param>
            <param name="Version">Numero de versión con la que se crea el archivo VEC, 0 es la ultima versión.</param>
            <param name="Subversion">Subversion que se le asigna al archivo.</param>
            <param name="Owner">Cadena de texto identificativa que se le pone en la cabecera al archivo VEC</param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.WorkVECWriter.Close">
            <summary>
            Metodo para cerrar el archivo.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.VECSpatialDriver.WorkVECWriter.AppendElement(unoGIS.Entities.Geometry)">
            <summary>
            Metodo para adicionar un elemento al archivo.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.ENull">
            <summary>
            Elemento nulo, usado para marcador de último elemento.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.ELine">
            <summary>
            Elemento polilínea.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.EShape">
            <summary>
            Elemento área, con o sin huecos.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.EText">
            <summary>
            Elemento texto rectilineo.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.ECell">
            <summary>
            Elemento célula.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.EIcon">
            <summary>
            Elemento ícono.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.EFText">
            <summary>
            Elemento texto flotante, se ajusta a una polilínea.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.EDText">
            <summary>
            Elemento texto dinámico, puede variar su tamaño convenientemente.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.EFDText">
            <summary>
            Elemento texto dinámico y flotante, es la combinación del texto dinámico y el texto flotante.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.ERaster">
            <summary>
            Elemento raster.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.EPoint">
            <summary>
            Elemto Punto
            </summary>
        </member>
        <member name="F:unoGIS.SpatialDrivers.VECSpatialDriver.LtnNType.EGrid">
            <summary>
            Elemento Grid
            </summary>
        </member>
        <member name="E:unoGIS.SpatialDrivers.WEBSpatialDriver.WEBSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.WEBSpatialDriver.WEBSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.WMSSpatialDriver.WMSEntitySet`1.GetBoundingBox">
            <summary>
            Devuelve un BoundingBox con las coordenadas máximas y mínimas de la EntitySet en su sistema de coordenadas.        
            </summary>
            <returns>BoundingBox con las coordenadas máximas y mínimas de la EntitySet.
            Si la EntitySet no contiene ninguna geometría devuelve null.</returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.WMSSpatialDriver.WMSEntitySet`1.Clone">
            <summary>
            Devuelve una copia de la EntitySet. También se crea una copia de los Painters de la EntitySet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialDrivers.WMSSpatialDriver.WMSQueryable`1.GetResponseStream(System.String)">
            <summary>
            Realiza el pedido GET dado por la Url pasada como argumento
            </summary>
            <param name="reqString">Url del pedido</param>
            <returns>Flujo resultado del pedido</returns>
        </member>
        <member name="E:unoGIS.SpatialDrivers.WMSSpatialDriver.WMSSpatialDriver.PropertyChanged">
            <summary>
            Evento PropertyChanged. Se produce cuando alguna propiedad cambia.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialDrivers.WMSSpatialDriver.WMSSpatialDriver.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialDrivers.WMSSpatialDriver.WMSSpatialDriver.GetUrlGetCapabilities(System.String)">
            <summary>
            A partir de la Url del servidor WMS crea la Url del servicio GetCapabilities.
            </summary>
            <param name="aUrl">Url del servidor WMS</param>
            <returns>Url del servicio GetCapabilities</returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.BusinessRules">
            <summary>
            Listado de reglas de negocio de un tipo
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.BusinessRules.AddRule(System.Type,unoGIS.SpatialObjects.BusinessRule)">
            <summary>
            Añade reglas de negocio
            </summary>
            <param name="type"></param>
            <param name="rule"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.BusinessRules.ValidateRules(System.Object,System.String)">
            <summary>
            Valida las reglas de negocio
            </summary>
            <param name="obj"></param>
            <param name="check"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.BusinessRule">
            <summary>
            Regla de negocio
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.BusinessRule.Name">
            <summary>
            Nombre de la regla
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.BusinessRule.TypeException">
            <summary>
            Tipo de excepción: aviso o error
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.BusinessRule.MessageException">
            <summary>
            Mensaje de error
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.BusinessRule.Check">
            <summary>
            Cuando se deben comprobar las reglas de negocio
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.BusinessRule.Delegate">
            <summary>
            Delegado que contiene la logica de la regla de negocio
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.BusinessRule.#ctor(System.String,unoGIS.WorkSpace.TypeException,System.String,System.String)">
            <summary>
            Crea una nueva regla de negocio
            </summary>
            <param name="name"></param>
            <param name="typeException"></param>
            <param name="messageException"></param>
            <param name="check"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.BusinessRule.ValidateRule(System.Object)">
            <summary>
            Invoca al delegado
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.BusinessRuleCheck">
            <summary>
            Opciones de Cuando se deben comprobar las reglas de negocio
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.BusinessRuleCheck.None">
            <summary>
            Ninguna comprobación
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.BusinessRuleCheck.Tool">
            <summary>
            Herramienta de reglas de negocio
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.BusinessRuleCheck.Edition">
            <summary>
            Herramientas de edición
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.BusinessRuleCheck.Sync">
            <summary>
            Sincronización
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.CreateType(System.Reflection.Emit.TypeBuilder)">
            <summary>
            Crea un tipo definido con un TypeBuilder asegurandose que su BaseType ya ha sido creado
            </summary>
            <param name="typeBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.SetLazyLoading(System.Object,System.Boolean)">
            <summary>
            Activa o desactiva la carga perezosa en una entidad
            </summary>
            <param name="entity">Entidad</param>
            <param name="driver">Spatial Driver</param>
            <param name="enable">Indica si se activa o desactiva la carga perezosa</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.AddDelegatedAccessors(System.Reflection.Emit.TypeBuilder,System.String,System.Type,System.Collections.Generic.List{System.Reflection.Emit.CustomAttributeBuilder},System.String,System.String,System.String,System.String)">
            <summary>
            Crea Get/Set con delegados
            </summary>
            <param name="typeBuilder"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="attrs"></param>
            <param name="delegateGetName"></param>
            <param name="get"></param>
            <param name="delegateSetName"></param>
            <param name="set"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.AddLazyCollectionAccessors(System.Reflection.Emit.TypeBuilder,System.String,System.Type,System.Collections.Generic.List{System.Reflection.Emit.CustomAttributeBuilder},System.Reflection.Emit.MethodBuilder)">
            <summary>
            Crea Get/Set de las colecciones
            </summary>
            <param name="typeBuilder"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="attrs"></param>
            <param name="propertyDriverGetMethodBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.AddProperty(System.Reflection.Emit.TypeBuilder,System.String,System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Boolean,System.Reflection.Emit.MethodBuilder)">
            <summary>
            Añade una propiedad
            </summary>
            <param name="typeBuilder"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="attrs"></param>
            <param name="isLazy"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.GenerateGetIL(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código del método Get por defecto
            </summary>
            <param name="getILGenerator"></param>
            <param name="fieldBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.GenerateSetIL(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código IL del método Set por defecto.
            </summary>
            <param name="setILGenerator"></param>
            <param name="fieldBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.GenerateLazySetIL(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.FieldBuilder,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código IL para el GET con carga perezosa
            </summary>
            <param name="setILGenerator"></param>
            <param name="fieldBuilder"></param>
            <param name="fieldIdBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.GenerateLazyDelegatedGetIL(System.Reflection.Emit.ILGenerator,System.String,System.Type,System.Reflection.Emit.FieldBuilder,System.Reflection.Emit.MethodBuilder,System.Boolean)">
            <summary>
            Genera el código IL para el GET con carga perezosa de las colecciones
            </summary>
            <param name="iLGenerator"></param>
            <param name="propertyType"></param>
            <param name="fieldBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.BuildAndAssignDelegate(unoGIS.SpatialObjects.InfoDelegate,System.Boolean)">
            <summary>
            Construye un delegado a partir de un string y lo asocia al delegado del tipo
            </summary>
            <param name="infoDelegate"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.GenerateDelegatedMethodIL(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.FieldBuilder,System.Type)">
            <summary>
            General el código IL del método de un campo Delegado
            </summary>
            <param name="ilGenerator"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.GenerateDelegatedGetIL(System.Reflection.Emit.ILGenerator,System.Type,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código IL del Get de un campo Delegado
            </summary>
            <param name="getILGenerator"></param>
            <param name="propertyType"></param>
            <param name="fieldBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.GenerateDelegatedSetIL(System.Reflection.Emit.ILGenerator,System.Type,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código IL del Set de un campo Delegado
            </summary>
            <param name="setILGenerator"></param>
            <param name="propertyType"></param>
            <param name="fieldBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.LoadRelation(unoGIS.SpatialObjects.ISpatialDriver,unoGIS.Entities.IEntity,System.String)">
            <summary>
            Método estático que se utilizar para la carga perezosa de las relaciones
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="driver"></param>
            <param name="collection"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModel.LoadCollection(unoGIS.SpatialObjects.ISpatialDriver,unoGIS.Entities.IEntity,System.String)">
            <summary>
            Método estático que se utiliza para obtener las colecciones y aplicar la carga perezosa
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="driver"></param>
            <param name="collection"></param>
        </member>
        <member name="T:unoGIS.SpatialObjects.DataModelTools">
            <summary>
            Utilidades relacionadas con Modelos de Datos
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.DataModelTools.dynamicNamespace">
            <summary>
            Namespace dinámico
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.DataModelTools.DefaultFeatureSetName">
            <summary>
            Nombre por defecto de la FeatureSet
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.BuildXmlDataModelFromTypes(System.Type[])">
            <summary>
            
            </summary>
            <param name="dataModel"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.BuildXmlDataModelFromTypes(System.Xml.Linq.XElement,System.Type[])">
            <summary>
            
            </summary>
            <param name="xmlDataModel"></param>
            <param name="dataModel"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.IsModelValid(System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            Valida un modelo de datos realizando una compilación
            </summary>
            <param name="xmlDataModel">Modelo de datos en formato XML</param>
            <param name="throwExceptions"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.BuildXMLClassType(System.String,System.String,unoGIS.Entities.GeometryEnumType,unoGIS.Entities.CoordinateEnumType,System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySetAttribute})">
            <summary>
            Crea el XML de una clase
            </summary>
            <param name="typeName"></param>
            <param name="featureDataSet"></param>
            <param name="geomEnumType"></param>
            <param name="coordinateType"></param>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.BuildXMLEnumType(System.Type)">
            <summary>
            Crea el XML de un enumerado
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.BuildType(System.String,System.Type,unoGIS.Entities.CoordinateEnumType)">
            <summary>
            Crea un ClrType (compilado en tiempo de ejecución) compatible con modelo de datos dinámico de unoGIS a partir de un Type existente.
            El nuevo Type solo contendrá los atributos primitivos del tipo base.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.BuildType(System.String,System.String,unoGIS.Entities.GeometryEnumType,unoGIS.Entities.CoordinateEnumType,System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySetAttribute})">
            <summary>
            OPTIMIZAR PARA NO PASAR POR EL XML. Crea un ClrType (compilado en tiempo de ejecución) compatible con modelo de datos dinámico de unoGIS
            </summary>
            <param name="typeName"></param>
            <param name="featureDataSet"></param>
            <param name="geomEnumType"></param>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.Compile(System.Xml.Linq.XElement)">
            <summary>
            Compila un modelo de datos a partir de un XML y devuelve los ClrTypes correspondientes.      
            </summary>
            <param name="xmlDataModel">Modelo de datos en formato XML</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.FormatClassName(System.String)">
            <summary>
            Formatea el nombre de un tipo dinámico de acuerdo con las reglas sintácticas del compilador
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.CompileModel(System.Xml.Linq.XElement,System.Boolean,System.Boolean)">
            <summary>
            Compila un modelo de datos a partir de un XML y devuelve los ClrTypes correspondientes.     
            </summary>
            <param name="xmlDataModel">Modelo de datos en formato XML</param>
            <param name="useCache">flag de uso de cache</param>
            <param name="throwExceptions">Eleva excepciones</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.CreateType(System.Reflection.Emit.TypeBuilder)">
            <summary>
            Crea un tipo definido con un TypeBuilder asegurandose que su BaseType ya ha sido creado
            </summary>
            <param name="typeBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.ClearCache">
            <summary>
            Elimina la caché de tipos de modelos de datos
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.IsPrimitive(System.Type)">
            <summary>
            Identifica si un tipo es primitivo o no.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.IsPrimitive(System.String)">
            <summary>
            Identifica si un tipo es primitivo o no.
            Los enumerados, solo se identifica como primitivos si están definidos en mscordlib
            </summary>
            <param name="strType">FullName del tipo por el que se está preguntando.</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.IsNumeric(System.Type)">
            <summary>
            Comprueba si un determinado tipo es numérico o no
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.IsAttribute(System.Reflection.PropertyInfo)">
            <summary>
            Identifica si una propiedad es un atributo. 
            Ignora el Id, las propiedades gráficas, los tipos no primitivos y las propiedades de solo lectura.
            </summary>
            <param name="property">Propiedad a evaluar</param>
            <returns>True si es un atributo.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.ValidateNameProperty(System.String,unoGIS.Entities.GeometryEnumType)">
            <summary>
            Valida si el nombre de la propiedad ya existe en los tipos heredados
            </summary>
            <param name="propertyName">Nombre de la propiedad.</param>
            <param name="GeometryType">Tipo de geometría a la que pertenece.</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.TypeBuilder(System.String,System.String,System.String,System.Type,System.Type[],System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.PropertyDefinition})">
            <summary>
            Constructor de tipos
            </summary>
            <param name="typeName"></param>
            <param name="tableName"></param>
            <param name="featureSet"></param>
            <param name="parent"></param>
            <param name="interfaces"></param>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.AddDelegatedAccessors(System.Reflection.Emit.TypeBuilder,System.String,System.Type,System.Collections.Generic.List{System.Reflection.Emit.CustomAttributeBuilder},System.String,System.String,System.String,System.String)">
            <summary>
            Crea Get/Set con delegados
            </summary>
            <param name="typeBuilder"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="attrs"></param>
            <param name="delegateGetName"></param>
            <param name="get"></param>
            <param name="delegateSetName"></param>
            <param name="set"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.AddLazyCollectionAccessors(System.Reflection.Emit.TypeBuilder,System.String,System.Type,System.Collections.Generic.List{System.Reflection.Emit.CustomAttributeBuilder},System.Reflection.Emit.MethodBuilder)">
            <summary>
            Crea Get/Set de las colecciones
            </summary>
            <param name="typeBuilder"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="attrs"></param>
            <param name="propertyDriverGetMethodBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.AddProperty(System.Reflection.Emit.TypeBuilder,System.String,System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Boolean,System.Reflection.Emit.MethodBuilder)">
            <summary>
            Añade una propiedad
            </summary>
            <param name="typeBuilder"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="attrs"></param>
            <param name="isLazy"></param>
            <param name="propertyDriverGetMethodBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.GenerateGetIL(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código del método Get por defecto
            </summary>
            <param name="getILGenerator"></param>
            <param name="fieldBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.GenerateSetIL(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código IL del método Set por defecto.
            </summary>
            <param name="setILGenerator"></param>
            <param name="fieldBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.BuildAndAssignDelegate(unoGIS.SpatialObjects.InfoDelegate,System.Boolean)">
            <summary>
            Construye un delegado a partir de un string y lo asocia al delegado del tipo
            </summary>
            <param name="infoDelegate"></param>
            <param name="throwExceptions"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.GenerateDelegatedMethodIL(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.FieldBuilder,System.Type)">
            <summary>
            General el código IL del método de un campo Delegado
            </summary>
            <param name="ilGenerator"></param>
            <param name="methodDelegateBuilder"></param>
            <param name="returnType"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.GenerateDelegatedGetIL(System.Reflection.Emit.ILGenerator,System.Type,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código IL del Get de un campo Delegado
            </summary>
            <param name="getILGenerator"></param>
            <param name="propertyType"></param>
            <param name="fieldBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.GenerateDelegatedSetIL(System.Reflection.Emit.ILGenerator,System.Type,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código IL del Set de un campo Delegado
            </summary>
            <param name="setILGenerator"></param>
            <param name="propertyType"></param>
            <param name="fieldBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.SetLazyLoading(System.Object,unoGIS.SpatialObjects.ISpatialDriver,System.Boolean)">
            <summary>
            Activa o desactiva la carga perezosa en una entidad
            </summary>
            <param name="entity">Entidad</param>
            <param name="driver">Spatial Driver</param>
            <param name="enable">Indica si se activa o desactiva la carga perezosa</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.CreateRulesType(System.Reflection.Emit.ModuleBuilder,System.String)">
            <summary>
            Crea un tipo Rules para almacenar reglas. (De negocio,...)
            </summary>
            <param name="modelBuilder"></param>
            <param name="assemblyNameSpace"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.GenerateLazySetIL(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.FieldBuilder,System.Reflection.Emit.FieldBuilder)">
            <summary>
            Genera el código IL para el GET con carga perezosa
            </summary>
            <param name="setILGenerator"></param>
            <param name="fieldBuilder"></param>
            <param name="fieldIdBuilder"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.GenerateLazyDelegatedGetIL(System.Reflection.Emit.ILGenerator,System.String,System.Type,System.Reflection.Emit.FieldBuilder,System.Reflection.Emit.MethodBuilder,System.Boolean)">
            <summary>
            Genera el código IL para el GET con carga perezosa de las colecciones
            </summary>
            <param name="getILGenerator"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="fieldBuilder"></param>
            <param name="propertyDriverGetMethodBuilder"></param>
            <param name="isCollection"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.LoadRelation(unoGIS.SpatialObjects.ISpatialDriver,unoGIS.Entities.IEntity,System.String)">
            <summary>
            Método estático que se utilizar para la carga perezosa de las relaciones
            </summary>
            <param name="driver"></param>
            <param name="entity"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.LoadCollection(unoGIS.SpatialObjects.ISpatialDriver,unoGIS.Entities.IEntity,System.String)">
            <summary>
            Método estático que se utiliza para obtener las colecciones y aplicar la carga perezosa
            </summary>
            <param name="entity"></param>
            <param name="driver"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.SortByFK(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Ordena tipos basándose en relaciones de Foreign Keys. Aparecerán antes los tipos que no son apuntados por otros como FK
            </summary>
            <param name="allTypes"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.SortByFK(System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}})">
            <summary>
            Ordena EntitySets basándose en relaciones de Foreign Keys. Aparecerán antes las EntitySets que no son apuntadas por otras como FK
            </summary>
            <param name="allEntities"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.BuildEnum(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Crea un nuevo enumerado
            </summary>
            <param name="enumName">Nombre del enumerado</param>
            <param name="values">Valores</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.Migrate(System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="xmlDataModel"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.DefinitionFromEntityType(System.Type)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.DataModelTools.TableNameForEntityType(System.Type)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.PropertyDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.PropertyDefinition.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.PropertyDefinition.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.PropertyDefinition.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
        </member>
        <member name="E:unoGIS.SpatialObjects.EntitySetCollection.OnRemoveDriver">
            <summary>
            Evento que se dispara cuando un SpatialDriver es retirado
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetCollection.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetCollection.PerformPropertyChanged">
            <summary>
            Lanza evento de PropertyChanged sobre colección de EntitySets
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetCollection.LoadStyles(unoGIS.SpatialObjects.ISpatialDriver,System.IO.Stream)">
            <summary>
            Carga los estilos en las EntitySets pertenecientes al driver seleccionado.
            </summary>
            <param name="driver">Driver donde se cargan los estilos.</param>
            <param name="input">Stream que contiene los estilos a aplicar.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetCollection.LoadStyles(unoGIS.SpatialObjects.ISpatialDriver,System.Xml.XmlReader)">
            <summary>
            Carga los estilos en las EntitySets pertenecientes al driver seleccionado.
            </summary>
            <param name="driver">Driver donde se cargan los estilos.</param>
            <param name="xml">Xml que contiene los estilos a aplicar.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetCollection.SaveStyles(unoGIS.SpatialObjects.ISpatialDriver,System.IO.Stream)">
            <summary>
            Guarda los estilos de las EntitySets pertenecientes al driver seleccionado.
            </summary>
            <param name="driver">Driver de los estilos a guardar.</param>
            <param name="output">Stream donde se guardaran los estilos en formato xml.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetCollection.SortEntitySets(unoGIS.SpatialObjects.ISpatialDriver,System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry}})">
            <summary>
            Ordena los EntitySets pertenecientes al driver seleccionado, segun el orden indicado.
            </summary>
            <param name="driver">Driver de los EntitySets a ordenar.</param>
            <param name="orderBy">EntitySets ordenados.</param>
        </member>
        <member name="T:unoGIS.SpatialObjects.IBackUpSpatialDriver">
            <summary>
            Interface para drivers con capacidad de hacer copia de seguridad
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.IBackUpSpatialDriver.Backup">
            <summary>
            Realiza una copia de seguridad
            </summary>
        </member>
        <member name="T:unoGIS.SpatialObjects.ICreateEntitySet">
            <summary>
            Soporte que permite a un ISpatialDriver gestionar conjuntos de entidades
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.ICreateEntitySet.CreateEntitySet(System.String,unoGIS.CoordinateSystems.CoordinateSystem,System.Type)">
            <summary>
            Crea un conjunto de entidades del mismo tipo
            </summary>
            <param name="entitySetName">Nombre del conjunto de entidades</param>
            <param name="featureDataSet">Nombre de la agrupación</param>
            <param name="cs">Sistema de coordenadas</param>
            <param name="elementType">Tipo del conjunto de entidades</param>        
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.ICreateEntitySet.DeleteEntitySet(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            Elimina un conjunto de entidades
            </summary>
            <param name="entitySet">Conjunto de entidades</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.ICreateEntitySet.CanAddCustomFields">
            <summary>
            Determina si las entitySets pueden añadir campos personalizadas
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.IDataSourceSpatialDriver">
            <summary>
            Soporte que permite a un ISpatialDriver gestionar el origen de datos que utiliza
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.IDataSourceSpatialDriver.CreateSource(System.Boolean)">
            <summary>
            Crea todo el soporte que precisa el driver para poder gestionar datos gráficos y alfanuméricos
            <param name="overridePrevious">Indica si se sobreescribe el origen existente</param>
            <returns>true si la operación se realizó con éxito</returns>
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.IDataSourceSpatialDriver.DeleteSource">
            <summary>
            Insta al Driver para que elimine el origen de datos
            <returns>true si la operación se realizó con éxito</returns>
            </summary>
        </member>
        <member name="T:unoGIS.SpatialObjects.IHistoricSpatialDriver">
            <summary>
            Soporte de histórico para SpatialDriver
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.IHistoricSpatialDriver.GetHistory(unoGIS.Entities.IEntity)">
            <summary>
            Dada una entidad, devuelve su historial de cambios desde su creación.
            </summary>
            <param name="entity">entidad de la que se desea obtener su historial de cambios.</param>
            <returns>Historial correspondiente a la entidad.</returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.ISpatialDriver">
            <summary>
            Define el soporte de un controlador espacial
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.ISpatialDriver.ExistsSource">
            <summary>
            Retorna si ya existe el origen de datos
            <returns>true si la operación se realizó con éxito</returns>
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.ISpatialDriver.Open">
            <summary>
            Realiza la apertura de conexión del driver con los valores de configuración previamente establecidos
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.ISpatialDriver.Close">
            <summary>
            Cierra las conexiones abiertas wpor el driver y guarda los cambios pendientes
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.SpatialDriverHelper.GetDrivers">
            <summary>
            Devuelve la colección de todos los drivers disponibles.
            </summary>
            <returns>IEnumerable de los drivers disponibles.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.SpatialDriverHelper.GetAttributeOfDriver(System.Type)">
            <summary>
            Devuelve el SpatialDriverAttribute asociado a un SpatialDriver.
            </summary>
            <param name="driverType">Tipo del driver que se desea consultar.</param>
            <returns>Devuelve el SpatialDriverAttribute asociado a un SpatialDriver.</returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.DataSourceType">
            <summary>
            Define el tipo de acceso
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.DataSourceType.File">
            <summary>
            Archivo físico
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.DataSourceType.Folder">
            <summary>
            Carpeta
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.DataSourceType.Remote">
            <summary>
            Dirección
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.DataSourceType.Fixed">
            <summary>
            Fijo. El driver no requiere de ninguna información adicional para localizar los datos.
            </summary>
        </member>
        <member name="T:unoGIS.SpatialObjects.SpatialDriverAttribute">
            <summary>
            Define datos asociados a un tipo ISpatialDriver
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.SpatialDriverAttribute.Filter">
            <summary>
            Filtro para la selección de archivos. "Archivos VEC|*.vec"
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.SpatialDriverAttribute.SaveFilter">
            <summary>
            Filtro para guardar archivos. "Archivos VEC|*.vec"
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.SpatialDriverAttribute.Catalog">
            <summary>
            El DataSource dispone de un catalogo de origenes de datos.
            </summary>
        </member>
        <member name="F:unoGIS.SpatialObjects.SpatialDriverAttribute.Autentication">
            <summary>
            El origen de datos permite autenticación (Usuario/Contraseña).
            </summary>
        </member>
        <member name="T:unoGIS.SpatialObjects.ITransactionalSpatialDriver">
            <summary>
            Soporte de transacciones para SpatialDriver 
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.ITransactionalSpatialDriver.Transaction">
            <summary>
            Obtiene el objeto transacción subyacente
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.ITransactionalSpatialDriver.BeginTransaction">
            <summary>
            Inicia transacción
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.ITransactionalSpatialDriver.CommitTransaction">
            <summary>
            Aplica cambios dentro del ámbito de la transacción
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.ITransactionalSpatialDriver.RollbackTransaction">
            <summary>
            Deshace los cambios pendientes dentro del ámbito de la transacción
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.Encode(System.String)">
            <summary>
            Codifica un texto para ser compatible con Xml/Html
            </summary>
            <param name="text">Texto a codificar</param>
            <returns>Texto codificado</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.Decode(System.String)">
            <summary>
            Decodifica un texto a su formato original
            </summary>
            <param name="text">Texto a decodificar</param>
            <returns>Texto decodificado</returns>
        </member>
        <!-- El comentario XML con formato incorrecto se ha omitido para el miembro "M:unoGIS.SpatialObjects.Query.ExecuteQueryFromXml(unoGIS.SpatialObjects.ISpatialDriver,System.Xml.Linq.XElement,System.Func{unoGIS.SpatialObjects.ISpatialDriver,System.Guid,unoGIS.Entities.Geometry[]},System.String,System.String,System.Int32,System.Int32,System.Boolean)" -->
        <member name="M:unoGIS.SpatialObjects.Query.SetLazyLoading``1(System.Linq.IQueryable{``0},unoGIS.SpatialObjects.ISpatialDriver)">
            <summary>
            Realiza la carga perezosa para un IQueryable.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="driver"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.ExecuteQueryWhereFromXml(unoGIS.SpatialObjects.ISpatialDriver,System.Type,System.Xml.Linq.XElement,System.Func{unoGIS.SpatialObjects.ISpatialDriver,System.Guid,unoGIS.Entities.Geometry[]})">
            <summary>
            Ejecuta una consulta solo con Where.
            </summary>
            <param name="driver">Driver donde se ejecuta.</param>
            <param name="xmlWhere">Consulta en formato Xml.</param>
            <param name="entitySet">EntitySet donde se consuta.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.CreateDynamicLinqSelectFromXml(unoGIS.SpatialObjects.ISpatialDriver,System.Type,System.Xml.Linq.XElement)">
            <summary>
            Contruye la sentencia Select para una consulta dinámica.
            </summary>
            <param name="xml">Consulta en xml</param>
            <returns>String del Select</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.CreateDynamicLinqWhereFromXml(unoGIS.SpatialObjects.ISpatialDriver,System.Xml.Linq.XElement,System.String,System.Int32)">
            <summary>
            Contruye la sentencia Where para una consulta dinámica.
            </summary>
            <param name="driver">Driver sobre el que se ejecuta.</param>
            <param name="xml">Xml con consulta completa o solo elemento Where.</param>
            <param name="entityTypeName">Nombre de la entidad que se consulta.</param>
            <param name="indexParameter">Indice para indexar la consulta en caso de estar anidada. Se usa en recursividad.</param>
            <returns>String del Where</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.CreateDynamicLinqWhereNullParametersValidationFromXml(System.Xml.Linq.XElement,unoGIS.SpatialObjects.ISpatialDriver,System.Type)">
            <summary>
            Construye la parte de la sentencia Where que realiza la validación de los nulos.
            </summary>
            <param name="xml">xml de la consulta</param>
            <param name="propertiesList">Lista de propiedades para. Se usa en la función de forma recursiva.</param>
            <returns>Lista de parámetros</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.GetDynamicLinqWhereNullParametersFromElements(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},unoGIS.SpatialObjects.ISpatialDriver,System.Type)">
            <summary>
            Obtiene la validación de las propiedades a null en el select
            </summary>
            <param name="elements"></param>
            <param name="driver"></param>
            <param name="dataModelType"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.ParseWherePropertyToDynamicLinq(unoGIS.SpatialObjects.ISpatialDriver,System.Xml.Linq.XElement,System.String,System.Int32@)">
            <summary>
            Opera los diferentes tipos de propiedades en el Where para generar correctamente la consulta.
            </summary>
            <param name="driver">Driver sobre el que se ejecuta</param>
            <param name="element">Elemento propiedad</param>
            <param name="entityTypeName">Entidad de la propiedad</param>
            <returns>String de la consulta de la propiedad</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.CreateDynamicLinqGroupByFromXml(System.Xml.Linq.XElement)">
            <summary>
            Contruye la sentencia GroupBy para una consulta dinámica.
            </summary>
            <param name="xml">Xml de la consulta</param>
            <returns>String del GroupBy</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.CreateLambdaFromXml(unoGIS.SpatialObjects.ISpatialDriver,System.String,System.String,System.Func{unoGIS.SpatialObjects.ISpatialDriver,System.Guid,unoGIS.Entities.Geometry[]},System.String)">
            <summary>
            Devuelve un delegado a partir de su definición en XML.
            </summary>
            <param name="driver">ISpatialDriver que permite el soporte de consultas espaciales</param>
            <param name="entityTypeName">Nombre del tipo de la entidad sobre la que se aplica la consulta</param>
            <param name="xmlWhereFilter">Consulta en formato XML</param>
            <param name="querySolver"></param>
            <param name="lambdaParameterName">Nombre del parámetro que utilizará la expresión Lambda (por defecto, item)</param>
            <returns>Expresión Lambda compilada</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.QueryStoreSolver(unoGIS.SpatialObjects.ISpatialDriver,System.Guid)">
            <summary>
            Resuelve las consultas en unoGIS.
            </summary>
            <param name="driver">Driver sobre el que se consulta</param>
            <param name="guid">GUID de la consulta</param>
            <returns>Array de Geometry</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.GetWhereParametersFromXml(unoGIS.SpatialObjects.ISpatialDriver,System.Type,System.Xml.Linq.XElement,System.Func{unoGIS.SpatialObjects.ISpatialDriver,System.Guid,unoGIS.Entities.Geometry[]},System.Collections.Generic.List{System.Object})">
            <summary>
            Obtiene los parámetros del Where para los operaciones espaciales.
            </summary>
            <param name="driver">Driver sobre el que se consulta</param>
            <param name="xml">Xml de la consulta</param>
            <param name="querySolver">Función que resuelve el acceso a la consulta</param>
            <param name="whereParameters">Geometrías para realizar la consulta</param>
            <returns>Lista de geometrías</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.CreateTableColumnsHeadersElementType(System.Linq.IQueryable)">
            <summary>
            Crea las columnas de una tabla a partir del elemento de la consulta.
            </summary>
            <param name="query">Consuta</param>
            <returns>Listado columnas de la tabla.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.CreateTableColumnsHeadersFromXml(unoGIS.SpatialObjects.ISpatialDriver,System.Xml.Linq.XElement,System.Func{unoGIS.SpatialObjects.ISpatialDriver,System.Guid,unoGIS.Entities.Geometry[]})">
            <summary>
            Crea una lista con el nombre de las columnas que se muestran en la consulta.
            </summary>
            <param name="driver">Donde se obtiene la entidad y sus propiedades.</param>
            <param name="xml">Xml que contiene la consulta.</param>
            <param name="filterProperties">Flag para filtrar las columnas o filtrar las colecciones, etc.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.ExportQueriesToExcel(System.Collections.Generic.IEnumerable{unoGIS.SpatialObjects.ExecuteQueryModel})">
            <summary>
            Crea un documento de excel.
            </summary>
            <param name="executeQueriesList">Objetos de tipo consulta a exportar.</param>
            <returns>Documento de excel.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.ToString(System.Xml.Linq.XElement)">
            <summary>
            Crea un string de la consulta con el mismo formato que el queryBuilder.
            </summary>
            <param name="where">Nodo where de la consulta</param>
            <returns>String</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.GetWhereExpressions(System.Xml.Linq.XElement)">
            <summary>
            Recorre las expresiones del where y devuelve una lista de expresiones.
            </summary>
            <param name="where">Where de la consulta.</param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.IsVisibleColumnProperty(System.Reflection.PropertyInfo)">
            <summary>
            Filtra las propiedades que NO queremos mostrar en la consulta.
            </summary>
            <param name="propertyType">Propiedad a filtrar.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.UserCanOperateWithQuery(unoGIS.SpatialObjects.ISpatialDriver,System.Xml.Linq.XElement)">
            <summary>
            Valida los permisos de usuario para ejecutar la consulta.
            </summary>
            <param name="query">Consulta a revisar permisos.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.UserCanOperateWithSelectAndOperations(System.Xml.Linq.XElement,System.Type)">
            <summary>
            Valida los permisos de usuario para el Select y las Operaciones
            </summary>
            <param name="select">Select de la consulta</param>
            <param name="elementType">Entitidad para validar</param>
            <returns>True si puede consultarse. False si no.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.UserCanOperateWithWhere(System.Xml.Linq.XElement,System.Type)">
            <summary>
            Valida los permisos de usuario para el Where
            </summary>
            <param name="where">Where de la consulta</param>
            <param name="elementType">Entidad para validar</param>
            <returns>True si puede consultarse. False si no.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Query.FormatNavigationPath(System.String)">
            <summary>
            Formatea el path de navegación al nuevo formato de consulta por corchetes
            </summary>
            <param name="path"></param>
            <param name="useNullChecks">Indica si se debe construir el path de navegación teniendo en cuenta nulos</param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.ForeignKeyResult">
            <summary>
            Clase que representa la propiedad en un Path de navegación
            </summary>
        </member>
        <member name="T:unoGIS.SpatialObjects.ExecuteQueryModel">
            <summary>
            Clase que define el modelo de ejeción de la consulta.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.QueryableExtensions.SelectIds(System.Linq.IQueryable)">
            <summary>
            Obtiene las claves (int) del origen
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.QueryableExtensions.SelectIds``1(System.Linq.IQueryable)">
            <summary>
            Obtiene las claves (T) del origen
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.QueryableExtensions.SelectFast``1(System.Linq.IQueryable,System.String[])">
            <summary>
            Devuelve el valor de las propiedades mediante una consulta rápida.
            El tipo genérico debe ser una Tupla con los tipos de las propiedades de los valores devueltos.
            </summary>
            <typeparam name="TTuple"></typeparam>
            <param name="source"></param>
            <param name="propertyNames"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.QueryableExtensions.SelectFast(System.Linq.IQueryable,System.String[])">
            <summary>
            Devuelve el valor de las propiedades mediante una consulta rápida.
            El IQueryable que se genera es una Tupla con tantos Items como propiedades se consultan.
            </summary>
            <param name="source"></param>
            <param name="propertyNames"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.QueryableExtensions.InternalSelectFast(System.Linq.IQueryable,System.Type,System.String[])">
            <summary>
            Devuelve el valor de las propiedades mediante una consulta rápida.
            </summary>
            <param name="source"></param>
            <param name="targetType"></param>
            <param name="propertyNames"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.QueryableExtensions.IsTupleType(System.Type)">
            <summary>
            Comprueba si el tipo es una tupla
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.Selection">
            <summary>
            Gestiona la lista de elementos gráficos seleccionados
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.Selection.#ctor(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.Selection.IsEmpty">
            <summary>
            Indica si la selección está vacía
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.Selection.Count">
            <summary>
            Cantidad de entidades seleccionadas.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.Selection.Clear">
            <summary>
            Borra la selección
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.Selection.AddItem(System.Int32)">
            <summary>
            Agrega el elemento gráfico a la selección actual
            </summary>
            <param name="geometry"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.Selection.AddItems(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Agrega elementos gráficos a la selección actual
            </summary>
            <param name="geometries"></param>
        </member>
        <member name="M:unoGIS.SpatialObjects.Selection.Remove(System.Int32)">
            <summary>
            Quita de la selección la entidad especificada
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Selection.GetItems">
            <summary>
            Retorna los elementos gráficos seleccionados
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.Selection.ContainsItemWithId(System.Int32)">
            <summary>
            Retorna si se encuentra en la selección un elemento en base a su identificador
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.SpatialConnectionBuilder">
            <summary>
            Clase que permite definir una conexión a un origen de datos.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.SpatialConnectionBuilder.AssemblyName">
            <summary>
            Nombre del Assembly que contiene la clase del SpatialDriver
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.SpatialConnectionBuilder.ProviderName">
            <summary>
            Nombre completo del tipo de clase SpatialDriver
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.SpatialConnectionBuilder.DataSource">
            <summary>
            Nombre de archivo, Path, Nombre del servidor, URL, etc... del origen de datos.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.SpatialConnectionBuilder.Catalog">
            <summary>
            Para los DataSource que contienen más de un origen de datos, la propiedad InitialCatalog contiene cual de los origenes de datos es el seleccionado.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.SpatialConnectionBuilder.Schema">
            <summary>
            Schema para aquellos origenes de datos que soporten varios esquemas.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.SpatialConnectionBuilder.IntegratedSecurity">
            <summary>
            Seguridad integrada.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.SpatialConnectionBuilder.User">
            <summary>
            Nombre de usuario para aquellos origenes de datos que requieren una autenticación.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.SpatialConnectionBuilder.Password">
            <summary>
            Contraseña de usuario para aquellos origenes de datos que requieren una autenticación.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.Selection">
            <summary>
            Conjunto de entidades seleccionadas.
            El HashSet contiene los Id de todas las entidades seleccionadas.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.Dimension">
            <summary>
            Indica la dimensión
            </summary>
            <returns>
            Retorna el número de dimensiones de la geometría.
            </returns>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.GeometryType">
            <summary>
            Tipo de geometría que sirve de base a la entidad
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySet`1.GetDefinition">
            <summary>
            Devuelve la definición de la EntitySet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySet`1.GetFields">
            <summary>
            Devuelve la colección de Atributos de la EntitySet.
            </summary>
            <returns></returns>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.CoordinateType">
            <summary>
            Tipo de coordenadas que gestiona la geometría (2D, 3D, 2DM, etc...)
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.HasM">
            <summary>
            Indica si las coordenadas de la entidad tienen soporte para la componente M.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.Has3D">
            <summary>
            Indica si las coordenadas de la entidad tienen soporte para la componente Z.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.CoordinateSystem">
            <summary>
            Sistema de coordenadas en el que están definidas las entidades.
            </summary>
        </member>
        <member name="E:unoGIS.SpatialObjects.EntitySet`1.CoordinateSystemChanged">
            <summary>
            Evento que se dispara en caso de que cambie el sistema de coordenadas.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.Visible">
            <summary>
            Indica si el conjunto de entidades esta visible o no (encendido/apagado).
            Se consulta esta propiedad cuando se realiza un render.
            </summary>
        </member>
        <member name="E:unoGIS.SpatialObjects.EntitySet`1.VisibilityChanged">
            <summary>
            Evento que se dispara en caso de que la propiedad Visible cambie.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.MinScale">
            <summary>
            Escala mínima a la que es visible la EntitySet.
            Se consulta esta propiedad cuando se realiza un render.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.MaxScale">
            <summary>
            Escala máxima a la que es visible la EntitySet.
            Se consulta esta propiedad cuando se realiza un render.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySet`1.Painters">
            <summary>
            Colección de estilos que se aplicarán al EntitySet a la hora de realizar un render.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySet`1.GetBoundingBox">
            <summary>
            Devuelve un BoundingBox con las coordenadas máximas y mínimas de la EntitySet en su sistema de coordenadas.        
            </summary>
            <returns>BoundingBox con las coordenadas máximas y mínimas de la EntitySet.
            Si la EntitySet no contiene ninguna geometría devuelve null.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySet`1.AddEntity(unoGIS.Entities.Geometry)">
            <summary>
            Añade una nueva entidad a la EntitySet. La nueva entidad debe ser del mismo tipo que ElementType.
            </summary>
            <remarks>
            Los cambios no serán consolidados hasta la invocación del método SaveChanges.
            </remarks>
            <param name="geometry">Entidad a añadir a la EntitySet.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySet`1.DeleteEntity(unoGIS.Entities.Geometry)">
            <summary>
            Borra una entidad a la EntitySet. La nueva entidad debe existir para poder ser eliminada.
            </summary>
            <remarks>
            Los cambios no serán consolidados hasta la invocación del método SaveChanges.
            </remarks>
            <param name="geometry">Entidad a eliminar de la EntitySet.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySet`1.UpdateEntity(unoGIS.Entities.Geometry,unoGIS.Entities.Geometry)">
            <summary>
            Modifica una entidad a la EntitySet. La entidad debe existir (mismo Id) para poder ser modificada y ser del mismo tipo que ElementType.
            </summary>
            <remarks>
            Los cambios no serán consolidados hasta la invocación del método SaveChanges.
            </remarks>
            <param name="geometry">Entidad a modificar de la EntitySet.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySet`1.CreateObject">
            <summary>
            Crea una nueva Entidad del mismo tipo que la colección de la EntitySet.
            </summary>
            <returns>Nueva entidad del mismo tipo que ElementType.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySet`1.SaveChanges">
            <summary>
            Consolida los cambios realizados hasta el momento de la invocación.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySet`1.Clone">
            <summary>
            Devuelve una copia de la EntitySet. También se crea una copia de los Painters de la EntitySet.
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.IQuerySet">
            <summary>
            Si una EntitySet implementa la interfaz IQuerySet significa que la EntitySet esta destinada a suministrar información,
            por lo que Viewers no tendrá en cuenta si tiene geometrías o no para hacer las búsquedas.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySetClass`1.CoordinateSystem">
            <summary>
            Sistema de coordenadas
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySetClass`1.Visible">
            <summary>
            Indica si el EntitySet es visible o no.
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.EntitySetClass`1.Painters">
            <summary>
            Array de estilos que se aplicarán al EntitySet a la hora de pintar.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetClass`1.GetBoundingBox">
            <summary>
            Devuelve un BoundingBox con las coordenadas máximas y mínimas de la EntitySet en su sistema de coordenadas.        
            </summary>
            <returns>BoundingBox con las coordenadas máximas y mínimas de la EntitySet.
            Si la EntitySet no contiene ninguna geometría devuelve null.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetClass`1.AddEntity(unoGIS.Entities.Geometry)">
            <summary>
            Añade una nueva entidad a la EntitySet. La nueva entidad debe ser del mismo tipo que ElementType.
            </summary>
            <remarks>
            Los cambios no serán consolidados hasta la invocación del método SaveChanges.
            </remarks>
            <param name="geometry">Entidad a añadir a la EntitySet.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetClass`1.DeleteEntity(unoGIS.Entities.Geometry)">
            <summary>
            Borra una entidad a la EntitySet. La nueva entidad debe existir para poder ser eliminada.
            </summary>
            <remarks>
            Los cambios no serán consolidados hasta la invocación del método SaveChanges.
            </remarks>
            <param name="geometry">Entidad a eliminar de la EntitySet.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetClass`1.UpdateEntity(unoGIS.Entities.Geometry,unoGIS.Entities.Geometry)">
            <summary>
            Modifica una entidad a la EntitySet. La entidad debe existir (mismo Id) para poder ser modificada y ser del mismo tipo que ElementType.
            </summary>
            <remarks>
            Los cambios no serán consolidados hasta la invocación del método SaveChanges.
            </remarks>
            <param name="geometry">Entidad a modificar de la EntitySet.</param>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetClass`1.CreateObject">
            <summary>
            Crea una nueva Entidad del mismo tipo que la colección de la EntitySet.
            </summary>
            <returns>Nueva entidad del mismo tipo que ElementType.</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetClass`1.SaveChanges">
            <summary>
            Consolida los cambios realizados hasta el momento de la invocación.
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetClass`1.Clone">
            <summary>
            Devuelve una copia de la EntitySet. También se crea una copia de los Painters de la EntitySet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.EntitySetClass`1.ToString">
            <summary>
            Devuelve una cadena de texto que identifica a la EntitySet.
            </summary>
            <returns></returns>
        </member>
        <member name="T:unoGIS.SpatialObjects.DecimalPrecisionAttribute">
            <summary>
            Atributo para indicar la precision de una propiedad con decimales
            </summary>
        </member>
        <member name="P:unoGIS.SpatialObjects.DecimalPrecisionAttribute.Precision">
            <summary>
            Precision decimal
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.DecimalPrecisionAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.DecimalPrecisionAttribute.#ctor(System.Int32)">
            <summary>
            Contructor
            </summary>
            <param name="precision">Número de decimales</param>
        </member>
        <member name="T:unoGIS.SpatialObjects.SpecialTypeConverter">
            <summary>
            TypeConverter para añadir conversiones de tipos especiales
            </summary>
        </member>
        <member name="T:unoGIS.SpatialObjects.TypeHelper">
            <summary>
            Helper para el trabajo con tipos de datos
            </summary>
        </member>
        <member name="M:unoGIS.SpatialObjects.TypeHelper.ConvertValue(System.Type,System.Byte[])">
            <summary>
            Convierte el valor de un tipo a otro (p.e. un string a double)
            </summary>
            <param name="type">Tipo origen de la conversión</param>
            <param name="value">Valor del tipo</param>
            <returns>Valor convertido</returns>
            <remarks>Sólo permite tipos primitivos, incluida su versión Nullable</remarks>
        </member>
        <member name="M:unoGIS.SpatialObjects.TypeHelper.GetDefaultValue(System.Type)">
            <summary>
            Obtiene el valor por defecto de un tipo
            </summary>
            <param name="type">Tipo de dato</param>
            <returns>Valor por defecto</returns>
        </member>
        <member name="M:unoGIS.SpatialObjects.TypeHelper.GetDefaultValue``1">
            <summary>
            Obtiene el valor por defecto de un tipo
            </summary>
            <typeparam name="T">Tipo de dato</typeparam>
            <returns>Valor por defecto</returns>
        </member>
        <member name="T:unoGIS.Store.IStore">
            <summary>
            Almacén para la persistencia de datos
            </summary>
        </member>
        <member name="P:unoGIS.Store.IStore.Item(System.String)">
            <summary>
            Acceso a una parte del almacén
            </summary>
            <param name="key">Clave que identifica la parte del almacén</param>
            <returns>Items</returns>
        </member>
        <member name="M:unoGIS.Store.IStore.Get(System.String)">
            <summary>
            Acceso a una parte del almacén
            </summary>
            <param name="key">Clave que identifica la parte del almacén</param>
            <returns>Items</returns>
        </member>
        <member name="M:unoGIS.Store.IStore.Insert(System.String,unoGIS.Store.StoreItem)">
            <summary>
            Inserta un ítem en una parte del almacén
            </summary>
            <param name="key">Clave que identifica la parte del almacén</param>
            <param name="item">Ítem</param>
        </member>
        <member name="M:unoGIS.Store.IStore.Update(System.String,unoGIS.Store.StoreItem)">
            <summary>
            Actualiza un ítem de una parte del almacén
            </summary>
            <param name="key">Clave que identifica la parte del almacén</param>
            <param name="item">Ítem</param>
        </member>
        <member name="M:unoGIS.Store.IStore.Delete(System.String,unoGIS.Store.StoreItem)">
            <summary>
            Elimina un ítem en una parte del almacén
            </summary>
            <param name="key">Clave que identifica la parte del almacén</param>
            <param name="item">Ítem</param>
            <returns>False si no se ha podido eliminar o esta compartido</returns>
        </member>
        <member name="E:unoGIS.Store.IStore.StoreChanged">
            <summary>
            Evento cuando se realiza alguna operación en el almacén
            </summary>
        </member>
        <member name="T:unoGIS.Store.LocalStore">
            <summary>
            Almacén por defecto
            </summary>
        </member>
        <member name="T:unoGIS.Store.StoreEventArgs">
            <summary>
            Argumentos del evento StoreChanged
            </summary>
        </member>
        <member name="P:unoGIS.Store.StoreEventArgs.Key">
            <summary>
            Clave
            </summary>
        </member>
        <member name="P:unoGIS.Store.StoreEventArgs.Operation">
            <summary>
            Operación
            </summary>
        </member>
        <member name="T:unoGIS.Store.StoreHelper">
            <summary>
            Utilidades para el manejo de un almacén
            </summary>
        </member>
        <member name="M:unoGIS.Store.StoreHelper.CreateStoreItem(unoGIS.Store.StoreKey,System.String,System.Xml.Linq.XElement)">
            <summary>
            Factoría para crear StoreItem predefinidos (p.e. Mapas temáticos, Consultas...)
            </summary>
            <param name="store"></param>
            <param name="key"></param>
            <param name="title"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Store.StoreHelper.UpdateStoreItem(unoGIS.Store.StoreKey,unoGIS.Store.StoreItem,System.String,System.Xml.Linq.XElement)">
            <summary>
            Actualiza el contenido XML de un StoreItem predefinido (p.e. Mapas temáticos, Consultas...)
            </summary>
            <param name="store"></param>
            <param name="key"></param>
            <param name="item"></param>
            <param name="data"></param>
        </member>
        <member name="T:unoGIS.Store.StoreItem">
            <summary>
            Item para la gestión de datos en un almacén (IStore)
            </summary>
        </member>
        <member name="P:unoGIS.Store.StoreItem.Id">
            <summary>
            Identificador único
            </summary>
        </member>
        <member name="P:unoGIS.Store.StoreItem.Owner">
            <summary>
            Propietario
            </summary>
        </member>
        <member name="P:unoGIS.Store.StoreItem.TimeStamp">
            <summary>
            Fecha y hora de almacenamiento
            </summary>
        </member>
        <member name="P:unoGIS.Store.StoreItem.Data">
            <summary>
            Contenido
            </summary>
        </member>
        <member name="T:unoGIS.Store.StoreKey">
            <summary>
            Definición de claves de almacén consideradas 'de sistema'
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreKey.Layout">
            <summary>
            Maqueta de impresión
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreKey.Query">
            <summary>
            Consulta
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreKey.ShortCut">
            <summary>
            Atajo de teclado
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreKey.ThematicMap">
            <summary>
            Mapa Temático
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreKey.UserLabel">
            <summary>
            Etiqueta personalizada
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreKey.ToolLog">
            <summary>
            Log de herramienta
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreKey.BatchProcesses">
            <summary>
            Procesos por lotes
            </summary>
        </member>
        <member name="T:unoGIS.Store.StoreOperation">
            <summary>
            Definición de operaciones de almacén
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreOperation.Insert">
            <summary>
            Insertar
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreOperation.Update">
            <summary>
            Actualizar
            </summary>
        </member>
        <member name="F:unoGIS.Store.StoreOperation.Delete">
            <summary>
            Eliminar
            </summary>
        </member>
        <member name="T:unoGIS.unoGISApplication">
            <summary>
            Clase base que representa una aplicación GIS
            </summary>
        </member>
        <member name="F:unoGIS.unoGISApplication.AppPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.unoGISApplication.Assemblies">
            <summary>
            
            </summary>
        </member>
        <member name="F:unoGIS.unoGISApplication.GetSessionID">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.unoGISApplication.getContext">
            <summary>
            Contexto GIS actual
            </summary>
        </member>
        <member name="E:unoGIS.unoGISApplication.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.unoGISApplication.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="E:unoGIS.unoGISApplication.ErrorOccurred">
            <summary>
            Evento ErrorOccurred
            </summary>
        </member>
        <member name="M:unoGIS.unoGISApplication.OnErrorOccurred(unoGIS.WorkSpace.ApplicationError)">
            <summary>
            Dispara el evento ErrorOccurred
            </summary>
            <param name="error"></param>
        </member>
        <member name="P:unoGIS.unoGISApplication.Log">
            <summary>
            Gestor de incidencias
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.Commands">
            <summary>
            Gestor de comandos
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.Project">
            <summary>
            Gestor de mapas
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.EntitySets">
            <summary>
            Colección de EntitySet
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.UndoRedo">
            <summary>
            Gestor de Undo/Redo
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.Viewers">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.AutoSave">
            <summary>
            Gestión de autoguardado
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.CustomLabels">
            <summary>
            Etiquetas de usuario personalizadas
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.UserId">
            <summary>
            Identificador del usuario
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.Permissions">
            <summary>
            Gestor de permisos
            </summary>
        </member>
        <member name="P:unoGIS.unoGISApplication.Store">
            <summary>
            Store de la aplicación
            </summary>
        </member>
        <member name="M:unoGIS.unoGISApplication.CreateForm(unoGIS.Commands.Command)">
            <summary>
            Devuelve una instancia del formulario asociado al tipo de comando.
            Si no existe un formulario asociado, se devuelve null.
            </summary>
            <param name="cmdOwner"></param>
            <returns></returns>
        </member>
        <member name="E:unoGIS.unoGISApplication.OnShutdown">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.unoGISApplication.Shutdown">
            <summary>
            
            </summary>
        </member>
        <member name="E:unoGIS.unoGISApplication.OnDispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.unoGISApplication.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.unoGISApplication.Dispose(System.String)">
            <summary>
            Libera los recursos asociados a un contexto
            </summary>
            <param name="sessionId">Identificador de la sesión (p.e., SessionID en entornos Web)</param>
        </member>
        <member name="T:unoGIS.unoGISContext">
            <summary>
            Contexto para operaciones GIS
            </summary>
        </member>
        <member name="M:unoGIS.unoGISContext.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="E:unoGIS.unoGISContext.PropertyChanged">
            <summary>
            Evento Propertychanged
            </summary>
        </member>
        <member name="M:unoGIS.unoGISContext.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="E:unoGIS.unoGISContext.ErrorOccurred">
            <summary>
            Evento ErrorOccurred
            </summary>
        </member>
        <member name="M:unoGIS.unoGISContext.OnErrorOccurred(unoGIS.WorkSpace.ApplicationError)">
            <summary>
            Dispara el evento ErrorOccurred
            </summary>
            <param name="error">Datos del error producido</param>
        </member>
        <member name="P:unoGIS.unoGISContext.Permissions">
            <summary>
            Gestor de permisos
            </summary>
            <remarks>Se habilita el set para permitir implementaciones externas</remarks>
        </member>
        <member name="P:unoGIS.unoGISContext.Store">
            <summary>
            Gestor de almacén
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.Log">
            <summary>
            Gestor de incidencias
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.Commands">
            <summary>
            Gestor de comandos
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.Project">
            <summary>
            Gestor de mapas
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.UndoRedo">
            <summary>
            Gestor de Undo/Redo
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.Viewers">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.ShortCuts">
            <summary>
            Atajos de teclado para la consola
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.CustomLabels">
            <summary>
            Etiquetas de usuario personalizadas
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.EntitySets">
            <summary>
            Colección de EntitySet
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.AutoSave">
            <summary>
            Guardado automático
            </summary>
        </member>
        <member name="P:unoGIS.unoGISContext.UserId">
            <summary>
            Id del usuario autenticado
            </summary>
        </member>
        <member name="M:unoGIS.unoGISContext.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:unoGIS.Viewer.IFindGeometries">
            <summary>
            Interfaz que implementa un servicio para localizar geometrías
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.IFindGeometries.Find(unoGIS.SpatialObjects.EntitySet{unoGIS.Entities.Geometry},unoGIS.CoordinateSystems.CoordinateSystem,unoGIS.Entities.Coordinate,System.Double)">
            <summary>
            Busca geometrías localizadas dentro de un radio de búsqueda
            </summary>
            <param name="fs">Origen de datos</param>
            <param name="cs">Sistema de coordenadas del epicentro de búsqueda</param>
            <param name="coordinate">Epicentro de búsqueda</param>
            <param name="radius">Radio de búsqueda</param>
            <returns>Geometrías localizadas y ordenadas por distancia, de menor a mayor</returns>
        </member>
        <member name="M:unoGIS.Viewer.IFindGeometries.Find(unoGIS.Viewer.FindMode,unoGIS.Viewer.IViewer,unoGIS.Entities.Coordinate,System.Int32)">
            <summary>
            Busca geometrías localizadas en un IViewer a partir de una coordenada.
            Los resultados se devuelven ordenados por distancia de menos a mayor con respecto a la coordenada de busqueda.
            </summary>
            <param name="mode">Modo de busqueda.</param>
            <param name="viewer">Visor sobre el que se realiza la busqueda.</param>
            <param name="coordinate">Coordenada sobre la que se realiza la busqueda.</param>
            <param name="maxResult">Máxima cantidad de resultados.</param>
            <returns>Tuplas de geometrías localizadas y ordenadas por distancia, de menor a mayor</returns>
        </member>
        <member name="P:unoGIS.Viewer.IViewer.Radius">
            <summary>
            Radio de busqueda del visor.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewer.Camera">
            <summary>
            Cámara del visor
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewer.Mode">
            <summary>
            Modo del visor
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewer.EntitySets">
            <summary>
            Colección de EntitySets asociadas al visor
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewer.GeometryBoxesCollection">
            <summary>
            Cajas de las geoemtrías visibles en el último refresco del visor
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewer.Historical">
            <summary>
            Fecha histórica (formato UTC) en la que se visualizará la geometría. Si se asigna null, se desactiva la visualización histórica
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.IViewer.FlushBuffer(unoGIS.Viewer.RenderBuffer)">
            <summary>
            Dibuja en el lienzo del control el contenido del buffer.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.IViewer.Invalidate">
            <summary>
            Invalida el visor obligando a que se redibujen los buffers.
            El parametro "force" por defecto es "false", con lo que la operación de refresco se realizará con un doble buffer,
            en caso contrario se fuerza el refresco sin esperar el ciclo del doble buffer.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.IViewer.Refresh">
            <summary>
            Refresca el contenido del visor realizando un nuevo renderizado.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.IViewer.SendData(unoGIS.Entities.Coordinate)">
            <summary>
            Desencadena el proceso de generación de un DATA del visor.
            </summary>
            <param name="coordinate"></param>
        </member>
        <member name="M:unoGIS.Viewer.IViewer.SendReset(unoGIS.Entities.Coordinate)">
            <summary>
            Desencadena el proceso de generación de un RESET del visor.
            </summary>
            <param name="coordinate"></param>
        </member>
        <member name="M:unoGIS.Viewer.IViewer.SendSnap(unoGIS.Entities.Coordinate)">
            <summary>
            Desencadena el proceso de generación de un SNAP del visor.
            </summary>
            <param name="coordinate"></param>
        </member>
        <member name="M:unoGIS.Viewer.IViewer.SendCursor(unoGIS.Entities.Coordinate)">
            <summary>
            Desencadena el proceso de generación de un CURSOR (movimiento) del visor.
            </summary>
            <param name="coordinate"></param>
        </member>
        <member name="M:unoGIS.Viewer.IViewer.LockCursor(unoGIS.Entities.Coordinate)">
            <summary>
            Bloquea el cursor del visor en la coordenada especificada.
            Si "coordinate" es null, se libera el cursor del visor.
            </summary>
            <param name="coordiante">
            Coordenada donde se desea bloquear el cursor del visor.
            La coordenada debe estar expresada en el mismo sistema de coordenadas del visor.
            </param>
        </member>
        <member name="T:unoGIS.Viewer.ViewerEventArgs">
            <summary>
            Clase que contiene los datos de los eventos que genera IViewer
            </summary>
        </member>
        <member name="T:unoGIS.Viewer.IViewers">
            <summary>
            Interfaz que implementa un servicio que manipula un visor unoGIS
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.LastCursor">
            <summary>
            Último cursor que ha producido el visor.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.LastData">
            <summary>
            Último data que ha producido el visor.
            </summary>
        </member>
        <member name="E:unoGIS.Viewer.IViewers.Locate">
            <summary>
            Ocurre cuando se localiza una entidad.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.Located">
            <summary>
            Entidad localizada.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.IViewers.GetSnapQueue">
            <summary>
            Obtiene las entidades localizadas más cercanas, ordenadas por distancia de menor a mayor
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Viewer.IViewers.ActivateLocate(unoGIS.Viewer.LocateMode,System.Boolean)">
            <summary>
            Activar la localización indicando el modo de localización y si se desea confirmar o no la localización.
            Opcionalmente se puede especificar una lista de tipos de geometría a buscar, si se especifica algún tipo de
            geometría en el parámetro filterTypes solo se realizará y enviarán geometrías que coincidan con los indicados
            por dicho parámetro.
            </summary>
            <param name="mode">
            Modo de localización deseado:
                ActiveEntitySet, la búsqueda solo se realiza en la EntitySet activa.
                ActiveSpatialContext, la búsqueda se realiza en las EntitySets del SpatialContext activo.
                All, la búsqueda se realiza en todas las EntitySets de todos los SpatialsContexts.
            </param>
            <param name="ConfirmLocation">
            Si se desea confirmación cuando el usuario seleccione una entidad, cuando el usuario seleccione la entidad esta se mostrará
            resaltada (highlight), si el usuario pulsa Data esta será la entidad que se envíe al comando en curso, por el contrario si
            el usuario pulsa Reset se cancelará la localización.
            </param>
            <param name="filterTypes">
            Lista opcional de tipos de geometría a localizar.
            </param>
        </member>
        <member name="M:unoGIS.Viewer.IViewers.DeactivateLocate">
            <summary>
            Desactiva la localización de geometrías.
            </summary>
            <remarks>
            La invocación de este método solo tiene efecto si previamente se ha invocado el método ActiveLocate.
            </remarks>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.SnapZ">
            <summary>
            Cuando se hace Snap se asigna o no la Z del elemento localizado a la posición del Cursor.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.SnapCut">
            <summary>
            Cuando se hace Snap se realiza un corte sobre la geometría.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.SnapMode">
            <summary>
            Tipo de Snap.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.ConfiguredConfirmLocation">
            <summary>
            Establece la configuración global de la confirmación de la localización.
            </summary>
        </member>
        <member name="E:unoGIS.Viewer.IViewers.SnapChanged">
            <summary>
            Ocurre cuando cambia el mode de snap.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.MonitorScale">
            <summary>
            Indica la relación de la diagonal del monitor o pantalla con su resolución.
            Este valor solo se utilizará para el cálculo aproximado de la escala de visualización en pantalla.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.ViewersCollection">
            <summary>
            Colección de Visores disponibles en el servicio.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.IViewers.AddViewer(unoGIS.Viewer.IViewer)">
            <summary>
            Añade un visor a la colección
            </summary>
            <param name="viewer"></param>
        </member>
        <member name="M:unoGIS.Viewer.IViewers.RemoveViewer(unoGIS.Viewer.IViewer)">
            <summary>
            Elimina un visor de la colección
            </summary>
            <param name="viewer"></param>
        </member>
        <member name="P:unoGIS.Viewer.IViewers.Buffers">
            <summary>
            Acceso a la colección de Buffers
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.IViewers.CreateBuffer">
            <summary>
            Crea y devuelve un RenderBuffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Viewer.IViewers.RemoveBuffer(unoGIS.Viewer.RenderBuffer)">
            <summary>
            Elimina el buffer especificado del visor.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:unoGIS.Viewer.IViewers.FlushBuffer(unoGIS.Viewer.RenderBuffer)">
            <summary>
            Dibuja en el lienzo del control el contenido del buffer y, libera el buffer.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.IViewers.Invalidate">
            <summary>
            Invalida el visor obligando a que se redibujen los buffers.
            El parametro "force" por defecto es "false", con lo que la operación de refresco se realizará con un doble buffer,
            en caso contrario se fuerza el refresco sin esperar el ciclo del doble buffer.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.LocateEventArgs.SpatialDriver">
            <summary>
            Contexto espacial al que pertenece la EntitySet.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.LocateEventArgs.EntitySet">
            <summary>
            Origen de datos al que pertenece la geometría.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.LocateEventArgs.Geometry">
            <summary>
            Geometría localizada.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.LocateEventArgs.Viewer">
            <summary>
            Visor con el que se ha hecho la localización.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.LocateEventArgs.Coordinate">
            <summary>
            Coordenada de la localización en el sistema de coordenadas del visor.        
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.LocateEventArgs.Distance">
            <summary>
            Mínima distancia de la coordenada del visor a la geometría.
            El sistema de coordenadas es el del visor.
            </summary>
        </member>
        <member name="T:unoGIS.Viewer.RenderBuffer">
            <summary>
            La clase RenderBuffer se utiliza para definir un buffer de operaciones gráficas sobre un visor.
            Esta clase es una colección de RenderOperation (operaciones gráficas) y, define el método "Invalidate" para
            indicar a los visores que ha modificado su contenido y que se debe actualizar. Los visores actualizarán el contenido
            del buffer en el próximo ciclo de refresco a no ser que se invoque el método Invalidate(true), en cuyo caso el
            refresco será inmediato.
            </summary>
        </member>
        <member name="F:unoGIS.Viewer.RenderOperation.Painters">
            <summary>
            Colección de Painters que se aplica a cada geometría cada vez que se realiza el render.
            </summary>
        </member>
        <member name="F:unoGIS.Viewer.RenderOperation.Mode">
            <summary>
            Modo que se aplica a cada Painter para realizar el render.
            </summary>
        </member>
        <member name="F:unoGIS.Viewer.RenderOperation.CoordinateSystem">
            <summary>
            Sistema de coordenadas en el que se encuentrán las geometrías.
            </summary>
        </member>
        <member name="F:unoGIS.Viewer.RenderOperation.Geometries">
            <summary>
            Colección de geometrías.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.Viewers.ConfiguredConfirmLocation">
            <summary>
            Establece la configuración global de la confirmación de la localización. Por defecto True.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.Viewers.FilterTypes">
            <summary>
            Contiene la lista de tipos que pueden cumplir la condición de localización. Si la lista esta vacía cualquier tipo cumple la condición.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.Viewers.FilterEntitySets">
            <summary>
            Contiene la lista de EntitySets que pueden cumplir la condición de localización. Si la lista esta vacía cualquier EntitySet cumple la condición.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.#ctor(unoGIS.unoGISContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="E:unoGIS.Viewer.Viewers.PropertyChanged">
            <summary>
            Evento Propertychanged
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.OnPropertyChanged(System.String)">
            <summary>
            Dispara el evento PropertyChange
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.ActivateLocate(unoGIS.Viewer.LocateMode,System.Boolean)">
            <summary>
            Activar la localización indicando el modo de localización y si se desea confirmar o no la localización.
            Opcionalmente se puede especificar una lista de tipos de geometría a buscar, si se especifica algún tipo de
            geometría en el parámetro filterTypes solo se realizará y enviarán geometrías que coincidan con los indicados
            por dicho parámetro.
            </summary>
            <param name="mode">
            Modo de localización deseado:
                ActiveEntitySet, la búsqueda solo se realiza en la EntitySet activa.
                ActiveSpatialContext, la búsqueda se realiza en las EntitySets del SpatialContext activo.
                All, la búsqueda se realiza en todas las EntitySets de todos los SpatialsContexts.
            </param>
            <param name="ConfirmLocation">
            Si se desea confirmación cuando el usuario seleccione una entidad, cuando el usuario seleccione la entidad esta se mostrará
            resaltada (highlight), si el usuario pulsa Data esta será la entidad que se envíe al comando en curso, por el contrario si
            el usuario pulsa Reset se cancelará la localización.
            </param>
            <param name="filterTypes">
            Lista opcional de tipos de geometría a localizar.
            </param>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.DeactivateLocate">
            <summary>
            Desactiva la localización de geometrías.
            </summary>
            <remarks>
            La invocación de este método solo tiene efecto si previamente se ha invocado el método ActiveLocate.
            </remarks>
        </member>
        <member name="P:unoGIS.Viewer.Viewers.SnapZ">
            <summary>
            Cuando se hace Snap se asigna o no la Z del elemento localizado a la posición del Cursor.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.Viewers.SnapCut">
            <summary>
            Cuando se hace Snap se asigna o no la Z del elemento localizado a la posición del Cursor.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.Viewers.SnapMode">
            <summary>
            Modo de Snap
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.Viewers.MonitorScale">
            <summary>
            Indica el tamaño de la diagonal del monitor o pantalla.
            Este valor solo se utilizará para el cálculo aproximado de la escala de visualización en pantalla.
            </summary>
        </member>
        <member name="P:unoGIS.Viewer.Viewers.Located">
            <summary>
            Información sobre el candidado a snap actual.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.GetSnapQueue">
            <summary>
            Obtiene la cola de snap actual
            </summary>
            <returns></returns>
        </member>
        <member name="F:unoGIS.Viewer.Viewers.Locates">
            <summary>
            Lista con el resultado de la busqueda del Snap.
            </summary>
        </member>
        <member name="F:unoGIS.Viewer.Viewers.SnapCoordinate">
            <summary>
            Coordenada donde se hizo el primer Snap.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.CutLocatedGeometry(unoGIS.Viewer.LocateEventArgs)">
            <summary>
            Corta una geometría
            </summary>
            <param name="located"></param>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.PropertiesFilter(System.Reflection.PropertyInfo)">
            <summary>
            Filtro de selección de propiedades
            </summary>
            <param name="property">Tipo de propiedad</param>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.AddViewer(unoGIS.Viewer.IViewer)">
            <summary>
            Añade un visor a la colección
            </summary>
            <param name="viewer"></param>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.RemoveViewer(unoGIS.Viewer.IViewer)">
            <summary>
            Elimina un visor de la colección
            </summary>
            <param name="viewer"></param>
        </member>
        <member name="P:unoGIS.Viewer.Viewers.ViewersCollection">
            <summary>
            Colección de Visores disponibles en el servicio.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.CreateBuffer">
            <summary>
            Crea y devuelve un RenderBuffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.RemoveBuffer(unoGIS.Viewer.RenderBuffer)">
            <summary>
            Elimina el buffer especificado del visor.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.FlushBuffer(unoGIS.Viewer.RenderBuffer)">
            <summary>
            Dibuja en el lienzo del control el contenido del buffer y, libera el buffer.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.Invalidate">
            <summary>
            Invalida el visor obligando a que se redibujen los buffers.
            El parametro "force" por defecto es "false", con lo que la operación de refresco se realizará con un doble buffer,
            en caso contrario se fuerza el refresco sin esperar el ciclo del doble buffer.
            </summary>
        </member>
        <member name="M:unoGIS.Viewer.Viewers.Refresh">
            <summary>
            Refresca el contenido del visor realizando un nuevo renderizado.
            </summary>
        </member>
        <member name="T:unoGIS.WorkSpace.ApplicationError">
            <summary>
            Clase que define un error para mostrar al usuario
            </summary>
        </member>
        <member name="P:unoGIS.WorkSpace.ApplicationError.Title">
            <summary>
            Titulo del error
            </summary>
        </member>
        <member name="P:unoGIS.WorkSpace.ApplicationError.Message">
            <summary>
            Mensaje de error
            </summary>
        </member>
        <member name="P:unoGIS.WorkSpace.ApplicationError.Exception">
            <summary>
            Tipo de error
            </summary>
        </member>
        <member name="M:unoGIS.WorkSpace.ApplicationError.#ctor(System.String,System.String,unoGIS.WorkSpace.TypeException)">
            <summary>
            Crea un error de la aplicación con el titulo y el mensaje indicado
            </summary>
            <param name="title"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="T:unoGIS.WorkSpace.TypeException">
            <summary>
            Tipo de mensaje de error
            </summary>
        </member>
        <member name="F:unoGIS.WorkSpace.TypeException.Error">
            <summary>
            Mensaje de error
            </summary>
        </member>
        <member name="F:unoGIS.WorkSpace.TypeException.Warning">
            <summary>
            Mensaje de aviso
            </summary>
        </member>
        <member name="T:unoGIS.WorkSpace.ErrorOccurredEventHandler">
            <summary>
            Evento para controlar los errores producidos en una herramienta sin control de errores
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:unoGIS.WorkSpace.ErrorOccurredEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:unoGIS.WorkSpace.ErrorOccurredEventArgs.#ctor(unoGIS.WorkSpace.ApplicationError)">
            <summary>
            Evento para mostrar un error en la aplicación
            </summary>
            <param name="error"></param>
        </member>
        <member name="P:unoGIS.WorkSpace.ErrorOccurredEventArgs.Error">
            <summary>
            Datos del error
            </summary>
        </member>
        <member name="T:unoGIS.WorkSpace.AutoSave">
            <summary>
            Gestión del guardado automático sobre orígenes de datos cargados
            </summary>
        </member>
        <member name="M:unoGIS.WorkSpace.AutoSave.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="P:unoGIS.WorkSpace.AutoSave.Enabled">
            <summary>
            Indica si está activado el autoguardado
            </summary>
        </member>
        <member name="P:unoGIS.WorkSpace.AutoSave.Interval">
            <summary>
            Indica el intervalo de tiempo que pasa hasta que se ejecuta de nuevo el autoguardado
            </summary>        
        </member>
        <member name="M:unoGIS.WorkSpace.AutoSave.Configure(System.Boolean,System.TimeSpan)">
            <summary>
            Cambia la configuración de autoguardado
            </summary>
            <param name="enabled"></param>
            <param name="interval"></param>
        </member>
        <member name="T:System.Reflection.CustomIntrospectionExtensions">
            <summary>
            https://github.com/castleproject/Core/blob/netcore/src/Castle.Core/Compatibility/IntrospectionExtensions.cs
            </summary>
        </member>
    </members>
</doc>
