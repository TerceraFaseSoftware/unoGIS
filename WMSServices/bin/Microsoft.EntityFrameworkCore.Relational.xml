<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.EntityFrameworkCore.Relational</name>
    </assembly>
    <members>
        <member name="T:Microsoft.EntityFrameworkCore.DbFunctionAttribute">
            <summary>
                Maps a static CLR method to a database function so that the CLR method may be used in LINQ queries.
                By convention uses the .NET method name as name of the database function and the default schema.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbFunctionAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbFunctionAttribute" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbFunctionAttribute.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbFunctionAttribute" /> class.
            </summary>
            <param name="functionName">The name of the function in the database.</param>
            <param name="schema">The schema of the function in the database.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbFunctionAttribute.FunctionName">
            <summary>
                The name of the function in the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbFunctionAttribute.Schema">
            <summary>
                The schema of the function in the database.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.CommandEndEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> command end events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.CommandEndEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Boolean,System.Boolean,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="command">
                The <see cref="T:System.Data.Common.DbCommand" />.
            </param>
            <param name="executeMethod">
                The <see cref="T:System.Data.Common.DbCommand" /> method.
            </param>
            <param name="commandId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="async">
                Indicates whether or not the command was executed asyncronously.
            </param>
            <param name="logParameterValues">
                Indicates whether or not the application allows logging of parameter values.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
            <param name="duration">
                The duration this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandEndEventData.Duration">
            <summary>
                The duration this event.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.CommandErrorEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandError" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.CommandErrorEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.Boolean,System.Boolean,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="command">
                The <see cref="T:System.Data.Common.DbCommand" /> that was executing when it failed.
            </param>
            <param name="executeMethod">
                The <see cref="T:System.Data.Common.DbCommand" /> method that was used to execute the command.
            </param>
            <param name="commandId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="exception">
                The exception that was thrown when execution failed.
            </param>
            <param name="async">
                Indicates whether or not the command was executed asyncronously.
            </param>
            <param name="logParameterValues">
                Indicates whether or not the application allows logging of parameter values.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
            <param name="duration">
                The duration this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandErrorEventData.Exception">
            <summary>
                The exception that was thrown when execution failed.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> command events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Boolean,System.Boolean,System.DateTimeOffset)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="command">
                The <see cref="T:System.Data.Common.DbCommand" />.
            </param>
            <param name="executeMethod">
                The <see cref="T:System.Data.Common.DbCommand" /> method.
            </param>
            <param name="commandId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="async">
                Indicates whether or not the command was executed asyncronously.
            </param>
            <param name="logParameterValues">
                Indicates whether or not the application allows logging of parameter values.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData.Command">
            <summary>
                The <see cref="T:System.Data.Common.DbCommand" />.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData.CommandId">
            <summary>
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData.ConnectionId">
            <summary>
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData.ExecuteMethod">
            <summary>
                The <see cref="T:System.Data.Common.DbCommand" /> method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData.IsAsync">
            <summary>
                Indicates whether or not the operation is being executed asyncronously.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData.LogParameterValues">
            <summary>
                Indicates whether or not the application allows logging of parameter values.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData.StartTime">
            <summary>
                The start time of this event.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.CommandExecutedEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.CommandExecutedEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Object,System.Boolean,System.Boolean,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="command">
                The <see cref="T:System.Data.Common.DbCommand" /> that was executing when it failed.
            </param>
            <param name="executeMethod">
                The <see cref="T:System.Data.Common.DbCommand" /> method that was used to execute the command.
            </param>
            <param name="commandId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="result">
                The result of executing the operation.
            </param>
            <param name="async">
                Indicates whether or not the command was executed asyncronously.
            </param>
            <param name="logParameterValues">
                Indicates whether or not the application allows logging of parameter values.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
            <param name="duration">
                The duration this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.CommandExecutedEventData.Result">
            <summary>
                The result of executing the command.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEndEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload class for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> connection ending events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEndEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbConnection,System.Guid,System.Boolean,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="connection">
                The <see cref="T:System.Data.Common.DbConnection" />.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="async">
                Indicates whether or not the operation is happening asyncronously.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
            <param name="duration">
                The duration this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEndEventData.Duration">
            <summary>
                The duration this event.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionErrorEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionError" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionErrorEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbConnection,System.Guid,System.Exception,System.Boolean,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="connection">
                The <see cref="T:System.Data.Common.DbConnection" />.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="exception">
                The exception that was thrown when the connection failed.
            </param>
            <param name="async">
                Indicates whether or not the operation is happening asyncronously.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
            <param name="duration">
                The duration this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionErrorEventData.Exception">
            <summary>
                The exception that was thrown when the connection failed.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload base class for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> connection events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbConnection,System.Guid,System.Boolean,System.DateTimeOffset)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="connection">
                The <see cref="T:System.Data.Common.DbConnection" />.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="async">
                Indicates whether or not the operation is happening asyncronously.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData.Connection">
            <summary>
                The <see cref="T:System.Data.Common.DbConnection" />.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData.ConnectionId">
            <summary>
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData.IsAsync">
            <summary>
                Indicates whether or not the operation is happening asyncronously.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData.StartTime">
            <summary>
                The start time of this event.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData">
            <summary>
                <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderDisposing" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Guid,System.Int32,System.Int32,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                Constructs a <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderDisposing" />.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="command">
                The <see cref="T:System.Data.Common.DbCommand" /> that created the reader.
            </param>
            <param name="dataReader">
                The <see cref="T:System.Data.Common.DbDataReader" /> that is being disposed.
            </param>
            <param name="commandId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="recordsAffected">
                Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </param>
            <param name="readCount">
                Gets the number of read operations performed by this reader.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
            <param name="duration">
                The duration this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData.Command">
            <summary>
                The <see cref="T:System.Data.Common.DbCommand" /> that created the reader.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData.DataReader">
            <summary>
                The <see cref="T:System.Data.Common.DbDataReader" /> that is being disposed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData.CommandId">
            <summary>
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData.ConnectionId">
            <summary>
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData.RecordsAffected">
            <summary>
                Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData.ReadCount">
            <summary>
                Gets the number of read operations performed by this reader.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData.StartTime">
            <summary>
                The start time of this event.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData.Duration">
            <summary>
                The duration this event.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod">
            <summary>
                Enum used by <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData" />, an subclasses to indicate the
                method on <see cref="T:System.Data.Common.DbCommand" />
                being used to execute the command.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod.ExecuteNonQuery">
            <summary>
                The <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> or
                <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /> method.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod.ExecuteScalar">
            <summary>
                The <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> or
                <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync" /> method.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod.ExecuteReader">
            <summary>
                The <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> or
                <see cref="M:System.Data.Common.DbCommand.ExecuteReaderAsync" /> method.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.EntityTypeSchemaEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload base class for events that
                reference an entity type and a schema
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.EntityTypeSchemaEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="entityType"> The entity type. </param>
            <param name="schema"> The schema. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.EntityTypeSchemaEventData.EntityType">
            <summary>
                The entity type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.EntityTypeSchemaEventData.Schema">
            <summary>
                The schema.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.MigrationAssemblyEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> migrations assembly events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.MigrationAssemblyEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="migrator"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrator" /> in use. </param>
            <param name="migrationsAssembly"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly"/> in use. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.MigrationAssemblyEventData.MigrationsAssembly">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly"/> in use.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.MigrationEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> events of a specific migration.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.MigrationEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="migrator">
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrator" /> in use.
            </param>
            <param name="migration">
                The <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.MigrationEventData.Migration" /> being processed.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.MigrationEventData.Migration">
            <summary>
                The <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.MigrationEventData.Migration" /> being processed.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.MigrationScriptingEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> migration scripting events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.MigrationScriptingEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration,System.String,System.String,System.Boolean)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="migrator">
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrator" /> in use.
            </param>
            <param name="migration">
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" /> being processed.
            </param>
            <param name="fromMigration">
                The migration that scripting is starting from.
            </param>
            <param name="toMigration">
                The migration that scripting is going to.
            </param>
            <param name="idempotent">
                Indicates whether or not the script is idempotent.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.MigrationScriptingEventData.FromMigration">
            <summary>
                The migration that scripting is starting from.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.MigrationScriptingEventData.ToMigration">
            <summary>
                The migration that scripting is going to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.MigrationScriptingEventData.IsIdempotent">
            <summary>
                Indicates whether or not the script is idempotent.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.MigratorConnectionEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> migration connection events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.MigratorConnectionEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.Migrations.IMigrator,System.Data.Common.DbConnection,System.Guid)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="migrator">
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrator" /> in use.
            </param>
            <param name="connection">
                The <see cref="T:System.Data.Common.DbConnection" />.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.MigratorConnectionEventData.Connection">
            <summary>
                The <see cref="T:System.Data.Common.DbConnection" />.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.MigratorConnectionEventData.ConnectionId">
            <summary>
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.MigratorEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> migration events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.MigratorEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.Migrations.IMigrator)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="migrator">
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrator" /> in use.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.MigratorEventData.Migrator">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrator" /> in use.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId">
            <summary>
                <para>
                    Event IDs for relational events that correspond to messages logged to an <see cref="T:Microsoft.Extensions.Logging.ILogger" />
                    and events sent to a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
                <para>
                    These IDs are also used with <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" /> to configure the
                    behavior of warnings.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpening">
            <summary>
                <para>
                    A database connection is opening.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpened">
            <summary>
                <para>
                    A database connection has been opened.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEndEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosing">
            <summary>
                <para>
                    A database connection is closing.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosed">
            <summary>
                <para>
                    A database connection has been closed.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEndEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionError">
            <summary>
                <para>
                    A error occurred while opening or using a database connection.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionErrorEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting">
            <summary>
                <para>
                    A database command is executing.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.CommandEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted">
            <summary>
                <para>
                    A database command has been executed.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.CommandExecutedEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandError">
            <summary>
                <para>
                    An error occurred while a database command was executing.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.CommandErrorEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionStarted">
            <summary>
                <para>
                    A database transaction has been started.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionUsed">
            <summary>
                <para>
                    Entity Framework started using an already existing database transaction.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionCommitted">
            <summary>
                <para>
                    A database transaction has been committed.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEndEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionRolledBack">
            <summary>
                <para>
                    A database transaction has been rolled back.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEndEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionDisposed">
            <summary>
                <para>
                    A database transaction has been disposed.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionError">
            <summary>
                <para>
                    An error has occurred while using. committing, or rolling back a database transaction.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.TransactionErrorEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.AmbientTransactionWarning">
            <summary>
                <para>
                    An application may have expected an ambient transaction to be used when it was actually ignorred.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.ConnectionEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderDisposing">
            <summary>
                <para>
                    A database data reader has been disposed.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderDisposingEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrateUsingConnection">
            <summary>
                <para>
                    Migrations is using a database connection.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.MigratorConnectionEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationReverting">
            <summary>
                <para>
                    A migration is being reverted.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.MigrationEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationApplying">
            <summary>
                <para>
                    A migration is being applied.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.MigrationEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationGeneratingDownScript">
            <summary>
                <para>
                    Migrations is generating a "down" script.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.MigrationScriptingEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationGeneratingUpScript">
            <summary>
                <para>
                    Migrations is generating an "up" script.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.MigrationScriptingEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationsNotApplied">
            <summary>
                <para>
                    Migrations weren't applied.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.MigratorEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationsNotFound">
            <summary>
                <para>
                    Migrations weren't found.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.MigrationAssemblyEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.QueryClientEvaluationWarning">
            <summary>
                <para>
                    Part of a query is being evaluated on the client instead of on the database server.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Query" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.QueryModelClientEvalEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.QueryPossibleUnintendedUseOfEqualsWarning">
            <summary>
                <para>
                    A query is using equals comparisons in a possibly unintended way.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Query" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.ExpressionEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.QueryPossibleExceptionWithAggregateOperator">
            <summary>
                <para>
                    A query is using a possibly throwing aggregate operation in a sub-query.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Query" /> category.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ModelValidationKeyDefaultValueWarning">
            <summary>
                <para>
                    A single database default column value has been set on a key column.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.PropertyEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.BoolWithDefaultWarning">
            <summary>
                <para>
                    A bool property is configured with a store-generated default.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.PropertyEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.SequenceEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload base class for events that
                reference a sequence.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.SequenceEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.Metadata.ISequence)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="sequence"> The sequence. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.SequenceEventData.Sequence">
            <summary>
                The sequence.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEndEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload base class for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> transaction end events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEndEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbTransaction,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="transaction">
                The <see cref="T:System.Data.Common.DbTransaction" />.
            </param>
            <param name="transactionId">
                A correlation ID that identifies the Entity Framework transaction being used.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
            <param name="duration">
                The duration this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEndEventData.Duration">
            <summary>
                The duration this event.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.TransactionErrorEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload base class for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> transaction error events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.TransactionErrorEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbTransaction,System.Guid,System.Guid,System.String,System.Exception,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="transaction">
                The <see cref="T:System.Data.Common.DbTransaction" />.
            </param>
            <param name="transactionId">
                A correlation ID that identifies the Entity Framework transaction being used.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="action">
                One of "Commit" or "Rollback".
            </param>
            <param name="exception">
                The exception that was thrown when the transaction failed.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
            <param name="duration">
                The duration this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.TransactionErrorEventData.Action">
            <summary>
                One of "Commit" or "Rollback".
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.TransactionErrorEventData.Exception">
            <summary>
                The exception that was thrown when the transaction failed.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData">
            <summary>
                The <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload base class for
                <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId" /> transaction events.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbTransaction,System.Guid,System.Guid,System.DateTimeOffset)">
            <summary>
                Constructs the event payload.
            </summary>
            <param name="eventDefinition"> The event definition. </param>
            <param name="messageGenerator"> A delegate that generates a log message for this event. </param>
            <param name="transaction">
                The <see cref="T:System.Data.Common.DbTransaction" />.
            </param>
            <param name="transactionId">
                A correlation ID that identifies the Entity Framework transaction being used.
            </param>
            <param name="connectionId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </param>
            <param name="startTime">
                The start time of this event.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData.Transaction">
            <summary>
                The <see cref="T:System.Data.Common.DbTransaction" />.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData.TransactionId">
            <summary>
                A correlation ID that identifies the Entity Framework transaction being used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData.ConnectionId">
            <summary>
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Diagnostics.TransactionEventData.StartTime">
            <summary>
                The start time of this event.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Executes the command with no results.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <returns> The number of rows affected. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with no results.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the number of rows affected.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Executes the command with a single scalar result.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a single scalar result.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyExtensions.ExecuteInTransaction(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Action,System.Func{System.Boolean},System.Data.IsolationLevel)">
            <summary>
                Executes the specified operation in a transaction. Allows to check whether
                the transaction has been rolled back if an error occurs during commit.
            </summary>
            <param name="strategy"> The strategy that will be used for the execution. </param>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="operation">
                A delegate representing an executable operation.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                The operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyExtensions.ExecuteInTransactionAsync(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task{System.Boolean}},System.Data.IsolationLevel)">
            <summary>
                Executes the specified asynchronous operation in a transaction. Allows to check whether
                the transaction has been rolled back if an error occurs during commit.
            </summary>
            <param name="strategy"> The strategy that will be used for the execution. </param>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="operation">
                A function that returns a started task.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                The operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyExtensions.ExecuteInTransactionAsync(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Data.IsolationLevel,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation in a transaction. Allows to check whether
                the transaction has been rolled back if an error occurs during commit.
            </summary>
            <param name="strategy"> The strategy that will be used for the execution. </param>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="operation">
                A function that returns a started task.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                The operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyExtensions.ExecuteInTransaction``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{``0},System.Func{System.Boolean},System.Data.IsolationLevel)">
            <summary>
                Executes the specified operation in a transaction and returns the result. Allows to check whether
                the transaction has been rolled back if an error occurs during commit.
            </summary>
            <param name="strategy"> The strategy that will be used for the execution. </param>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="operation">
                A delegate representing an executable operation that returns the result of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <typeparam name="TResult"> The return type of <paramref name="operation" />. </typeparam>
            <returns> The result from the operation. </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                The operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyExtensions.ExecuteInTransactionAsync``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Data.IsolationLevel,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation in a transaction and returns the result. Allows to check whether
                the transaction has been rolled back if an error occurs during commit.
            </summary>
            <param name="strategy"> The strategy that will be used for the execution. </param>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <typeparam name="TResult"> The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />. </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                The operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyExtensions.ExecuteInTransaction``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,``0,System.Action{``0},System.Func{``0,System.Boolean},System.Data.IsolationLevel)">
            <summary>
                Executes the specified operation in a transaction. Allows to check whether
                the transaction has been rolled back if an error occurs during commit.
            </summary>
            <param name="strategy"> The strategy that will be used for the execution. </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <param name="operation">
                A delegate representing an executable operation.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                The operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyExtensions.ExecuteInTransactionAsync``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,``0,System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Data.IsolationLevel,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation in a transaction. Allows to check whether
                the transaction has been rolled back if an error occurs during commit.
            </summary>
            <param name="strategy"> The strategy that will be used for the execution. </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <param name="operation">
                A function that returns a started task.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                The operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyExtensions.ExecuteInTransaction``2(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,``0,System.Func{``0,``1},System.Func{``0,System.Boolean},System.Data.IsolationLevel)">
            <summary>
                Executes the specified operation in a transaction and returns the result. Allows to check whether
                the transaction has been rolled back if an error occurs during commit.
            </summary>
            <param name="strategy"> The strategy that will be used for the execution. </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <param name="operation">
                A delegate representing an executable operation that returns the result of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The return type of <paramref name="operation" />. </typeparam>
            <returns> The result from the operation. </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                The operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyExtensions.ExecuteInTransactionAsync``2(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,``0,System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Data.IsolationLevel,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation and returns the result. Allows to check whether
                the transaction has been rolled back if an error occurs during commit.
            </summary>
            <param name="strategy"> The strategy that will be used for the execution. </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />. </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                The operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.BoolTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Boolean" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.BoolTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.BoolTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.BoolTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.BoolTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper">
            <summary>
                <para>
                    Determines the type mapping to use for byte array properties.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.#ctor(System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})">
            <summary>
                Initialized a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper" /> class.
            </summary>
            <param name="maxBoundedLength"> Maximum length of data that can be stored in a byte array property. </param>
            <param name="defaultMapping"> Default mapping to be used. </param>
            <param name="unboundedMapping"> Mapping to be used for properties with no length specified. </param>
            <param name="keyMapping"> Mapping to be used for key properties. </param>
            <param name="rowVersionMapping"> Mapping to be used for properties being used as a row version. </param>
            <param name="createBoundedMapping"> Function to create a mapping for a property with a given length. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.MaxBoundedLength">
            <summary>
                Gets the maximum length of data that can be stored in a byte array property
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.DefaultMapping">
            <summary>
                Gets the default mapping to be used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.UnboundedMapping">
            <summary>
                Gets the mapping to be used for properties with no length specified
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.KeyMapping">
            <summary>
                Gets the mapping to be used for key properties
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.RowVersionMapping">
            <summary>
                Gets the mapping to be used for properties being used as a row version.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.CreateBoundedMapping">
            <summary>
                Gets a function to create a mapping for a property with a given length.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Gets the mapping for a property.
            </summary>
            <param name="rowVersion">
                A value indicating whether the property is being used as a row version.
            </param>
            <param name="keyOrIndex">
                A value indicating whether the property is being used as a key and/or index.
            </param>
            <param name="size">
                The configured length of the property, or null if it is unbounded.
            </param>
            <returns> The mapping to be used for the property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ByteArrayTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Byte" /> array type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ByteArrayTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType},System.Nullable{System.Int32})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ByteArrayTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ByteArrayTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ByteArrayTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ByteTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Byte" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ByteTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ByteTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ByteTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.CharTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Char" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.CharTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.CharTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.CharTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.CharTypeMapping.SqlLiteralFormatString">
            <summary>
                Gets the string format to be used to generate SQL literals of this type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DateTimeOffsetTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.DateTimeOffset" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DateTimeOffsetTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.DateTimeOffsetTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DateTimeOffsetTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DateTimeOffsetTypeMapping.SqlLiteralFormatString">
            <summary>
                Gets the string format to be used to generate SQL literals of this type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DateTimeTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.DateTime" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DateTimeTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.DateTimeTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DateTimeTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DateTimeTypeMapping.SqlLiteralFormatString">
            <summary>
                Gets the string format to be used to generate SQL literals of this type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)">
            <summary>
                Gets the underlying <see cref="T:System.Data.Common.DbTransaction" /> for the given transaction. Throws if the database being targeted
                is not a relational database that uses <see cref="T:System.Data.Common.DbTransaction" />.
            </summary>
            <param name="dbContextTransaction"> The transaction to get the <see cref="T:System.Data.Common.DbTransaction" /> from. </param>
            <returns> The underlying <see cref="T:System.Data.Common.DbTransaction" />. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DecimalTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Decimal" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DecimalTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.DecimalTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DecimalTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DecimalTypeMapping.SqlLiteralFormatString">
            <summary>
                Gets the string format to be used to generate SQL literals of this type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DoubleTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Double" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DoubleTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.DoubleTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DoubleTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DoubleTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.FloatTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Single" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.FloatTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.FloatTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.FloatTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.FloatTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.GuidTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Guid" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.GuidTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.GuidTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.GuidTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.GuidTypeMapping.SqlLiteralFormatString">
            <summary>
                Gets the string format to be used to generate SQL literals of this type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper">
            <summary>
                <para>
                    Determines the type mapping to use for byte array properties.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Gets the mapping for a property.
            </summary>
            <param name="rowVersion">
                A value indicating whether the property is being used as a row version.
            </param>
            <param name="keyOrIndex">
                A value indicating whether the property is being used as a key and/or index.
            </param>
            <param name="size">
                The configured length of the property, or null if it is unbounded.
            </param>
            <returns> The mapping to be used for the property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.InvariantName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.RelationalParameters">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.DbParameterCollectionExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.DbParameterCollectionExtensions.FormatParameters(System.Data.Common.DbParameterCollection,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.DbParameterCollectionExtensions.FormatParameter(System.String,System.Object,System.Boolean,System.Data.ParameterDirection,System.Data.DbType,System.Boolean,System.Int32,System.Byte,System.Byte)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter.InvariantName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.INamedConnectionStringResolver">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.INamedConnectionStringResolver.ResolveConnectionString(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.NamedConnectionStringResolver">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.NamedConnectionStringResolver.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.NamedConnectionStringResolver.ResolveConnectionString(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter.#ctor(System.String,System.Data.Common.DbParameter)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter.InvariantName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.Build(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Logger">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.CommandText">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Parameters">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder.ParameterBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder.Build">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder.BuildCore(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilderFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilderFactory.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilderFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilderFactory.CreateCore(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBase">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBase.InvariantName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBase.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBase.AddDbParameter(System.Data.Common.DbCommand,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Parameters">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMapper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddRawParameter(System.String,System.Data.Common.DbParameter)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RemappingUntypedRelationalValueBufferFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RemappingUntypedRelationalValueBufferFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalValueBufferFactoryDependencies,System.Collections.Generic.IReadOnlyList{System.Int32},System.Action{System.Object[]})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RemappingUntypedRelationalValueBufferFactory.Create(System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.TypedRelationalValueBufferFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypedRelationalValueBufferFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalValueBufferFactoryDependencies,System.Func{System.Data.Common.DbDataReader,System.Object[]})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypedRelationalValueBufferFactory.Create(System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedPropertyRelationalParameter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedPropertyRelationalParameter.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedPropertyRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Nullable{System.Boolean})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter.InvariantName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.UntypedRelationalValueBufferFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.UntypedRelationalValueBufferFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalValueBufferFactoryDependencies,System.Action{System.Object[]})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.UntypedRelationalValueBufferFactory.Create(System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IntTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Int32" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IntTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IntTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IntTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory">
            <summary>
                <para>
                    Creates instances of <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory.Create">
            <summary>
                Gets a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" />.
            </summary>
            <returns> The newly created <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" />. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder">
            <summary>
                <para>
                    Creates commands based on raw SQL command text.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String)">
            <summary>
                Creates a new command based on SQL command text.
            </summary>
            <param name="sql"> The command text. </param>
            <returns> The newly created command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                Creates a new command based on SQL command text.
            </summary>
            <param name="sql"> The command text. </param>
            <param name="parameters"> Parameters for the command. </param>
            <returns> The newly created command. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand">
            <summary>
                <para>
                    A command to be executed against a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CommandText">
            <summary>
                Gets the command text to be executed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.Parameters">
            <summary>
                Gets the parameters for the command.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Executes the command with no results.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <returns> The number of rows affected. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with no results.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the number of rows affected.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Executes the command with a single scalar result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a single scalar result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder">
            <summary>
                <para>
                    Builds a command to be executed against a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.ParameterBuilder">
            <summary>
                Builds the parameters associated with this command.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.Build">
            <summary>
                Creates the command.
            </summary>
            <returns> The newly created command. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" /> class.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory.Create">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" />.
            </summary>
            <returns> The newly created builder. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection">
            <summary>
                <para>
                    Represents a connection with a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString">
            <summary>
                Gets the connection string for the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection">
            <summary>
                Gets the underlying <see cref="T:System.Data.Common.DbConnection" /> used to connect to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionId">
            <summary>
                Gets the connection identifier.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout">
            <summary>
                Gets the timeout for executing a command against the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open(System.Boolean)">
            <summary>
                Opens the connection to the database.
            </summary>
            <param name="errorsExpected"> Indicate if the connection errors are expected and should be logged as debug message. </param>
            <returns> True if the underlying connection was actually opened; false otherwise. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken,System.Boolean)">
            <summary>
                Asynchronously opens the connection to the database.
            </summary>
            <param name="errorsExpected"> Indicate if the connection errors are expected and should be logged as debug message. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation, with a value of true if the connection
                was actually opened.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close">
            <summary>
                Closes the connection to the database.
            </summary>
            <returns> True if the underlying connection was actually closed; false otherwise. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled">
            <summary>
                Gets a value indicating whether the multiple active result sets feature is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CurrentTransaction">
            <summary>
                Gets the current transaction.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Semaphore">
            <summary>
                Gets a semaphore used to serialize access to this connection.
            </summary>
            <value>
                The semaphore.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.RegisterBufferable(Microsoft.EntityFrameworkCore.Query.Internal.IBufferable)">
            <summary>
                Registers a potentially bufferable active query.
            </summary>
            <param name="bufferable"> The bufferable query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.RegisterBufferableAsync(Microsoft.EntityFrameworkCore.Query.Internal.IBufferable,System.Threading.CancellationToken)">
            <summary>
                Asynchronously registers a potentially bufferable active query.
            </summary>
            <param name="bufferable"> The bufferable query. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <returns>
                A Task.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator">
            <summary>
                <para>
                    Performs database/schema creation, and other related operations.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.Exists">
            <summary>
                Determines whether the physical database exists. No attempt is made to determine if the database
                contains the schema for the current model.
            </summary>
            <returns>
                True if the database exists; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether the physical database exists. No attempt is made to determine if
                the database contains the schema for the current model.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation. The task result contains
                true if the database exists; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.Create">
            <summary>
                Creates the physical database. Does not attempt to populate it with any schema.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates the physical database. Does not attempt to populate it with any schema.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.Delete">
            <summary>
                Deletes the physical database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously deletes the physical database.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.CreateTables">
            <summary>
                Creates all tables for the current model in the database. No attempt is made
                to incrementally update the schema. It is assumed that none of the tables exist in the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates all tables for the current model in the database. No attempt is made
                to incrementally update the schema. It is assumed that none of the tables exist in the database.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter">
            <summary>
                <para>
                    A parameter in an <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" />. Note that this interface just represents a
                    placeholder for a parameter and not the actual value. This is because the same command can be
                    reused multiple times with different parameter values.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.InvariantName">
            <summary>
                The name of the parameter.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                Adds the parameter as a <see cref="T:System.Data.Common.DbParameter" /> to a <see cref="T:System.Data.Common.DbCommand" />.
            </summary>
            <param name="command"> The command to add the parameter to. </param>
            <param name="value"> The value to be assigned to the parameter. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Adds the parameter as a <see cref="T:System.Data.Common.DbParameter" /> to a <see cref="T:System.Data.Common.DbCommand" />.
            </summary>
            <param name="command"> The command to add the parameter to. </param>
            <param name="parameterValues"> The map of parameter values </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder">
            <summary>
                <para>
                    Builds a collection of <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters">
            <summary>
                The collection of parameters.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="typeMapping">
                The type mapping for the property that values for this parameter will come from.
            </param>
            <param name="nullable">
                A value indicating whether the parameter can contain null values.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="property"> The property that the type for this parameter will come from. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})">
            <summary>
                Adds a parameter that is ultimately represented as multiple <see cref="T:System.Data.Common.DbParameter" />s in the
                final command.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="buildAction">
                The action to add the multiple parameters that this placeholder represents.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="property">
                The property that values for this parameter will come from.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddRawParameter(System.String,System.Data.Common.DbParameter)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="dbParameter">
                The DbParameter being added.
            </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager">
            <summary>
                <para>
                    Creates and manages the current transaction for a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
                Begins a new transaction.
            </summary>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <returns> The newly created transaction. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
            <summary>
                Asynchronously begins a new transaction.
            </summary>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the newly created transaction.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)">
            <summary>
                Specifies an existing <see cref="T:System.Data.Common.DbTransaction" /> to be used for database operations.
            </summary>
            <param name="transaction"> The transaction to be used. </param>
            <returns>
                An instance of <see cref="T:System.Data.IDbTransaction" /> that wraps the provided transaction.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper">
            <summary>
                <para>
                    Maps .NET types to their corresponding relational database types.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given property.
                Returns null if no mapping is found.
            </summary>
            <param name="property"> The property to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)">
            <summary>
                Gets the relational database type for a given .NET type.
                Returns null if no mapping is found.
            </summary>
            <param name="clrType"> The type to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)">
            <summary>
                Gets the mapping that represents the given database type.
                Returns null if no mapping is found.
            </summary>
            <param name="storeType"> The type to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)">
            <summary>
                Ensures that the given type name is a valid type for the relational database.
                An exception is thrown if it is not a valid type.
            </summary>
            <param name="storeType"> The type to be validated. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ByteArrayMapper">
            <summary>
                Gets the mapper to be used for byte array properties.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.StringMapper">
            <summary>
                Gets the mapper to be used for string properties.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" /> type. An <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />
                    is tied to a particular result shape and will only create value buffers for that result shape. Instances
                    for different result shapes are created by <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory.Create(System.Data.Common.DbDataReader)">
            <summary>
                Creates a value buffer for the given <see cref="T:System.Data.Common.DbDataReader" />.
            </summary>
            <param name="dataReader"> The reader to create a value buffer for. </param>
            <returns> The newly created value buffer. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> type. <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />
                    instances are tied to a specific result shape. This factory is responsible for creating the
                    <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> for a given result shape.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory.Create(System.Collections.Generic.IReadOnlyList{System.Type},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />.
            </summary>
            <param name="valueTypes">
                The types of values to be returned from the value buffer.
            </param>
            <param name="indexMap">
                An ordered list of zero-based indexes to be read from the underlying result set (i.e. the first number in this
                list is the index of the underlying result set that will be returned when value 0 is requested from the
                value buffer).
            </param>
            <returns>
                The newly created <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper">
            <summary>
                <para>
                    Provides services to help with generation of SQL commands.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.StatementTerminator">
            <summary>
                The terminator to be used for SQL statements.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.BatchTerminator">
            <summary>
                The terminator to be used for batches of SQL statements.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.String)">
            <summary>
                Generates a valid parameter name for the given candidate name.
            </summary>
            <param name="name">
                The candidate name for the parameter.
            </param>
            <returns> A valid name based on the candidate name. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.Text.StringBuilder,System.String)">
            <summary>
                Writes a valid parameter name for the given candidate name.
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="name">
                The candidate name for the parameter.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeLiteral(System.String)">
            <summary>
                Generates the escaped SQL representation of a literal value.
            </summary>
            <param name="literal"> The value to be escaped. </param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeLiteral(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the escaped SQL representation of a literal value.
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="literal"> The value to be escaped. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeIdentifier(System.String)">
            <summary>
                Generates the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="identifier"> The identifier to be escaped. </param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="identifier"> The identifier to be escaped. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String)">
            <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="identifier"> The identifier to delimit. </param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="identifier"> The identifier to delimit. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String,System.String)">
            <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="name"> The identifier to delimit. </param>
            <param name="schema"> The schema of the identifier. </param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String,System.String)">
            <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="name"> The identifier to delimit. </param>
            <param name="schema"> The schema of the identifier. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper">
            <summary>
                <para>
                    Maps string property types to their corresponding relational database types.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Gets the relational database type for a string property.
            </summary>
            <param name="unicode"> A value indicating whether the property should handle Unicode data or not. </param>
            <param name="keyOrIndex"> A value indicating whether the property is part of a key or not. </param>
            <param name="maxLength"> The maximum length of data the property is configured to store, or null if no maximum is configured. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.LongTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Int64" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.LongTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.LongTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.LongTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator">
            <summary>
                <para>
                    Generates unique names for parameters.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator.GenerateNext">
            <summary>
                Generates the next unique parameter name.
            </summary>
            <returns> The generated name. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator.Reset">
            <summary>
                Resets the generator, meaning it can reuse previously generated names.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorFactory" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorDependencies.#ctor">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorFactory" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" /> type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorFactory" /> class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorFactory.Create">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" />.
            </summary>
            <returns> The newly created generator. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand">
            <summary>
                <para>
                    Represents a raw SQL command to be executed against a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand" /> class.
            </summary>
            <param name="relationalCommand"> The command to be executed. </param>
            <param name="parameterValues"> The values to be assigned to parameters. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand.RelationalCommand">
            <summary>
                Gets the command to be executed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand.ParameterValues">
            <summary>
                Gets the values to be assigned to parameters.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions">
            <summary>
                Extension methods for the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)">
            <summary>
                Appends an object to the command text.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="o"> The object to be written. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Appends a blank line to the command text.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)">
            <summary>
                Appends an object to the command text on a new line.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="o"> The object to be written. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)">
            <summary>
                Appends an object, that contains multiple lines of text, to the command text.
                Each line read from the object is appended on a new line.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="o"> The object to be written. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Increments the indent of subsequent lines.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Decrements the indent of subsequent lines.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Increases the indent of the command text.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Gets the length of the command text.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The length of the command text. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="typeMapping">
                The type mapping for the property that values for this parameter will come from.
            </param>
            <param name="nullable">
                A value indicating whether the parameter can contain null values.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="property"> The property that the type for this parameter will come from. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})">
            <summary>
                Adds a parameter that is ultimately represented as multiple <see cref="T:System.Data.Common.DbParameter" />s in the
                final command.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="buildAction">
                The action to add the multiple parameters that this placeholder represents.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddRawParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Data.Common.DbParameter)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="dbParameter"> The DbParameter being added. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="property">
                The property that values for this parameter will come from.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalConnection">
            <summary>
                <para>
                    Represents a connection with a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalConnection" /> class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionId">
            <summary>
                The unique identifier for this connection.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection">
            <summary>
                Creates a <see cref="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.DbConnection" /> to the database.
            </summary>
            <returns> The connection. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionString">
            <summary>
                Gets the connection string for the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.DbConnection">
            <summary>
                Gets the underlying <see cref="T:System.Data.Common.DbConnection" /> used to connect to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CurrentTransaction">
            <summary>
                Gets the current transaction.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommandTimeout">
            <summary>
                Gets the timeout for executing a command against the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction">
            <summary>
                Begins a new transaction.
            </summary>
            <returns> The newly created transaction. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously begins a new transaction.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the newly created transaction.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
                Begins a new transaction.
            </summary>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <returns> The newly created transaction. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
            <summary>
                Asynchronously begins a new transaction.
            </summary>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the newly created transaction.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)">
            <summary>
                Specifies an existing <see cref="T:System.Data.Common.DbTransaction" /> to be used for database operations.
            </summary>
            <param name="transaction"> The transaction to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction">
            <summary>
                Commits all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction">
            <summary>
                Discards all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(System.Boolean)">
            <summary>
                Opens the connection to the database.
            </summary>
            /// <param name="errorsExpected"> Indicate if the connection errors are expected and should be logged as debug message. </param>
            <returns> True if the underlying connection was actually opened; false otherwise. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken,System.Boolean)">
            <summary>
                Asynchronously opens the connection to the database.
            </summary>
            <param name="errorsExpected"> Indicate if the connection errors are expected and should be logged as debug message. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation, with a value of true if the connection
                was actually opened.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close">
            <summary>
                Closes the connection to the database.
            </summary>
            <returns> True if the underlying connection was actually closed; false otherwise. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled">
            <summary>
                Gets a value indicating whether the multiple active result sets feature is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Semaphore">
            <summary>
                Gets a semaphore used to serialize access to this connection.
            </summary>
            <value>
                The semaphore used to serialize access to this connection.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Microsoft#EntityFrameworkCore#Storage#IRelationalConnection#RegisterBufferable(Microsoft.EntityFrameworkCore.Query.Internal.IBufferable)">
            <summary>
                Registers a potentially bufferable active query.
            </summary>
            <param name="bufferable"> The bufferable query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Microsoft#EntityFrameworkCore#Storage#IRelationalConnection#RegisterBufferableAsync(Microsoft.EntityFrameworkCore.Query.Internal.IBufferable,System.Threading.CancellationToken)">
            <summary>
                Asynchronously registers a potentially bufferable active query.
            </summary>
            <param name="bufferable"> The bufferable query. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <returns>
                A Task.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalConnection" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.Internal.INamedConnectionStringResolver)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalConnection" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="contextOptions"> The options for the current context instance. </param>
            <param name="transactionLogger"> The logger to which transaction messages will be written. </param>
            <param name="connectionLogger"> The logger to which connection messages will be written. </param>
            <param name="connectionStringResolver"> A service for resolving a connection string from a name. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies.ContextOptions">
            <summary>
                The options for the current context instance.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies.TransactionLogger">
            <summary>
                The logger to which transaction messages will be written.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies.ConnectionLogger">
            <summary>
                The logger to which connection messages will be written.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies.ConnectionStringResolver">
            <summary>
                A service for resolving a connection string from a name.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies.With(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="contextOptions">
                A replacement for the current dependency of this type.
            </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection})">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="connectionLogger">
                A replacement for the current dependency of this type.
            </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction})">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="transactionLogger">
                A replacement for the current dependency of this type.
            </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies.With(Microsoft.EntityFrameworkCore.Storage.Internal.INamedConnectionStringResolver)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="connectionStringResolver">
                A replacement for the current dependency of this type.
            </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase">
            <summary>
                <para>
                    The main interaction point between a context and the database provider.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.#ctor(Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies,Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase" /> class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for the base of this service. </param>
            <param name="relationalDependencies"> Parameter object containing relational dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.RelationalDependencies">
            <summary>
                Parameter object containing relational dependencies for this service.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                Persists changes from the supplied entries to the database.
            </summary>
            <param name="entries"> Entries representing the changes to be persisted. </param>
            <returns> The number of state entries persisted to the database. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)">
            <summary>
                Asynchronously persists changes from the supplied entries to the database.
            </summary>
            <param name="entries"> Entries representing the changes to be persisted. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the
                number of entries persisted to the database.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator">
            <summary>
                <para>
                    Performs database/schema creation, and other related operations.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator" /> class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists">
            <summary>
                Determines whether the physical database exists. No attempt is made to determine if the database
                contains the schema for the current model.
            </summary>
            <returns>
                True if the database exists; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether the physical database exists. No attempt is made to determine if
                the database contains the schema for the current model.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation. The task result contains
                true if the database exists; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create">
            <summary>
                Creates the physical database. Does not attempt to populate it with any schema.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates the physical database. Does not attempt to populate it with any schema.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete">
            <summary>
                Deletes the physical database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously deletes the physical database.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables">
            <summary>
                Creates all tables for the current model in the database. No attempt is made
                to incrementally update the schema. It is assumed that none of the tables exist in the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates all tables for the current model in the database. No attempt is made
                to incrementally update the schema. It is assumed that none of the tables exist in the database.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands">
            <summary>
                Gets the commands that will create all tables from the model.
            </summary>
            <returns> The generated commands. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables">
            <summary>
                Determines whether the database contains any tables. No attempt is made to determine if
                tables belong to the current model or not.
            </summary>
            <returns> A value indicating whether any tables are present in the database. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether the database contains any tables. No attempt is made to determine if
                tables belong to the current model or not.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains
                a value indicating whether any tables are present in the database.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted">
            <summary>
                <para>
                    Ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does
                    exist then the database is deleted.
                </para>
                <para>
                    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by
                    the model for this context.
                </para>
            </summary>
            <returns>
                True if the database is deleted, false if it did not exist.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)">
            <summary>
                <para>
                    Asynchronously ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does
                    exist then the database is deleted.
                </para>
                <para>
                    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by
                    the model for this context.
                </para>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains true if the database is deleted,
                false if it did not exist.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated">
            <summary>
                Ensures that the database for the context exists. If it exists, no action is taken. If it does not
                exist then the database and all its schema are created. If the database exists, then no effort is made
                to ensure it is compatible with the model for this context.
            </summary>
            <returns>
                True if the database is created, false if it already existed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously ensures that the database for the context exists. If it exists, no action is taken. If it does not
                exist then the database and all its schema are created. If the database exists, then no effort is made
                to ensure it is compatible with the model for this context.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains true if the database is created,
                false if it already existed.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
            </summary>
            <param name="model"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" /> for the context this creator is being used with. </param>
            <param name="connection"> The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" /> to be used. </param>
            <param name="modelDiffer"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer" /> to be used. </param>
            <param name="migrationsSqlGenerator"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator" /> to be used. </param>
            <param name="migrationCommandExecutor"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor" /> to be used. </param>
            <param name="executionStrategyFactory">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" /> to be used. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.ModelDiffer">
            <summary>
                The model differ.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.MigrationsSqlGenerator">
            <summary>
                The Migrations SQL generator.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.Model">
            <summary>
                Gets the model for the context this creator is being used with.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.Connection">
            <summary>
                Gets the connection for the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.MigrationCommandExecutor">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor" /> to be used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.ExecutionStrategyFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" /> to be used.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.With(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="model"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="connection"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.With(Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="modelDiffer"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.With(Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="migrationsSqlGenerator"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.With(Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="migrationCommandExecutor"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreatorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="executionStrategyFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseDependencies.#ctor(Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer,Microsoft.EntityFrameworkCore.Update.IBatchExecutor,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="batchPreparer"> The <see cref="T:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" /> to be used. </param>
            <param name="batchExecutor"> The <see cref="T:Microsoft.EntityFrameworkCore.Update.IBatchExecutor" /> to be used. </param>
            <param name="connection"> The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" /> to be used. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseDependencies.BatchPreparer">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" /> to be used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseDependencies.BatchExecutor">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.IBatchExecutor" /> to be used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseDependencies.Connection">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" /> to be used.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseDependencies.With(Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="batchPreparer">
                A replacement for the current dependency of this type.
            </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseDependencies.With(Microsoft.EntityFrameworkCore.Update.IBatchExecutor)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="batchExecutor">
                A replacement for the current dependency of this type.
            </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="connection">
                A replacement for the current dependency of this type.
            </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader">
            <summary>
                <para>
                    Reads result sets from a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> class.
            </summary>
            <param name="connection"> The connection. </param>
            <param name="command"> The command that was executed. </param>
            <param name="reader"> The underlying reader for the result set. </param>
            <param name="commandId"> A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used. </param>
            <param name="logger"> The diagnostic source. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.#ctor(System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.DbDataReader">
            <summary>
                Gets the underlying reader for the result set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read">
            <summary>
                Calls Read on the underlying DbDataReader.
            </summary>
            <returns>true if there are more rows; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.ReadAsync(System.Threading.CancellationToken)">
            <summary>
                Calls Read on the underlying DbDataReader.
            </summary>
            <returns>true if there are more rows; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyFactory">
            <summary>
                Factory for creating <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> instances for use with relational
                database providers.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                Creates a new instance of this class with the given service dependencies.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyFactory.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyFactory.CreateDefaultStrategy(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                Creates or returns a cached instance of the default <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> for the
                current database provider.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalExecutionStrategyFactory.Create">
            <summary>
                Creates an <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> for the current database provider.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper">
            <summary>
                <para>
                    Provides services to help with generation of SQL commands.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies)">
            <summary>
                Initializes a new instance of the this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.StatementTerminator">
            <summary>
                The terminator to be used for SQL statements.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.BatchTerminator">
            <summary>
                The terminator to be used for batches of SQL statements.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateParameterName(System.String)">
            <summary>
                Generates a valid parameter name for the given candidate name.
            </summary>
            <param name="name">The candidate name for the parameter.</param>
            <returns>
                A valid name based on the candidate name.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateParameterName(System.Text.StringBuilder,System.String)">
            <summary>
                Writes a valid parameter name for the given candidate name.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="name">The candidate name for the parameter.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeLiteral(System.String)">
            <summary>
                Generates the escaped SQL representation of a literal value.
            </summary>
            <param name="literal">The value to be escaped.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeLiteral(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the escaped SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="literal">The value to be escaped.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeIdentifier(System.String)">
            <summary>
                Generates the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="identifier">The identifier to be escaped.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="identifier">The identifier to be escaped.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.String)">
            <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="identifier">The identifier to delimit.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="identifier">The identifier to delimit.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.String,System.String)">
            <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="name">The identifier to delimit.</param>
            <param name="schema">The schema of the identifier.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String,System.String)">
            <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="name">The identifier to delimit.</param>
            <param name="schema">The schema of the identifier.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies.#ctor">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction">
            <summary>
                <para>
                    A transaction against the database.
                </para>
                <para>
                    Instances of this class are typically obtained from <see cref="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction" /> and it is not designed
                    to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction" /> class.
            </summary>
            <param name="connection"> The connection to the database. </param>
            <param name="transaction"> The underlying <see cref="T:System.Data.Common.DbTransaction" />. </param>
            <param name="logger"> The logger to write to. </param>
            <param name="transactionOwned">
                A value indicating whether the transaction is owned by this class (i.e. if it can be disposed when this class is disposed).
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Commit">
            <summary>
                Commits all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Rollback">
            <summary>
                Discards all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper">
            <summary>
                <para>
                    Maps .NET types to their corresponding relational database types.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperDependencies)">
            <summary>
                Initializes a new instance of the this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings">
            <summary>
                Gets the mappings from .NET types to database types.
            </summary>
            <returns> The type mappings. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings">
            <summary>
                Gets the mappings from database types to .NET types.
            </summary>
            <returns> The type mappings. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets column type for the given property.
            </summary>
            <param name="property"> The property. </param>
            <returns> The name of the database type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)">
            <summary>
                Ensures that the given type name is a valid type for the relational database.
                An exception is thrown if it is not a valid type.
            </summary>
            <param name="storeType">The type to be validated.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.IsTypeMapped(System.Type)">
            <summary>
                Gets a value indicating whether the given .NET type is mapped.
            </summary>
            <param name="clrType"> The .NET type. </param>
            <returns> True if the type can be mapped; otherwise false. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given property.
                Returns null if no mapping is found.
            </summary>
            <param name="property">The property to get the mapping for.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)">
            <summary>
                Gets the relational database type for a given .NET type.
                Returns null if no mapping is found.
            </summary>
            <param name="clrType">The type to get the mapping for.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)">
            <summary>
                Gets the mapping that represents the given database type.
                Returns null if no mapping is found.
            </summary>
            <param name="storeType">The type to get the mapping for.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)">
            <summary>
                Creates the mapping for the given database type.
            </summary>
            <param name="storeType">The type to create the mapping for.</param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given property, using a separate type mapper if needed.
                This base implementation uses custom mappers for string and byte array properties.
                Returns null if no mapping is found.
            </summary>
            <param name="property">The property to get the mapping for.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper">
            <summary>
                Gets the mapper to be used for byte array properties.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper">
            <summary>
                Gets the mapper to be used for string properties.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given string property.
            </summary>
            <param name="property"> The property to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given byte array property.
            </summary>
            <param name="property"> The property to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating whether the given property should use a database type that is suitable for key properties.
            </summary>
            <param name="property"> The property to get the mapping for. </param>
            <returns> True if the property is a key, otherwise false. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperDependencies.#ctor">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions">
            <summary>
                Extension methods for the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Object)">
            <summary>
                Gets the relational database type for a given object, throwing if no mapping is found.
            </summary>
            <param name="typeMapper"> The type mapper. </param>
            <param name="value"> The object to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for a given property, throwing if no mapping is found.
            </summary>
            <param name="typeMapper"> The type mapper. </param>
            <param name="property"> The property to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)">
            <summary>
                Gets the relational database type for a given .NET type, throwing if no mapping is found.
            </summary>
            <param name="typeMapper"> The type mapper. </param>
            <param name="clrType"> The type to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.String)">
            <summary>
                Gets the mapping that represents the given database type, throwing if no mapping is found.
            </summary>
            <param name="typeMapper"> The type mapper. </param>
            <param name="typeName"> The type to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.NullMapping">
            <summary>
                Gets the mapping to be used when the only piece of information is that there is a null value.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type,System.Nullable{System.Data.DbType},System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="clrType"> The .NET type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
            <param name="unicode"> A value indicating whether the type should handle Unicode data or not. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.StoreType">
            <summary>
                Gets the name of the database type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.ClrType">
            <summary>
                Gets the .NET type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.DbType">
            <summary>
                Gets the <see cref="T:System.Data.DbType" /> to be used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.IsUnicode">
            <summary>
                Gets a value indicating whether the type should handle Unicode data or not.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Size">
            <summary>
                Gets the size of data the property is configured to store, or null if no size is configured.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.SqlLiteralFormatString">
            <summary>
                Gets the string format to be used to generate SQL literals of this type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.CreateParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Nullable{System.Boolean})">
            <summary>
                Creates a <see cref="T:System.Data.Common.DbParameter" /> with the appropriate type information configured.
            </summary>
            <param name="command"> The command the parameter should be created on. </param>
            <param name="name"> The name of the parameter. </param>
            <param name="value"> The value to be assigned to the parameter. </param>
            <param name="nullable"> A value indicating whether the parameter should be a nullable type. </param>
            <returns> The newly created parameter. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                Configures type information of a <see cref="T:System.Data.Common.DbParameter" />.
            </summary>
            <param name="parameter"> The parameter to be configured. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.GenerateSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a non-null literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalValueBufferFactoryDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Storage.Internal.TypedRelationalValueBufferFactory" />
                    and <see cref="T:Microsoft.EntityFrameworkCore.Storage.Internal.UntypedRelationalValueBufferFactory" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.SByteTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.SByte" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.SByteTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.SByteTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.SByteTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ShortTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.Int16" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ShortTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ShortTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ShortTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper">
            <summary>
                <para>
                    Maps string property types to their corresponding relational database types.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.#ctor(System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping},System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper" /> class.
            </summary>
            <param name="maxBoundedAnsiLength"> The maximum length of a bounded ANSI string. </param>
            <param name="defaultAnsiMapping"> The default mapping of an ANSI string. </param>
            <param name="unboundedAnsiMapping"> The mapping for an unbounded ANSI string. </param>
            <param name="keyAnsiMapping"> The mapping for an ANSI string that is part of a key. </param>
            <param name="createBoundedAnsiMapping"> The function to create a mapping for a bounded ANSI string. </param>
            <param name="maxBoundedUnicodeLength"> The maximum length of a bounded Unicode string. </param>
            <param name="defaultUnicodeMapping"> The default mapping of a Unicode string. </param>
            <param name="unboundedUnicodeMapping"> The mapping for an unbounded Unicode string. </param>
            <param name="keyUnicodeMapping"> The mapping for a Unicode string that is part of a key. </param>
            <param name="createBoundedUnicodeMapping"> The function to create a mapping for a bounded Unicode string. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.MaxBoundedAnsiLength">
            <summary>
                Gets the maximum length of a bounded ANSI string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.DefaultAnsiMapping">
            <summary>
                Gets the default mapping of an ANSI string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.UnboundedAnsiMapping">
            <summary>
                Gets the mapping for an unbounded ANSI string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.KeyAnsiMapping">
            <summary>
                Gets the mapping for an ANSI string that is part of a key.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.CreateBoundedAnsiMapping">
            <summary>
                Gets the function to create a mapping for a bounded ANSI string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.MaxBoundedUnicodeLength">
            <summary>
                Gets the maximum length of a bounded Unicode string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.DefaultUnicodeMapping">
            <summary>
                Gets the default mapping of a Unicode string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.UnboundedUnicodeMapping">
            <summary>
                Gets the mapping for an unbounded Unicode string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.KeyUnicodeMapping">
            <summary>
                Gets the mapping for a Unicode string that is part of a key.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.CreateBoundedUnicodeMapping">
            <summary>
                Gets the function to create a mapping for a bounded Unicode string.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Gets the relational database type for a string property.
            </summary>
            <param name="unicode">A value indicating whether the property should handle Unicode data or not.</param>
            <param name="keyOrIndex">A value indicating whether the property is part of a key or not.</param>
            <param name="maxLength">The maximum length of data the property is configured to store, or null if no maximum is configured.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.StringTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.String" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.StringTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType},System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.StringTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
            <param name="unicode"> A value indicating whether the type should handle Unicode data or not. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.StringTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.StringTypeMapping.EscapeSqlLiteral(System.String)">
            <summary>
                Generates the escaped SQL representation of a literal value.
            </summary>
            <param name="literal">The value to be escaped.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.StringTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.TimeSpanTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.TimeSpan" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.TimeSpanTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.TimeSpanTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.TimeSpanTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.TimeSpanTypeMapping.SqlLiteralFormatString">
            <summary>
                Gets the string format to be used to generate SQL literals of this type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.TypedRelationalValueBufferFactoryFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> type. <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />
                    instances are tied to a specific result shape. This factory is responsible for creating the
                    <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> for a given result shape.
                </para>
                <para>
                    This factory results in value buffers that use they strongly typed APIs to read back individual values from the
                    underlying <see cref="T:System.Data.Common.DbDataReader" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.TypedRelationalValueBufferFactoryFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalValueBufferFactoryDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypedRelationalValueBufferFactoryFactory" /> class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.TypedRelationalValueBufferFactoryFactory.Dependencies">
            <summary>
                Parameter object containing dependencies for this service.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.TypedRelationalValueBufferFactoryFactory.Create(System.Collections.Generic.IReadOnlyList{System.Type},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />.
            </summary>
            <param name="valueTypes">
                The types of values to be returned from the value buffer.
            </param>
            <param name="indexMap">
                An ordered list of zero-based indexes to be read from the underlying result set (i.e. the first number in this
                list is the index of the underlying result set that will be returned when value 0 is requested from the
                value buffer).
            </param>
            <returns>
                The newly created <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.UIntTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.UInt32" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.UIntTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.UIntTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.UIntTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ULongTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.UInt64" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ULongTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ULongTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ULongTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.UntypedRelationalValueBufferFactoryFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> type. <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />
                    instances are tied to a specific result shape. This factory is responsible for creating the
                    <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> for a given result shape.
                </para>
                <para>
                    This factory results in value buffers that use the untyped <see cref="M:System.Data.Common.DbDataReader.GetValues(System.Object[])" /> API to read
                    back individual values from the underlying <see cref="T:System.Data.Common.DbDataReader" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.UntypedRelationalValueBufferFactoryFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalValueBufferFactoryDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.UntypedRelationalValueBufferFactoryFactory" /> class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.UntypedRelationalValueBufferFactoryFactory.Dependencies">
            <summary>
                Parameter object containing dependencies for this service.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.UntypedRelationalValueBufferFactoryFactory.Create(System.Collections.Generic.IReadOnlyList{System.Type},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />.
            </summary>
            <param name="valueTypes">
                The types of values to be returned from the value buffer.
            </param>
            <param name="indexMap">
                An ordered list of zero-based indexes to be read from the underlying result set (i.e. the first number in this
                list is the index of the underlying result set that will be returned when value 0 is requested from the
                value buffer).
            </param>
            <returns>
                The newly created <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.UShortTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET <see cref="T:System.UInt16" /> type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.UShortTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.UShortTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.UShortTypeMapping.Clone(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.MethodInfoExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.MethodInfoExtensions.DisplayName(System.Reflection.MethodInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.CommandExecuting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Boolean,System.DateTimeOffset)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.CommandExecuted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Object,System.Boolean,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.CommandError(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.Boolean,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.ConnectionOpening(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.ConnectionOpened(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.ConnectionClosing(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.ConnectionClosed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.ConnectionError(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.TransactionStarted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.TransactionUsed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.TransactionCommitted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.TransactionRolledBack(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.TransactionDisposed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.TransactionError(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.String,System.Exception,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.AmbientTransactionWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.DataReaderDisposing(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset,System.TimeSpan)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.MigrateUsingConnection(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.MigrationReverting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.MigrationApplying(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.MigrationGeneratingDownScript(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration,System.String,System.String,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.MigrationGeneratingUpScript(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration,System.String,System.String,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.MigrationsNotApplied(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.MigrationsNotFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.QueryClientEvaluationWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Remotion.Linq.QueryModel,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.QueryPossibleUnintendedUseOfEqualsWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.QueryPossibleExceptionWithAggregateOperator(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.ModelValidationKeyDefaultValueWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.BoolWithDefaultWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.RelationalPropertyExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalPropertyExtensions.FormatColumns(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalPropertyExtensions.GetConfiguredColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.RelationalStrings">
            <summary>
            	This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ModificationCommandInvalidEntityState(System.Object)">
            <summary>
                Cannot save changes for an entity in state '{entityState}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UpdateConcurrencyException(System.Object,System.Object)">
            <summary>
                Database operation expected to affect {expectedRows} row(s) but actually affected {actualRows} row(s). Data may have been modified or deleted since entities were loaded. See http://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MultipleProvidersConfigured">
            <summary>
                Multiple relational database provider configurations found. A context can only be configured to use a single database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoProviderConfigured">
            <summary>
                No relational database providers are configured. Configure a database provider using OnConfiguring or by creating an ImmutableDbContextOptions with a database provider configured and passing it to the context.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConnectionAndConnectionString">
            <summary>
                Both an existing DbConnection and a connection string have been configured. When an existing DbConnection is used the connection string must be set on that connection.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoConnectionOrConnectionString">
            <summary>
                A relational store has been configured without specifying either the DbConnection or connection string to use.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NamedConnectionStringNotFound(System.Object)">
            <summary>
                A named connection string was used, but the name '{name}' was not found in the application's configuration. Note that named connection strings are only supported when using 'IConfiguration' and a service provider, such as in a typical ASP.NET Core application. See https://go.microsoft.com/fwlink/?linkid=850912 for more information.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnsupportedType(System.Object)">
            <summary>
                No mapping to a relational type can be found for the CLR type '{clrType}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalNotInUse">
            <summary>
                Relational-specific methods can only be used when the context is using a relational database provider.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogBoolWithDefaultWarning">
            <summary>
                The 'bool' property '{property}' on entity type '{entityType}' is configured with a database-generated default. This default will always be used when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead so that the default will only be used when the property value is 'null'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UpdateStoreException">
            <summary>
                An error occurred while updating the entries. See the inner exception for details.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TransactionAlreadyStarted">
            <summary>
                The connection is already in a transaction and cannot participate in another transaction.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TransactionAssociatedWithDifferentConnection">
            <summary>
                The specified transaction is not associated with the current connection. Only transactions associated with the current connection may be used.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerOpeningConnection">
            <summary>
                Opening connection to database '{database}' on server '{server}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerOpenedConnection">
            <summary>
                Opened connection to database '{database}' on server '{server}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerClosingConnection">
            <summary>
                Closing connection to database '{database}' on server '{server}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerClosedConnection">
            <summary>
                Closed connection to database '{database}' on server '{server}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerConnectionError">
            <summary>
                An error occurred using the connection to database '{database}' on server '{server}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerBeginningTransaction">
            <summary>
                Beginning transaction with isolation level '{isolationLevel}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerUsingTransaction">
            <summary>
                Using an existing transaction with isolation level '{isolationLevel}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerCommittingTransaction">
            <summary>
                Committing transaction.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerRollingbackTransaction">
            <summary>
                Rolling back transaction.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerDisposingTransaction">
            <summary>
                Disposing transaction.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerTransactionError">
            <summary>
                An error occurred using a transaction.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogDisposingDataReader">
            <summary>
                A data reader was disposed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.BadSequenceType">
            <summary>
                Invalid type for sequence. Valid types are 'Int64' (the default), 'Int32', 'Int16', and 'Byte'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.BadSequenceString">
            <summary>
                Unable to deserialize sequence from model metadata. See inner exception for details.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MigrationNotFound(System.Object)">
            <summary>
                The migration '{migrationName}' was not found.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnknownOperation(System.Object,System.Object)">
            <summary>
                The current migration SQL generator '{sqlGeneratorType}' is unable to generate SQL for operations of type '{operationType}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidCommandTimeout">
            <summary>
                The specified CommandTimeout value is not valid. It must be a positive number.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidMaxBatchSize">
            <summary>
                The specified MaxBatchSize value is not valid. It must be a positive number.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnableToDiscriminate(System.Object)">
            <summary>
                Unable to materialize entity of type '{entityType}'. No discriminators were matched.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorPropertyMustBeOnRoot(System.Object)">
            <summary>
                A discriminator property cannot be set for the entity type '{entityType}' because it is not the root of an inheritance hierarchy.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorPropertyNotFound(System.Object,System.Object)">
            <summary>
                Unable to set property '{property}' as a discriminator for entity type '{entityType}' because it is not a property of '{entityType}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogAmbientTransaction">
            <summary>
                An ambient transaction has been detected. Entity Framework Core does not support ambient transactions. See http://go.microsoft.com/fwlink/?LinkId=800142
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogPossibleUnintendedUseOfEquals">
            <summary>
                Possible unintended use of method Equals(object) for arguments of different types in expression '{expression}'. This comparison will always return 'false'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogQueryPossibleExceptionWithAggregateOperator">
            <summary>
                Possible unintended use of a potentially throwing aggregate method (Min, Max, Average) in a subquery. Client evaluation will be used and operator will throw if no data exists. Changing the subquery result type to a nullable type will allow full translation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.StoredProcedureIncludeNotSupported">
            <summary>
                The Include operation is not supported when calling a stored procedure.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogGeneratingDown">
            <summary>
                Generating down script for migration '{migration}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogGeneratingUp">
            <summary>
                Generating up script for migration '{migration}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogApplyingMigration">
            <summary>
                Applying migration '{migration}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRevertingMigration">
            <summary>
                Reverting migration '{migration}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogMigrating">
            <summary>
                Migrating using database '{database}' on server '{dataSource}'.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogNoMigrationsApplied">
            <summary>
                No migrations were applied. The database is already up to date.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogNoMigrationsFound">
            <summary>
                No migrations were found in assembly '{migrationsAssembly}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.FromSqlMissingColumn(System.Object)">
            <summary>
                The required column '{column}' was not present in the results of a 'FromSql' operation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableKeyNameMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and the name '{keyName}' of the primary key {primaryKey} does not match the name '{otherName}' of the primary key {otherPrimaryKey}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableNoRelationship(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and there is no relationship between the primary key {primaryKey} and the primary key {otherPrimaryKey}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableDerivedPrincipal(System.Object,System.Object,System.Object,System.Object)">
            <summary>
                Cannot use table '{table}' for entity type '{dependentType}' since it has a relation ship to a derived entity type '{principalType}'. Either point the relationship to the base type '{rootType}' or map '{dependentType}' to a different table.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogKeyHasDefaultValue">
            <summary>
                Property '{property}' on entity type '{entityType}' is part of a primary or alternate key but has a constant default value set. Constant default values are not useful for primary or alternate keys since these properties must always have non-null unqiue values.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorEntityTypeNotDerived(System.Object,System.Object)">
            <summary>
                Cannot configure the discriminator value for entity type '{entityType}' because it doesn't derive from '{rootEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorValueIncompatible(System.Object,System.Object,System.Object)">
            <summary>
                Cannot set discriminator value '{value}' for discriminator property '{discriminator}' because it is not assignable to property of type '{discriminatorType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorForValue(System.Object,System.Object)">
            <summary>
                Cannot set discriminator value for entity type '{entityType}' because the root entity type '{rootEntityType}' doesn't have a discriminator property set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorProperty(System.Object)">
            <summary>
                The entity type '{entityType}' is part of a hierarchy, but does not have a discriminator property configured.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorValue(System.Object)">
            <summary>
                The entity type '{entityType}' is part of a hierarchy, but does not have a discriminator value configured.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogClientEvalWarning">
            <summary>
                The LINQ expression '{expression}' could not be translated and will be evaluated locally.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MissingParameterValue(System.Object)">
            <summary>
                No value provided for required parameter '{parameter}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ParameterNotObjectArray(System.Object)">
            <summary>
                Cannot use the value provided for parameter '{parameter}' because it isn't assignable to type object[].
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerExecutingCommand">
            <summary>
                Executing DbCommand [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerExecutedCommand">
            <summary>
                Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerCommandFailed">
            <summary>
                Failed executing DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameDataTypeMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different data types ('{dataType1}' and '{dataType2}').
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoActiveTransaction">
            <summary>
                The connection does not have any active transactions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowUpdateTypes(System.Object,System.Object,System.Object,System.Object)">
            <summary>
                An instance of entity type '{firstEntityType}' is marked as '{firstState}', but an instance of entity type '{secondEntityType}' is marked as '{secondState}' and both are mapped to the same row. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowUpdateTypesSensitive(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The instance of entity type '{firstEntityType}' with the key value '{firstKeyValue}' is marked as '{firstState}', but the instance of entity type '{secondEntityType}' with the key value '{secondKeyValue}' is marked as '{secondState}' and both are mapped to the same row.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowValues(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                An instance of entity type '{firstEntityType}' and an instance of entity type '{secondEntityType}' are mapped to the same row, but have different property values for the properties {firstProperties} and {secondProperties} mapped to {columns}. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting values.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowValuesSensitive(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The instance of entity type '{firstEntityType}' and the instance of entity type '{secondEntityType}' are mapped to the same row with the key value '{keyValue}', but have different property values '{firstConflictingValues}' and '{secondConflictingValues}' mapped to {columns}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingOriginalRowValues(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                An instance of entity type '{firstEntityType}' and an instance of entity type '{secondEntityType}' are mapped to the same row, but have different original property values for the properties {firstProperties} and {secondProperties} mapped to {columns}. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting values.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingOriginalRowValuesSensitive(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The instance of entity type '{firstEntityType}' and the instance of entity type '{secondEntityType}' are mapped to the same row with the key value '{keyValue}', but have different original property values '{firstConflictingValues}' and '{secondConflictingValues}' mapped to {columns}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SharedRowEntryCountMismatch(System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The entity of '{entityType}' is sharing the table '{tableName}' with '{missingEntityType}', but there is no entity of this type with the same key value that has been marked as '{state}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SharedRowEntryCountMismatchSensitive(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The entity of '{entityType}' is sharing the table '{tableName}' with '{missingEntityType}', but there is no entity of this type with the same key value '{keyValue}' that has been marked as '{state}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncorrectDefaultValueType(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                Cannot set default value '{value}' of type '{valueType}' on property '{property}' of type '{propertyType}' in entity type '{entityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateDiscriminatorValue(System.Object,System.Object,System.Object)">
            <summary>
                The discriminator value for '{entityType1}' is '{discriminatorValue}' which is the same for '{entityType2}'. Every concrete entity type in the hierarchy needs to have a unique discriminator value.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameNullabilityMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured with different nullability.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameComputedSqlMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different computed values ('{value1}' and '{value2}').
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameDefaultSqlMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different default values ('{value1}' and '{value2}').
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingColumnServerGeneration(System.Object,System.Object,System.Object)">
            <summary>
                {conflictingConfiguration} cannot be set for '{property}', because {existingConfiguration} is already set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but use different columns ({columnNames1} and {columnNames2}).
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyDeleteBehaviorMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but with different delete behavior ('{deleteBehavior1}' and '{deleteBehavior2}').
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyPrincipalColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but referencing different principal columns ({principalColumnNames1} and {principalColumnNames2}).
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyPrincipalTableMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but referencing different principal tables ('{principalTable1}' and '{principalTable2}').
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyUniquenessMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but with different uniqueness.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateIndexColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}' but with different columns ({columnNames1} and {columnNames2}).
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateIndexUniquenessMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}' but with different uniqueness.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateKeyColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The keys {key1} on '{entityType1}' and {key2} on '{entityType2}' are both mapped to '{table}.{keyName}' but with different columns ({columnNames1} and {columnNames2}).
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnsupportedPropertyType(System.Object,System.Object,System.Object)">
            <summary>
                No mapping to a relational type can be found for property '{entity}.{property}' with the CLR type '{clrType}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoElements">
            <summary>
                Sequence contains no elements.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerConnectionErrorAsDebug">
            <summary>
                An error occurred using the connection to database '{database}' on server '{server}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionInvalidReturnType(System.Object,System.Object)">
            <summary>
                The DbFunction '{function}' has an invalid return type '{type}'. Ensure that the return type can be mapped by the current provider.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionNameEmpty(System.Object)">
            <summary>
                The DbFunction '{function}' has no name set. Name is a required property of a DbFunction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionInvalidParameterType(System.Object,System.Object,System.Object)">
            <summary>
                The parameter '{parameter}' for the DbFunction '{function}' has an invalid type '{type}'. Ensure the parameter type can be mapped by the current provider.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionMethodMustBeStatic(System.Object)">
            <summary>
                The DbFunction '{function}' must be a static method. Non-static methods are not supported.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionGenericMethodNotSupported(System.Object)">
            <summary>
                The DbFunction '{function}' is generic. Generic methods are not supported.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionExpressionIsNotMethodCall(System.Object)">
            <summary>
                The provided DbFunction expression '{expression}' is invalid. The expression should be a lambda expression containing a single method call to the target static method. Default values can be provided as arguments if required. E.g. () =&gt; SomeClass.SomeMethod(null, 0)
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder">
            <summary>
                <para>
                    A builder API designed for relational database providers to use when registering services.
                </para>
                <para>
                    Providers should create an instance of this class, use its methods to register
                    services, and then call <see cref="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.TryAddCoreServices" /> to fill out the remaining Entity
                    Framework services.
                </para>
                <para>
                    Entity Framework ensures that services are registered with the appropriate scope. In some cases a provider
                    may register a service with a different scope, but great care must be taken that all its dependencies
                    can handle the new scope, and that it does not cause issue for services that depend on it.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.RelationalServices">
            <summary>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
                <para>
                    This dictionary is exposed for testing and provider-validation only.
                    It should not be used from application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Used by relational database providers to create a new <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder" /> for
                registration of provider services.
            </summary>
            <param name="serviceCollection"> The collection to which services will be registered. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.GetServiceCharacteristics(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.TryAddCoreServices">
            <summary>
                Registers default implementations of all services, including relational services, not already
                registered by the provider. Relational database providers must call this method as the last
                step of service registration--that is, after all provider services have been registered.
            </summary>
            <returns> This builder, such that further calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2">
            <summary>
                <para>
                    Allows relational database specific configuration to be performed on <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />.
                </para>
                <para>
                    Instances of this class are typically returned from methods that configure the context to use a
                    particular relational database provider.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.#ctor(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2" /> class.
            </summary>
            <param name="optionsBuilder"> The core options builder. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.OptionsBuilder">
            <summary>
                Gets the core options builder.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.MaxBatchSize(System.Int32)">
            <summary>
                Configures the maximum number of statements that will be included in commands sent to the database
                during <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
            </summary>
            <param name="maxBatchSize"> The maximum number of statements. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.CommandTimeout(System.Nullable{System.Int32})">
            <summary>
                Configures the wait time (in seconds) before terminating the attempt to execute a command and generating an error.
            </summary>
            <param name="commandTimeout"> The time in seconds to wait for the command to execute. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.MigrationsAssembly(System.String)">
            <summary>
                Configures the assembly where migrations are maintained for this context.
            </summary>
            <param name="assemblyName"> The name of the assembly. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.MigrationsHistoryTable(System.String,System.String)">
            <summary>
                Configures the name of the table used to record which migrations have been applied to the database.
            </summary>
            <param name="tableName"> The name of the table. </param>
            <param name="schema"> The schema of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.UseRelationalNulls(System.Boolean)">
            <summary>
                Configures the context to use relational database semantics when comparing null values. By default,
                Entity Framework will use C# semantics for null values, and generate SQL to compensate for differences
                in how the database handles nulls.
            </summary>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.ExecutionStrategy(System.Func{Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy})">
            <summary>
                Configures the context to use the provided <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <param name="getExecutionStrategy"> A function that returns a new instance of an execution strategy. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.WithOption(System.Func{`1,`1})">
            <summary>
                Sets an option by cloning the extension used to store the settings. This ensures the builder
                does not modify options that are already in use elsewhere.
            </summary>
            <param name="setAction"> An action to set the option. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelCustomizer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelCustomizer.FindDbFunctions(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelCustomizer.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator">
            <summary>
                The validator that enforces rules common for all relational providers.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ModelValidatorDependencies,Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
            <param name="relationalDependencies"> Parameter object containing relational dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.RelationalDependencies">
            <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator" />
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.TypeMapper">
            <summary>
                Gets the type mapper.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Validates a model, throwing an exception if any errors are found.
            </summary>
            <param name="model"> The model to validate. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateDbFunctions(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateBoolsWithDefaults(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateDataTypes(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateDefaultValuesOnKeys(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedTableCompatibility(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedTableCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedColumnsCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedForeignKeysCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedIndexesCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedKeysCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateInheritanceMapping(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="typeMapper"> The type mapper. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies.TypeMapper">
            <summary>
                Gets the type mapper.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="typeMapper"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.RelationalOptionsExtension.LogFragment">
            <summary>
                Creates a message fragment for logging typically containing information about 
                any useful non-default options that have been configured.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionBuilder">
            <summary>
                <para>
                    Provides a simple API for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction" />.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionBuilder.HasName(System.String)">
            <summary>
                Sets the name of the database function.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionBuilder.HasSchema(System.String)">
            <summary>
                Sets the schema of the database function.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionBuilder.HasTranslation(System.Func{System.Collections.Generic.IReadOnlyCollection{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression})">
            <summary>
                <para>
                    Sets a callback that will be invoked to perform custom translation of this
                    function. The callback takes a collection of expressions corresponding to
                    the parameters passed to the function call. The callback should return an
                    expression representing the desired translation.
                </para>
                <para>
                    See https://go.microsoft.com/fwlink/?linkid=852477 for more information.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder,System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.DiscriminatorConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.DiscriminatorConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalColumnAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalColumnAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.ComponentModel.DataAnnotations.Schema.ColumnAttribute,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilderDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder" /> class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention``2(System.Collections.Generic.IList{``0},``1)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilderDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilderDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilderDependencies.TypeMapper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilderDependencies.Context">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilderDependencies.SetFinder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilderDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="typeMapper"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilderDependencies.With(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="currentContext"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilderDependencies.With(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="setFinder"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalTableAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalTableAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.ComponentModel.DataAnnotations.Schema.TableAttribute)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalTypeMappingConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalTypeMappingConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalTypeMappingConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.SharedTableConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.SharedTableConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.SharedTableConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.SharedTableConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.SharedTableConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.TableNameFromDbSetConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.TableNameFromDbSetConvention.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.TableNameFromDbSetConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IDbFunction">
            <summary>
                Represents a relational database function in an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IDbFunction.FunctionName">
            <summary>
                The name of the function in the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IDbFunction.Schema">
            <summary>
                The schema of the function in the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IDbFunction.MethodInfo">
            <summary>
                The CLR method which maps to the function in the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IDbFunction.Translation">
            <summary>
               A translation callback for performing custom translation of the method call into a SQL expression fragment.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction.FunctionName">
            <summary>
                The name of the function in the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction.Schema">
            <summary>
                The schema of the function in the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction.Translation">
            <summary>
               A translation callback for performing custom translation of the method call into a SQL expression fragment.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction.Schema">
            <summary>
                The schema where the function lives in the underlying datastore.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction.FunctionName">
            <summary>
                The name of the function in the underlying datastore.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction.MethodInfo">
            <summary>
                The method which maps to the function in the underlying datastore
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction.Translation">
            <summary>
                A method for converting a method call into sql.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalDbFunctionBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalDbFunctionBuilder.HasSchema(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalDbFunctionBuilder.HasName(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalDbFunctionBuilder.HasTranslation(System.Func{System.Collections.Generic.IReadOnlyCollection{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.ConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.MetadataBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.SetAnnotation(System.String,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.CanSetAnnotation(System.String,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.DefaultDiscriminatorName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.Annotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.EntityTypeBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.GetAnnotations(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.GetAnnotations(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.ToTable(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.ToSchema(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.ToTable(System.String,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminator(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminator(System.String,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminator(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminatorValue(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyBuilderAnnotations.HasConstraintName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexBuilderAnnotations.HasName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexBuilderAnnotations.HasFilter(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalKeyBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalKeyBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalKeyBuilderAnnotations.HasName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModelBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModelBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModelBuilderAnnotations.HasDefaultSchema(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.Annotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.ShouldThrowOnConflict">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.ShouldThrowOnInvalidConfiguration">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasColumnName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.CanSetColumnName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasColumnType(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasDefaultValueSql(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasComputedColumnSql(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasDefaultValue(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping.Schema">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping.EntityTypes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping.GetProperties">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping.GetKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping.GetIndexes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping.GetForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping.GetTableMappings(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames">
            <summary>
                Names for well-known relational model annotations. Applications should not use these names
                directly, but should instead use the 'Relational()' methods on <see cref="T:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions" />.
                They are exposed here for use by database providers and conventions.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.Prefix">
            <summary>
                The prefix used for any relational annotation.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.ColumnName">
            <summary>
                The name for column name annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.ColumnType">
            <summary>
                The name for column type annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.DefaultValueSql">
            <summary>
                The name for default value SQL expression annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.ComputedColumnSql">
            <summary>
                The name for compued value SQL expression annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.DefaultValue">
            <summary>
                The name for default value annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.TableName">
            <summary>
                The name for table name annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.Schema">
            <summary>
                The name for schema name annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.DefaultSchema">
            <summary>
                The name for default schema annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.Name">
            <summary>
                The name for constraint name annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.SequencePrefix">
            <summary>
                The prefix for serialzed sequence annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.DiscriminatorProperty">
            <summary>
                The name for discriminator property annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.DiscriminatorValue">
            <summary>
                The name for discriminator value annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.Filter">
            <summary>
                The name for filter annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.TypeMapping">
            <summary>
                The name for filter annotations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationNames.DbFunction">
            <summary>
               The name for DbFunction annotations.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies)">
            <summary>
                Initializes a new instance of this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult(System.Object)">
            <summary>
                Interprets the result of executing <see cref="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsSql" />.
            </summary>
            <returns>true if the table exists; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
            </summary>
            <param name="databaseCreator"> The database creator. </param>
            <param name="rawSqlCommandBuilder"> A command builder for building raw SQL commands. </param>
            <param name="connection"> The connection to the database. </param>
            <param name="options"> Options for the current context instance. </param>
            <param name="modelDiffer"> The model differ. </param>
            <param name="migrationsSqlGenerator"> The SQL generator for Migrations operations. </param>
            <param name="sqlGenerationHelper"> Helpers for generating update SQL. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.DatabaseCreator">
            <summary>
                The database creator.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.RawSqlCommandBuilder">
            <summary>
                A command builder for building raw SQL commands.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.Connection">
            <summary>
                The connection to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.Options">
            <summary>
                Options for the current context instance.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.ModelDiffer">
            <summary>
                The model differ.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.MigrationsSqlGenerator">
            <summary>
                The SQL generator for Migrations operations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.SqlGenerationHelper">
            <summary>
                Helpers for generating update SQL.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="databaseCreator"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="rawSqlCommandBuilder"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="connection"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.With(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="options"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.With(Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="modelDiffer"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.With(Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="migrationsSqlGenerator"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies.With(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="sqlGenerationHelper"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQuery(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.MigrationCommand},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQueryAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.MigrationCommand},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationExtensions.GetId(Microsoft.EntityFrameworkCore.Migrations.Migration)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsIdGenerator)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.Migrations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.ModelSnapshot">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.Assembly">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.FindMigrationId(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.CreateMigration(System.Reflection.TypeInfo,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsIdGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsIdGenerator.GetName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsIdGenerator.IsValidId(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsIdGenerator.GenerateId(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.TypeMapper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.MigrationsAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Sort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.String,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping,Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IIndex)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.ISequence,Microsoft.EntityFrameworkCore.Metadata.ISequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.ISequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.ISequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffCollection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,``0,System.Boolean}[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetColumns(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})">
            <summary>.Relational(
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetSchemas(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDefaultValue(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetSourceTables">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetTargetTables">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping,Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddDrop(Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping,Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSourceTable(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTargetTable(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTable(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.#ctor(Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly,Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository,Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.Migrate(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.GenerateScript(System.String,System.String,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.GenerateUpSql(Microsoft.EntityFrameworkCore.Migrations.Migration)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.GenerateDownSql(Microsoft.EntityFrameworkCore.Migrations.Migration,Microsoft.EntityFrameworkCore.Migrations.Migration)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.MigrationsAnnotationProvider.#ctor(Microsoft.EntityFrameworkCore.Migrations.MigrationsAnnotationProviderDependencies)">
            <summary>
                Initializes a new instance of this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.MigrationsAnnotationProviderDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationsAnnotationProvider" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.MigrationsAnnotationProviderDependencies.#ctor">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationsAnnotationProvider" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerator.Dependencies">
            <summary>
                Parameter object containing dependencies for this service.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerator" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
            </summary>
            <param name="commandBuilderFactory"> The command builder factory. </param>
            <param name="sqlGenerationHelper"> Helpers for SQL generation. </param>
            <param name="typeMapper"> The type mapper being used. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies.CommandBuilderFactory">
            <summary>
                The command builder factory.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies.SqlGenerationHelper">
            <summary>
                Helpers for SQL generation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies.TypeMapper">
            <summary>
                The type mapper being used.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="commandBuilderFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="sqlGenerationHelper"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="typeMapper"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation.NewName">
            <summary>
                The new schema name or null if unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation.NewSchema">
            <summary>
                The new sequence name or null if unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation.NewSchema">
            <summary>
                The new schema name or null if unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation.NewName">
            <summary>
                The new table name or null if unchanged.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider">
            <summary>
                Provides reflection objects for late-binding to asynchronous relational query operations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.ShapedQueryMethod">
            <summary>
                The shaped query method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.DefaultIfEmptyShapedQueryMethod">
            <summary>
                The default if empty shaped query method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.QueryMethod">
            <summary>
                The query method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GetResultMethod">
            <summary>
                The get result method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupByMethod">
            <summary>
                The group by method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinMethod">
            <summary>
                The group join method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.InjectParametersMethod">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression">
            <summary>
                An alias expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.#ctor(System.String,System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of an AliasExpression.
            </summary>
            <param name="alias"> The alias. </param>
            <param name="expression"> The expression being aliased. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Alias">
            <summary>
                Gets the alias.
            </summary>
            <value>
                The alias.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression">
            <summary>
                The expression being aliased.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression" />. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression" />.)
            </summary>
            <returns> The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression" /> represents. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression" />.)
            </summary>
            <returns> The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Type" /> that represents the static type of the expression. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression">
            <summary>
                A column expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of a ColumnExpression.
            </summary>
            <param name="name"> The column name. </param>
            <param name="property"> The corresponding property. </param>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Table">
            <summary>
                The target table.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Property">
            <summary>
                The corresponding property.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Name">
            <summary>
                Gets the column name.
            </summary>
            <value>
                The column name.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns> The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns> The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Type" /> that represents the static type of the expression. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression">
            <summary>
                A column reference expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression,Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of a ColumnReferenceExpression.
            </summary>
            <param name="aliasExpression"> The referenced AliasExpression. </param>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression,Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of a ColumnReferenceExpression.
            </summary>
            <param name="columnExpression"> The referenced ColumnExpression. </param>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression,Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of a ColumnReferenceExpression.
            </summary>
            <param name="columnReferenceExpression"> The referenced ColumnReferenceExpression. </param>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Table">
            <summary>
                The target table.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Expression">
            <summary>
                The referenced expression.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Name">
            <summary>
                Gets the column name.
            </summary>
            <value>
                The column name.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Expression" /> represents. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Expression" />.)
            </summary>
            <returns> The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Type" /> that represents the static type of the expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Expression" />. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Expression" />.)
            </summary>
            <returns> The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression">
            <summary>
                Represents a SQL CROSS JOIN expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of a CrossJoinExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression">
            <summary>
                Represents a SQL CROSS JOIN LATERAL expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of CrossJoinLateralExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression">
            <summary>
                Represents a discriminator predicate.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.#ctor(System.Linq.Expressions.Expression,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new instance of a DiscriminatorPredicateExpression..
            </summary>
            <param name="predicate"> The predicate. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.QuerySource">
            <summary>
                Gets the query source.
            </summary>
            <value>
                The query source.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.CanReduce">
            <summary>
                Indicates that the node can be reduced to a simpler node. If this
                returns true, Reduce() can be called to produce the reduced form.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.Reduce">
            <summary>
                Reduces this node to a simpler expression. If CanReduce returns
                true, this should return a valid expression. This method is
                allowed to return another node which itself must be reduced.
            </summary>
            <returns>The reduced expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression">
            <summary>
                Represents a SQL EXISTS expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Creates a new instance of a ExistsExpression..
            </summary>
            <param name="subquery"> The subquery operand of the EXISTS expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Subquery">
            <summary>
                Gets the subquery operand of the EXISTS expression.
            </summary>
            <value>
                The subquery operand of the EXISTS expression.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression">
            <summary>
                Represents a SQL CAST expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.#ctor(System.Linq.Expressions.Expression,System.Type)">
            <summary>
                Creates a new instance of a ExplicitCastExpression..
            </summary>
            <param name="operand"> The operand. </param>
            <param name="type"> The target type. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.Operand">
            <summary>
                Gets the operand.
            </summary>
            <value>
                The operand.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression">
            <summary>
                Represents a FromSql expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.#ctor(System.String,System.Linq.Expressions.Expression,System.String,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new instance of a FromSqlExpression.
            </summary>
            <param name="sql"> The SQL. </param>
            <param name="arguments"> The arguments. </param>
            <param name="alias"> The alias. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.Sql">
            <summary>
                Gets the SQL.
            </summary>
            <value>
                The SQL.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.Arguments">
            <summary>
                Gets the arguments.
            </summary>
            <value>
                The arguments.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression">
            <summary>
                Represents a SQL IN expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.#ctor(System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})">
            <summary>
                Creates a new instance of InExpression.
            </summary>
            <param name="operand"> The operand. </param>
            <param name="values"> The values. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.#ctor(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Creates a new instance of InExpression.
            </summary>
            <param name="operand"> The operand. </param>
            <param name="subQuery"> The sub query. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Operand">
            <summary>
                Gets the operand.
            </summary>
            <value>
                The operand.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Values">
            <summary>
                Gets the values.
            </summary>
            <value>
                The values.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.SubQuery">
            <summary>
                Gets the sub query.
            </summary>
            <value>
                The sub query.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
                    
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression">
            <summary>
                Represents a SQL INNER JOIN expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of InnerJoinExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory">
            <summary>
                A factory for SelectExpression instances.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)">
            <summary>
                Creates a new SelectExpression.
            </summary>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)">
            <summary>
                Creates a new SelectExpression.
            </summary>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <param name="alias"> The alias. </param>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression">
            <summary>
                Represents a SQL IS NULL expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of IsNullExpression.
            </summary>
            <param name="operand"> The operand. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.Operand">
            <summary>
                The operand.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.JoinExpressionBase">
            <summary>
                A base class for SQL JOIN expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.JoinExpressionBase.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.JoinExpressionBase.TableExpression">
            <summary>
                The target table expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.JoinExpressionBase.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression">
            <summary>
                Represents a SQL LEFT OUTER JOIN expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of LeftOuterJoinExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression">
            <summary>
                Represents a SQL LIKE expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of LikeExpression.
            </summary>
            <param name="match"> The expression to match. </param>
            <param name="pattern"> The pattern to match. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of LikeExpression.
            </summary>
            <param name="match"> The expression to match. </param>
            <param name="pattern"> The pattern to match. </param>
            <param name="escapeChar"> The escape character to use in <paramref name="pattern"/>. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Match">
            <summary>
                Gets the match expression.
            </summary>
            <value>
                The match expression.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Pattern">
            <summary>
                Gets the pattern to match.
            </summary>
            <value>
                The pattern to match.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.EscapeChar">
            <summary>
                Gets the escape character to use in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Pattern"/>.
            </summary>
            <value>
                The escape character to use. If null, no escape character is used.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression">
            <summary>
                Reducible annotation expression used to affect null expansion logic.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Creates an instance of NotNullableExpression.
            </summary>
            <param name="operand"> The operand. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression.Operand">
            <summary>
                The operand.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression.NodeType">
            <summary>
                Type of the node.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression.Type">
            <summary>
                The type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the visitor delegate on the reduced expression. The method throws an exception if the node is not
                reducible.
            </summary>
            <returns>The expression being visited, or an expression which should replace it in the tree.</returns>
            <param name="visitor">An instance of <see cref="T:System.Func`2" />.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression.CanReduce">
            <summary>
                Indicates that the node can be reduced to a simpler node. If this returns true, Reduce() can be called to produce the reduced
                form.
            </summary>
            <returns>True if the node can be reduced, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression.Reduce">
            <summary>
                Reduces this node to a simpler expression. If CanReduce returns true, this should return a valid expression. This method can
                return another node which itself must be reduced.
            </summary>
            <returns>The reduced expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullableExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression">
            <summary>
                Reducible annotation expression indicating that the following expression fragment has been compensated for null semantics.
                No additional null semantics related processing is needed for this fragment.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Creates an instance of NotNullableExpression.
            </summary>
            <param name="operand"> The operand. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression.Operand">
            <summary>
                The operand.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression.NodeType">
            <summary>
                Type of the node.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression.Type">
            <summary>
                The type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the visitor delegate on the reduced expression. The method throws an exception if the node is not
                reducible.
            </summary>
            <returns>The expression being visited, or an expression which should replace it in the tree.</returns>
            <param name="visitor">An instance of <see cref="T:System.Func`2" />.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression.CanReduce">
            <summary>
                Indicates that the node can be reduced to a simpler node. If this returns true, Reduce() can be called to produce the reduced
                form.
            </summary>
            <returns>True if the node can be reduced, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression.Reduce">
            <summary>
                Reduces this node to a simpler expression. If CanReduce returns true, this should return a valid expression. This method can
                return another node which itself must be reduced.
            </summary>
            <returns>The reduced expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NullCompensatedExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.PredicateJoinExpressionBase">
            <summary>
                A base class for SQL JOIN expressions that have predicates.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PredicateJoinExpressionBase.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PredicateJoinExpressionBase.Predicate">
            <summary>
                Gets or sets the predicate.
            </summary>
            <value>
                The predicate.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PredicateJoinExpressionBase.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression">
            <summary>
                An expression that represents accessing a property on a query parameter.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Creates a new instance of a PropertyParameterExpression.
            </summary>
            <param name="name"> The parameter name. </param>
            <param name="property"> The property to access. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Name">
            <summary>
                Gets the parameter name.
            </summary>
            <value>
                The parameter name.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Property">
            <summary>
                Gets the property.
            </summary>
            <value>
                The property.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.PropertyParameterName">
            <summary>
                Name of the property parameter when used in DbCommands.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression">
            <summary>
                Represents a SQL SELECT expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)">
            <summary>
                Creates a new instance of SelectExpression.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)">
            <summary>
                Creates a new instance of SelectExpression.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <param name="alias"> The alias. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Dependencies">
            <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" />
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Predicate">
            <summary>
                Gets or sets the predicate corresponding to the WHERE part of the SELECT expression.
            </summary>
            <value>
                The predicate.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ProjectStarTable">
            <summary>
                Gets or sets the table to be used for star projection.
            </summary>
            <value>
                The table.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Type">
            <summary>
                Type of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Tables">
            <summary>
                The tables making up the FROM part of the SELECT expression.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsProjectStar">
            <summary>
                Gets or sets a value indicating whether this expression projects a single wildcard ('*').
            </summary>
            <value>
                true if this SelectExpression is project star, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsDistinct">
            <summary>
                Gets or sets a value indicating whether this SelectExpression is DISTINCT.
            </summary>
            <value>
                true if this SelectExpression is distinct, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Limit">
            <summary>
                Gets or sets the LIMIT of this SelectExpression.
            </summary>
            <value>
                The limit.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Offset">
            <summary>
                Gets or sets the OFFSET of this SelectExpression.
            </summary>
            <value>
                The offset.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection">
            <summary>
                The projection of this SelectExpression.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.OrderBy">
            <summary>
                The SQL ORDER BY of this SelectExpression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Clone(System.String)">
            <summary>
                Makes a copy of this SelectExpression.
            </summary>
            <param name="alias"> The alias. </param>
            <returns>
                A copy of this SelectExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Clear">
            <summary>
                Clears all elements of this SelectExpression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsIdentityQuery">
            <summary>
                Determines whether this SelectExpression is an identity query. An identity query
                has a single table, and returns all of the rows from that table, unmodified.
            </summary>
            <returns>
                true if this SelectExpression is an identity query, false if not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.HandlesQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Determines whether or not this SelectExpression handles the given query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                true if the supplied query source is handled by this SelectExpression; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.GetTableForQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Gets the table corresponding to the supplied query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                The table for query source.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.PushDownSubquery">
            <summary>
                Creates a subquery based on this SelectExpression and makes that table the single entry in
                <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Tables" />. Clears all other top-level aspects of this SelectExpression.
            </summary>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.LiftOrderBy">
            <summary>
                Ensure that order by expressions from Project Star table of this select expression
                are copied on outer level to preserve ordering.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Adds a table to this SelectExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.RemoveTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Removes a table from this SelectExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ClearTables">
            <summary>
                Removes any tables added to this SelectExpression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.BindProperty(Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Generates an expression bound to this select expression for the supplied property.
            </summary>
            <param name="property"> The corresponding EF property. </param>
            <param name="querySource"> The originating query source. </param>
            <returns>
                The bound expression which can be used to refer column from this select expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToProjection(Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Adds a column to the projection.
            </summary>
            <param name="property"> The corresponding EF property. </param>
            <param name="querySource"> The originating query source. </param>
            <returns>
                The corresponding index of the added expression in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToProjection(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Adds an expression to the projection.
            </summary>
            <param name="expression"> The expression. </param>
            <param name="resetProjectStar"> true to reset the value of <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsProjectStar" />. </param>
            <returns>
                The corresponding index of the added expression in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ReplaceProjection(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Replace the projection expressions in this SelectExpression.
            </summary>
            <param name="expressions">The new projection expressions.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.GetProjectionTypes">
            <summary>
                Gets the types of the expressions in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </summary>
            <returns>
                The types of the expressions in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.SetProjectionExpression(System.Linq.Expressions.Expression)">
            <summary>
                Sets an expression as the single projected expression in this SelectExpression.
            </summary>
            <param name="expression"> The expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ClearProjection">
            <summary>
                Clears the projection.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.RemoveRangeFromProjection(System.Int32)">
            <summary>
                Removes a range from the projection.
            </summary>
            <param name="index"> Zero-based index of the start of the range to remove. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.GetProjectionIndex(Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Computes the index in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" /> corresponding to the supplied property and query source.
            </summary>
            <param name="property"> The corresponding EF property. </param>
            <param name="querySource"> The originating query source. </param>
            <returns>
                The projection index.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.BindSubqueryProjectionIndex(System.Int32,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Computes the bound expression corresponding to the supplied index and query source.
            </summary>
            <param name="projectionIndex"> The index of projected expression in subquery. </param>
            <param name="querySource"> The originating query source. </param>
            <returns>
                The projected expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ExplodeStarProjection">
            <summary>
                Transforms the projection of this SelectExpression by expanding the wildcard ('*') projection
                into individual explicit projection expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.GetProjectionForMemberInfo(System.Reflection.MemberInfo)">
            <summary>
                Gets the projection corresponding to supplied member info.
            </summary>
            <param name="memberInfo"> The corresponding member info. </param>
            <returns>
                The projection.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.SetProjectionForMemberInfo(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)">
            <summary>
                Sets the supplied expression as the projection for the supplied member info.
            </summary>
            <param name="memberInfo"> The member info. </param>
            <param name="projection"> The corresponding projection. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToPredicate(System.Linq.Expressions.Expression)">
            <summary>
                Adds a predicate expression to this SelectExpression, combining it with
                any existing predicate if necessary.
            </summary>
            <param name="predicate"> The predicate expression to add. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToOrderBy(Remotion.Linq.Clauses.Ordering)">
            <summary>
                Adds a single <see cref="T:Remotion.Linq.Clauses.Ordering" /> to the order by.
            </summary>
            <param name="ordering"> The ordering. </param>
            <returns>
                The ordering added to select expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.PrependToOrderBy(System.Collections.Generic.IEnumerable{Remotion.Linq.Clauses.Ordering})">
            <summary>
                Prepends multiple ordering expressions to the ORDER BY of this SelectExpression.
            </summary>
            <param name="orderings"> The orderings expressions. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ReplaceOrderBy(System.Collections.Generic.IEnumerable{Remotion.Linq.Clauses.Ordering})">
            <summary>
                TODO
            </summary>
            <param name="orderings"> The orderings expressions. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ClearOrderBy">
            <summary>
                Clears the ORDER BY of this SelectExpression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Adds a SQL CROSS JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
            <param name="projection"> A sequence of expressions that should be added to the projection. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddCrossJoinLateral(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Adds a SQL CROSS JOIN LATERAL to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
            <param name="projection"> A sequence of expressions that should be added to the projection. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Adds a SQL INNER JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)">
            <summary>
                Adds a SQL INNER JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
            <param name="projection"> A sequence of expressions that should be added to the projection. </param>
            <param name="innerPredicate">A predicate which should be appended to current predicate. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Adds a SQL LEFT OUTER JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Adds a SQL LEFT OUTER JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
            <param name="projection"> A sequence of expressions that should be added to the projection. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsCorrelated">
            <summary>
                Determines if this SelectExpression contains any correlated subqueries.
            </summary>
            <returns>
                true if correlated, false if not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.CreateDefaultQuerySqlGenerator">
            <summary>
                Creates the default query SQL generator.
            </summary>
            <returns>
                The new default query SQL generator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.CreateFromSqlQuerySqlGenerator(System.String,System.Linq.Expressions.Expression)">
            <summary>
                Creates the FromSql query SQL generator.
            </summary>
            <param name="sql"> The SQL. </param>
            <param name="arguments"> The arguments. </param>
            <returns>
                The new FromSql query SQL generator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ToString">
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                A string that represents this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="querySqlGeneratorFactory"> The query SQL generator factory. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionDependencies.QuerySqlGeneratorFactory">
            <summary>
                The query SQL generator factory.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionDependencies.With(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="querySqlGeneratorFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory">
            <summary>
                A SelectExpression factory.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionDependencies)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Dependencies">
            <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" />
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)">
            <summary>
                Creates a new SelectExpression.
            </summary>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)">
            <summary>
                Creates a new SelectExpression.
            </summary>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <param name="alias"> The alias of this SelectExpression. </param>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression">
            <summary>
                Represents a SQL fragment that will be directly inserted into the generated output during SQL generation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression.#ctor(System.String)">
            <summary>
                Creates a new instance of a SqlFragmentExpression.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression.Sql">
            <summary>
            The SQL fragment.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns> The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents.
                (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns> The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression.Type" /> that represents the static type of the expression. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression">
            <summary>
                Represents a SQL function call expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.#ctor(System.String,System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression" /> class.
            </summary>
            <param name="functionName"> Name of the function. </param>
            <param name="returnType"> The return type. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.#ctor(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression class.
            </summary>
            <param name="functionName"> Name of the function. </param>
            <param name="returnType"> The return type. </param>
            <param name="arguments"> The arguments. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.#ctor(System.String,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression" /> class.
            </summary>
            <param name="functionName"> Name of the function. </param>
            <param name="returnType"> The return type. </param>
            /// <param name="schema"> The schema this function exists in if any. </param>
            <param name="arguments"> The arguments. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.FunctionName">
            <summary>
                Gets the name of the function.
            </summary>
            <value>
                The name of the function.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Schema">
            <summary>
                Gets the name of the schema.
            </summary>
            <value>
                The name of the schema.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Arguments">
            <summary>
                The arguments.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression">
            <summary>
                Represents a SQL string comparison expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.#ctor(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression class.
            </summary>
            <param name="op"> The comparison operation. </param>
            <param name="left"> The left operand. </param>
            <param name="right"> The right operand. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Operator">
            <summary>
                Gets the comparison operator.
            </summary>
            <value>
                The comparison operator.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Left">
            <summary>
                Gets the left operand.
            </summary>
            <value>
                The left operand.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Right">
            <summary>
                Gets the right operand.
            </summary>
            <value>
                The right operand.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression">
            <summary>
                Represents a SQL table expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.#ctor(System.String,System.String,System.String,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression class.
            </summary>
            <param name="table"> The table name. </param>
            <param name="schema"> The schema name. </param>
            <param name="alias"> The alias. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.Table">
            <summary>
                Gets the table name.
            </summary>
            <value>
                The table name.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.Schema">
            <summary>
                Gets the schema name.
            </summary>
            <value>
                The schema name.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase">
            <summary>
                A base class for SQL table expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase class.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="alias"> The alias. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.QuerySource">
            <summary>
                Gets the query source.
            </summary>
            <value>
                The query source.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Alias">
            <summary>
                Gets the alias.
            </summary>
            <value>
                The alias.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.HandlesQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Determines whether or not this TableExpressionBase handles the given query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                true if the supplied query source is handled by this TableExpressionBase; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator">
            <summary>
                A LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="model"> The current model. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator">
            <summary>
                A LINQ expression translator for arbitrary CLR expression fragments.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
                Translates the given expression.
            </summary>
            <param name="expression"> The expression. </param>
            <returns>
                A SQL expression representing the translated expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator">
            <summary>
                A LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MemberExpression" /> expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator.Translate(System.Linq.Expressions.MemberExpression)">
            <summary>
                Translates the given member expression.
            </summary>
            <param name="memberExpression"> The member expression. </param>
            <returns>
                A SQL expression representing the translated MemberExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator">
            <summary>
                A LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EnumHasFlagTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EnumHasFlagTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EqualsTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EqualsTranslator.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EqualsTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.IsNullOrEmptyTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.IsNullOrEmptyTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.LikeTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.LikeTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StringCompareTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StringCompareTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StringConcatTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StringConcatTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.MultipleOverloadStaticMethodCallTranslator">
            <summary>
                A base LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expressions that
                have multiple overloads.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.MultipleOverloadStaticMethodCallTranslator.#ctor(System.Type,System.String,System.String)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="declaringType"> The declaring type of the method. </param>
            <param name="clrMethodName"> Name of the method. </param>
            <param name="sqlFunctionName"> The name of the target SQL function. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.MultipleOverloadStaticMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator">
            <summary>
                A base LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expressions that
                are instance methods and do not take arguments.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.#ctor(System.Type,System.String,System.String)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="declaringType"> The declaring type of the method. </param>
            <param name="clrMethodName"> Name of the method. </param>
            <param name="sqlFunctionName"> The name of the target SQL function. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslator">
            <summary>
                A composite expression fragment translator that dispatches to multiple specialized
                fragment translators.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslator.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslatorDependencies)">
            <summary>
                Initializes a new instance of the this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
                Translates the given expression.
            </summary>
            <param name="expression"> The expression to translate. </param>
            <returns>
                A SQL expression representing the translated expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslator.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator})">
            <summary>
                Adds additional translators to the dispatch list.
            </summary>
            <param name="translators"> The translators. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslatorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslatorDependencies.#ctor">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslator" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslator">
            <summary>
                A base composite member translator that dispatches to multiple specialized
                member translators.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslator.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslatorDependencies)">
            <summary>
                Initializes a new instance of the this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslator.Translate(System.Linq.Expressions.MemberExpression)">
            <summary>
                Translates the given member expression.
            </summary>
            <param name="memberExpression"> The member expression. </param>
            <returns>
                A SQL expression representing the translated MemberExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslator.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator})">
            <summary>
                Adds additional translators to the dispatch list.
            </summary>
            <param name="translators"> The translators. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslatorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslatorDependencies.#ctor">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslator" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator">
            <summary>
                A base composite method call translator that dispatches to multiple specialized
                method call translators.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslatorDependencies)">
            <summary>
                Initializes a new instance of the this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="model"> The current model. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator})">
            <summary>
                Adds additional translators to the dispatch list.
            </summary>
            <param name="translators"> The translators. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslatorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslatorDependencies.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="logger"> A logger. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslatorDependencies.Logger">
            <summary>
                The logger.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslatorDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="logger"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.SingleOverloadStaticMethodCallTranslator">
            <summary>
                A base LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expressions that
                are static and are not overloaded.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.SingleOverloadStaticMethodCallTranslator.#ctor(System.Type,System.String,System.String)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="declaringType"> The declaring type of the method. </param>
            <param name="clrMethodName"> Name of the method. </param>
            <param name="sqlFunctionName"> The name of the target SQL function. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.SingleOverloadStaticMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.#ctor(Remotion.Linq.Clauses.IQuerySource,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object},System.Collections.Generic.Dictionary{System.Type,System.Int32[]})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.Type">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.Cast``1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.WithOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedOffsetEntityShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedOffsetEntityShaper`1.#ctor(Remotion.Linq.Clauses.IQuerySource,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object},System.Collections.Generic.Dictionary{System.Type,System.Int32[]})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedOffsetEntityShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedOffsetEntityShaper`1.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.#ctor(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeShaper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeShaper.Create(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper,System.Linq.Expressions.LambdaExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeShaper.Create(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper,System.Delegate)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeShaper.TypedCompositeShaper`5.#ctor(Remotion.Linq.Clauses.IQuerySource,`0,`2,System.Func{`1,`3,`4})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ConditionalRemovingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ConditionalRemovingExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ConditionalRemovingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ConditionalRemovingExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.#ctor(Remotion.Linq.Clauses.IQuerySource,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.IsTrackingQuery">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Key">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Materializer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.AllowNullResult">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Cast``1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.AddOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EqualityPredicateExpandingVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EqualityPredicateExpandingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EqualityPredicateInExpressionOptimizer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EqualityPredicateInExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Int32},Remotion.Linq.Clauses.IQuerySource,System.Collections.Generic.Dictionary{System.Type,System.Int32[]}@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.ResultExpression">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MaterializerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MaterializerFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Int32},Remotion.Linq.Clauses.IQuerySource,System.Collections.Generic.Dictionary{System.Type,System.Int32[]}@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateReductionExpressionOptimizer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateReductionExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionShaper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionShaper.Create(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper,System.Linq.Expressions.LambdaExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpandingVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpandingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpandingVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpressionVisitorBase">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpressionVisitorBase.BuildIsNullExpression(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsOptimizedExpandingVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsOptimizedExpandingVisitor.IsOptimalExpansion">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsOptimizedExpandingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsOptimizedExpandingVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.ValueBufferOffset">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.WithOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.AddOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Unwrap(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.#ctor(Remotion.Linq.Clauses.IQuerySource,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.Type">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.Cast``1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.WithOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedOffsetEntityShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedOffsetEntityShaper`1.#ctor(Remotion.Linq.Clauses.IQuerySource,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedOffsetEntityShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedOffsetEntityShaper`1.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ValueBufferShaper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ValueBufferShaper.#ctor(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ValueBufferShaper.Type">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ValueBufferShaper.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ValueBufferShaper.WithOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory">
            <summary>
                Factory for creating instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Creates a new SqlTranslatingExpressionVisitor.
            </summary>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="targetSelectExpression"> The target select expression. </param>
            <param name="topLevelPredicate"> The top level predicate. </param>
            <param name="inProjection"> true if we are translating a projection. </param>
            <returns>
                A SqlTranslatingExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor">
            <summary>
                A visitor that performs basic relational query translation of EF query roots.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                Visit a sub-query expression.
            </summary>
            <param name="expression"> The expression. </param>
            <returns>
                An Expression corresponding to the translated sub-query.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                Visit a member expression.
            </summary>
            <param name="node"> The expression to visit. </param>
            <returns>
                An Expression corresponding to the translated member.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Visit a method call expression.
            </summary>
            <param name="node"> The expression to visit. </param>
            <returns>
                An Expression corresponding to the translated method call.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitEntityQueryable(System.Type)">
            <summary>
                Visit an entity query root.
            </summary>
            <param name="elementType"> The CLR type of the entity root. </param>
            <returns>
                An Expression corresponding to the translated entity root.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a
                    <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="model"> The model. </param>
            <param name="selectExpressionFactory"> The select expression factory. </param>
            <param name="materializerFactory"> The materializer factory. </param>
            <param name="shaperCommandContextFactory"> The shaper command context factory. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies.Model">
            <summary>
                The model.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies.SelectExpressionFactory">
            <summary>
                The select expression factory.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies.MaterializerFactory">
            <summary>
                The materializer factory.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies.ShaperCommandContextFactory">
            <summary>
                The shaper command context factory.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="model"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="selectExpressionFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="materializerFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="shaperCommandContextFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory">
            <summary>
                A factory for creating instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory.Dependencies">
            <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory" />
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new ExpressionVisitor.
            </summary>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="querySource"> The query source. </param>
            <returns>
                An ExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor">
            <summary>
                An expression visitor for translating relational LINQ query projections.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
                Visit a member init expression.
            </summary>
            <param name="memberInitExpression"> The expression to visit. </param>
            <returns>
                An Expression corresponding to the translated member init.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Visit a method call expression.
            </summary>
            <param name="methodCallExpression"> The expression to visit. </param>
            <returns>
                An Expression corresponding to the translated method call.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
                Visit a new expression.
            </summary>
            <param name="newExpression"> The expression to visit. </param>
            <returns>
                An Expression corresponding to the translated new expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                Visits the given node.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression to the translated input expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor" />.
                </para>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="sqlTranslatingExpressionVisitorFactory"> The SQL translating expression visitor factory. </param>
            <param name="entityMaterializerSource"> The entity materializer source. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorDependencies.SqlTranslatingExpressionVisitorFactory">
            <summary>
                The SQL translating expression visitor factory.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorDependencies.EntityMaterializerSource">
            <summary>
                The entity materializer source.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="sqlTranslatingExpressionVisitorFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="entityMaterializerSource"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory">
            <summary>
                A factory for creating instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory.Dependencies">
            <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory" />
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new ExpressionVisitor.
            </summary>
            <param name="entityQueryModelVisitor"> The query model visitor. </param>
            <param name="querySource"> The query source. </param>
            <returns>
                An ExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor">
            <summary>
                The default relational LINQ translating expression visitor.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="targetSelectExpression"> The target select expression. </param>
            <param name="topLevelPredicate"> The top level predicate. </param>
            <param name="inProjection"> true if the expression to be translated is a LINQ projection. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.ClientEvalPredicate">
            <summary>
                When translating a predicate expression, returns a client expression corresponding
                to the part of the target expression that should be evaluated locally.
            </summary>
            <value>
                The client eval predicate.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                Visits the given expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                Visit a binary expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                Visits a conditional expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Visits a method call expression.
            </summary>
            <param name="methodCallExpression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                Visit a member expression.
            </summary>
            <param name="memberExpression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                Visit a unary expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
                Visits a new expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                Visits a sub-query expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                Visits a constant expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
                Visits a parameter expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                Visits an extension expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)">
            <summary>
                Visits a query source reference expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})">
            <summary>
                Called when an unhandled item is visited. This method provides the item the visitor cannot handle (<paramref name="unhandledItem" />),
                the <paramref name="visitMethod" /> that is not implemented in the visitor, and a delegate that can be used to invoke the
                <paramref name="baseBehavior" /> of the <see cref="T:Remotion.Linq.Parsing.RelinqExpressionVisitor" /> class. The default behavior of
                this method is to call the
                <see cref="M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)" /> method, but it can
                be overridden to do something else.
            </summary>
            <typeparam name="TItem">
                The type of the item that could not be handled. Either an <see cref="T:System.Linq.Expressions.Expression" /> type, a
                <see cref="T:System.Linq.Expressions.MemberBinding" />
                type, or <see cref="T:System.Linq.Expressions.ElementInit" />.
            </typeparam>
            <typeparam name="TResult">The result type expected for the visited <paramref name="unhandledItem" />.</typeparam>
            <param name="unhandledItem">The unhandled item.</param>
            <param name="visitMethod">The visit method that is not implemented.</param>
            <param name="baseBehavior">The behavior exposed by <see cref="T:Remotion.Linq.Parsing.RelinqExpressionVisitor" /> for this item type.</param>
            <returns>An object to replace <paramref name="unhandledItem" /> in the expression tree. Alternatively, the method can throw any exception.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)">
            <summary>
                Creates an unhandled item exception.
            </summary>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="unhandledItem"> The unhandled item. </param>
            <param name="visitMethod"> The visit method that is not implemented. </param>
            <returns>
                The new unhandled item exception.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
                </para>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="compositeExpressionFragmentTranslator"> The composite expression fragment translator. </param>
            <param name="methodCallTranslator"> The method call translator. </param>
            <param name="memberTranslator"> The member translator. </param>
            <param name="relationalTypeMapper"> The relational type mapper. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.CompositeExpressionFragmentTranslator">
            <summary>
                The composite expression fragment translator.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.MethodCallTranslator">
            <summary>
                The method call translator.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.MemberTranslator">
            <summary>
                The member translator.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.RelationalTypeMapper">
            <summary>
                The relational type mapper.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="compositeExpressionFragmentTranslator"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="methodCallTranslator"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="memberTranslator"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="relationalTypeMapper"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorFactory">
            <summary>
                A factory for creating instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorFactory" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorFactory.Dependencies">
            <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory" />
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Creates a new SqlTranslatingExpressionVisitor.
            </summary>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="targetSelectExpression"> The target select expression. </param>
            <param name="topLevelPredicate"> The top level predicate. </param>
            <param name="inProjection"> true if we are translating a projection. </param>
            <returns>
                A SqlTranslatingExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext,Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.GetEnumerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IBufferable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IBufferable.BufferAll">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IBufferable.BufferAllAsync(System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext,Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.GetEnumerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalEvaluatableExpressionFilter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalExpressionPrinter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalExpressionPrinter.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.QuerySqlGeneratorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.ValueBufferFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.GetRelationalCommand(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.NotifyReaderCreated(System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider">
            <summary>
                Provides reflection objects for late-binding to relational query operations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinMethod">
            <summary>
                Gets the group join method.
            </summary>
            <value>
                The group join method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupByMethod">
            <summary>
                Gets the group by method.
            </summary>
            <value>
                The group by method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.ShapedQueryMethod">
            <summary>
                Gets the shaped query method.
            </summary>
            <value>
                The shaped query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.DefaultIfEmptyShapedQueryMethod">
            <summary>
                Gets the default if empty shaped query method.
            </summary>
            <value>
                The default if empty shaped query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.QueryMethod">
            <summary>
                Gets the query method.
            </summary>
            <value>
                The query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GetResultMethod">
            <summary>
                Gets the get result method.
            </summary>
            <value>
                The get result method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.InjectParametersMethod">
            <summary>
                Gets the inject parameters method.
            </summary>
            <value>
                The pre execute method.
            </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.IRelationalResultOperatorHandler">
            <summary>
                A relational-specific handler for <see cref="T:Remotion.Linq.Clauses.ResultOperatorBase" /> instances.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider">
            <summary>
                Provides reflection objects for late-binding to synchronous relational query operations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.ShapedQueryMethod">
            <summary>
                Gets the shaped query method.
            </summary>
            <value>
                The shaped query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.DefaultIfEmptyShapedQueryMethod">
            <summary>
                Gets the default if empty shaped query method.
            </summary>
            <value>
                The default if empty shaped query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.QueryMethod">
            <summary>
                Gets the query method.
            </summary>
            <value>
                The query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.GetResultMethod">
            <summary>
                Gets the get result method.
            </summary>
            <value>
                The get result method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.GroupByMethod">
            <summary>
                Gets the group by method.
            </summary>
            <value>
                The group by method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.GroupJoinMethod">
            <summary>
                Gets the group join method.
            </summary>
            <value>
                The group join method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.InjectParametersMethod">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator.#ctor(Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGeneratorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGeneratorDependencies)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
            <param name="relationalDependencies"> Parameter object containing relational dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator.RelationalDependencies">
            <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator" />
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator.GenerateCacheKey(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator.GenerateCacheKeyCore(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator.RelationalCompiledQueryCacheKey">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator.RelationalCompiledQueryCacheKey.#ctor(Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.CompiledQueryCacheKey,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator.RelationalCompiledQueryCacheKey.Equals(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator.RelationalCompiledQueryCacheKey.GetHashCode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGenerator" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="contextOptions"> Options for the current <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGeneratorDependencies.ContextOptions">
            <summary>
                Options for the current <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="contextOptions"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext">
            <summary>
                A relational query compilation context. The primary data structure representing the state/components
                used during relational query compilation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies,Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider,Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.QueryMethodProvider">
            <summary>
                Gets the query method provider.
            </summary>
            <value>
                The query method provider.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.ParentQueryReferenceParameters">
            <summary>
                Gets the list of parameter names that represent reference to a parent query.
            </summary>
            <value>
                The list of parameter names that represent reference to a parent query.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.CreateQueryModelVisitor">
            <summary>
                Creates a query model visitor.
            </summary>
            <returns>
                The new query model visitor.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.IsLateralJoinSupported">
            <summary>
                True if the current provider supports SQL LATERAL JOIN.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.MaxTableAliasLength">
            <summary>
                Max length of the table alias supported by provider.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.CreateQueryModelVisitor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                Creates query model visitor.
            </summary>
            <param name="parentEntityQueryModelVisitor"> The parent entity query model visitor. </param>
            <returns>
                The new query model visitor.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.FindSelectExpression(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Searches for a select expression corresponding to the passed query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                The select expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.CreateUniqueTableAlias">
            <summary>
                Creates a unique table alias.
            </summary>
            <returns>
                A unique table alias.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.CreateUniqueTableAlias(System.String)">
            <summary>
                Creates a unique table alias.
            </summary>
            <param name="currentAlias"> The current alias. </param>
            <returns>
                A unique table alias.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.INodeTypeProviderFactory)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="nodeTypeProviderFactory"> The node type provider factory. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextDependencies.NodeTypeProviderFactory">
            <summary>
                The node type provider factory.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextDependencies.With(Microsoft.EntityFrameworkCore.Query.Internal.INodeTypeProviderFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="nodeTypeProviderFactory">A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextFactory">
            <summary>
                A relational factory for instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextFactory.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextDependencies)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextFactory.Create(System.Boolean)">
            <summary>
                Creates a new QueryCompilationContext.
            </summary>
            <param name="async"> true if the query is asynchronous. </param>
            <returns>
                A QueryCompilationContext.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext">
            <summary>
                The principal data structure used by a compiled relational query during execution.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.#ctor(Microsoft.EntityFrameworkCore.Query.QueryContextDependencies,System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.Connection">
            <summary>
                Gets the active relational connection.
            </summary>
            <value>
                The connection.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.ExecutionStrategyFactory">
            <summary>
                The execution strategy factory.
            </summary>
            <value>
                The execution strategy factory.
            </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Query.QueryContextDependencies,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextFactory.ExecutionStrategyFactory">
            <summary>
                The execution strategy factory.
            </summary>
            <value>
                The execution strategy factory.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor">
            <summary>
                The default relational <see cref="T:Remotion.Linq.QueryModel" /> visitor.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.QueriesBySource">
            <summary>
                The SelectExpressions for this query, mapped by query source.
            </summary>
            <value>
                A map of query source to select expression.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.ContextOptions">
            <summary>
                Gets the options for the target context.
            </summary>
            <value>
                Options for the target context.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientEval">
            <summary>
                Gets or sets a value indicating whether the query requires client eval.
            </summary>
            <value>
                true if the query requires client eval, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientSelectMany">
            <summary>
                Gets or sets a value indicating whether the query requires client select many.
            </summary>
            <value>
                true if the query requires client select many, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientJoin">
            <summary>
                Gets or sets a value indicating whether the query requires client join.
            </summary>
            <value>
                true if the query requires client join, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientFilter">
            <summary>
                Gets or sets a value indicating whether the query requires client filter.
            </summary>
            <value>
                true if the query requires client filter, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientOrderBy">
            <summary>
                Gets or sets a value indicating whether the query requires client order by.
            </summary>
            <value>
                true if the query requires client order by, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientProjection">
            <summary>
                Gets or sets a value indicating whether the query requires client projection.
            </summary>
            <value>
                true if the query requires client projection, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientResultOperator">
            <summary>
                Gets or sets a value indicating whether the query requires client result operator.
            </summary>
            <value>
                true if the query requires client result operator, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.CanBindToParentQueryModel">
            <summary>
                Gets or sets a value indicating whether this query model visitor will be
                able to bind directly to properties from its parent query without requiring
                parameter injection.
            </summary>
            <value>
                true if the query model visitor can bind to its parent's properties, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.IsLiftable">
            <summary>
                Gets a value indicating whether query model visitor's resulting expression
                can be lifted into the parent query. Liftable queries contain a single SelectExpression.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.QueryCompilationContext">
            <summary>
                Context for the query compilation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.Queries">
            <summary>
                The SelectExpressions active in the current query compilation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.ParentQueryModelVisitor">
            <summary>
                Gets the parent query model visitor, or null if there is no parent.
            </summary>
            <value>
                The parent query model visitor, or null if there is no parent.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RegisterSubQueryVisitor(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor)">
            <summary>
                Registers a sub query visitor.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="queryModelVisitor"> The query model visitor. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.AddQuery(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Adds a SelectExpression to this query.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="selectExpression"> The select expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.TryGetQuery(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Try and get the active SelectExpression for a given query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                A SelectExpression, or null.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitQueryModel(Remotion.Linq.QueryModel)">
            <summary>
                Visit a query model.
            </summary>
            <param name="queryModel"> The query model. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitSubQueryModel(Remotion.Linq.QueryModel)">
            <summary>
                Visit a sub-query model.
            </summary>
            <param name="queryModel"> The sub-query model. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.CompileMainFromClauseExpression(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)">
            <summary>
                Compile main from clause expression.
            </summary>
            <param name="mainFromClause"> The main from clause. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit an additional from clause.
            </summary>
            <param name="fromClause"> The from clause being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.CompileAdditionalFromClauseExpression(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel)">
            <summary>
                Compile an additional from clause expression.
            </summary>
            <param name="additionalFromClause"> The additional from clause being compiled. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit a join clause.
            </summary>
            <param name="joinClause"> The join clause being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.CompileJoinClauseInnerSequenceExpression(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel)">
            <summary>
                Compile a join clause inner sequence expression.
            </summary>
            <param name="joinClause"> The join clause being compiled. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit a group join clause.
            </summary>
            <param name="groupJoinClause"> The group join being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.CompileGroupJoinInnerSequenceExpression(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel)">
            <summary>
                Compile a group join inner sequence expression.
            </summary>
            <param name="groupJoinClause"> The group join clause being compiled. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit a where clause.
            </summary>
            <param name="whereClause"> The where clause being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit an order by clause.
            </summary>
            <param name="orderByClause"> The order by clause. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)">
            <summary>
                Visits <see cref="T:Remotion.Linq.Clauses.SelectClause" /> nodes.
            </summary>
            <param name="selectClause"> The node being visited. </param>
            <param name="queryModel"> The query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit a result operator.
            </summary>
            <param name="resultOperator"> The result operator being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.OptimizeQueryModel(Remotion.Linq.QueryModel,System.Boolean)">
            <summary>
                Applies optimizations to the query.
            </summary>
            <param name="queryModel"> The query. </param>
            <param name="asyncQuery"> True if we are compiling an async query; otherwise false. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.WarnClientEval(Remotion.Linq.QueryModel,System.Object)">
            <summary>
                Generated a client-eval warning
            </summary>
            <param name="queryModel"> The query model </param>
            <param name="queryModelElement"> The expression being client-eval'd. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindMemberToValueBuffer(System.Linq.Expressions.MemberExpression,System.Linq.Expressions.Expression)">
            <summary>
                Bind a member expression to a value buffer access.
            </summary>
            <param name="memberExpression"> The member access expression. </param>
            <param name="expression"> The target expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindMethodCallToValueBuffer(System.Linq.Expressions.MethodCallExpression,System.Linq.Expressions.Expression)">
            <summary>
                Bind a method call expression to a value buffer access.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="expression"> The target expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindMemberExpression``1(System.Linq.Expressions.MemberExpression,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,``0},System.Boolean)">
            <summary>
                Bind a member expression.
            </summary>
            <typeparam name="TResult"> Type of the result. </typeparam>
            <param name="memberExpression"> The member access expression. </param>
            <param name="memberBinder"> The member binder. </param>
            <param name="bindSubQueries"> true to bind sub queries. </param>
            <returns>
                A TResult.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindMethodCallExpression``1(System.Linq.Expressions.MethodCallExpression,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,``0},System.Boolean)">
            <summary>
                Bind a method call expression.
            </summary>
            <typeparam name="TResult"> Type of the result. </typeparam>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="memberBinder"> The member binder. </param>
            <param name="bindSubQueries"> true to bind sub queries. </param>
            <returns>
                A TResult.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindLocalMethodCallExpression(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Bind a local method call expression.
            </summary>
            <param name="methodCallExpression"> The local method call expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.LiftInjectedParameters(Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor)">
            <summary>
                Lifts the outer parameters injected into a subquery into the query
                expression that is being built by this query model visitor, so that
                the subquery can be lifted.
            </summary>
            <param name="subQueryModelVisitor"> The query model visitor for the subquery being lifted. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.IRelationalResultOperatorHandler,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory" />.
                </para>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.RelationalResultOperatorHandler">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IRelationalResultOperatorHandler" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.SqlTranslatingExpressionVisitorFactory">
            <summary>
                Gets the SQL translating expression visitor factory.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.CompositePredicateExpressionVisitorFactory">
            <summary>
                Gets the composite predicate expression visitor factory.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.ConditionalRemovingExpressionVisitorFactory">
            <summary>
                Gets the conditional removing expression visitor factory.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.ContextOptions">
            <summary>
                Gets options for controlling the context.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.IRelationalResultOperatorHandler)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="relationalResultOperatorHandler"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="sqlTranslatingExpressionVisitorFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="compositePredicateExpressionVisitorFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="conditionalRemovingExpressionVisitorFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies.With(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="contextOptions"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory">
            <summary>
                A factory for instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorDependencies)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.RelationalDependencies">
            <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory" />
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                Creates a new EntityQueryModelVisitor.
            </summary>
            <param name="queryCompilationContext"> Compilation context for the query. </param>
            <param name="parentEntityQueryModelVisitor"> The visitor for the outer query. </param>
            <returns>
                An EntityQueryModelVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode.SupportedMethods">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.ConstantExpression,System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.#ctor(System.String,System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.QuerySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.QueryModel">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.Sql">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.Arguments">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator">
            <summary>
                The default query SQL generator.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
            <param name="selectExpression"> The select expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.IsCacheable">
            <summary>
                Gets a value indicating whether this SQL query is cacheable.
            </summary>
            <value>
                true if this SQL query is cacheable, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SelectExpression">
            <summary>
                Gets the select expression.
            </summary>
            <value>
                The select expression.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SqlGenerator">
            <summary>
                Gets the SQL generation helper.
            </summary>
            <value>
                The SQL generation helper.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ParameterValues">
            <summary>
                Gets the parameter values.
            </summary>
            <value>
                The parameter values.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Generates SQL for the given parameter values.
            </summary>
            <param name="parameterValues"> The parameter values. </param>
            <returns>
                A relational command.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)">
            <summary>
                Creates a relational value buffer factory.
            </summary>
            <param name="relationalValueBufferFactoryFactory"> The relational value buffer factory. </param>
            <param name="dataReader"> The data reader. </param>
            <returns>
                The new value buffer factory.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.Sql">
            <summary>
                The generated SQL.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedTrueLiteral">
            <summary>
                The default true literal SQL.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedFalseLiteral">
            <summary>
                The default false literal SQL.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Visit a top-level SelectExpression.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateProjection(System.Linq.Expressions.Expression)">
            <summary>
                Visit a single projection in SQL SELECT clause
            </summary>
            <param name="projection"> The projection expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GeneratePredicate(System.Linq.Expressions.Expression)">
            <summary>
                Visit the predicate in SQL WHERE clause
            </summary>
            <param name="predicate"> The predicate expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList{Remotion.Linq.Clauses.Ordering})">
            <summary>
                Generates the ORDER BY SQL.
            </summary>
            <param name="orderings"> The orderings. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrdering(Remotion.Linq.Clauses.Ordering)">
            <summary>
                Generates a single ordering in an SQL ORDER BY clause.
            </summary>
            <param name="ordering"> The ordering. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)">
            <summary>
                Visit a FromSqlExpression.
            </summary>
            <param name="fromSqlExpression"> The FromSql expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String,System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Generate SQL corresponding to a FromSql query.
            </summary>
            <param name="sql"> The FromSql SQL query. </param>
            <param name="arguments"> The arguments. </param>
            <param name="parameters"> The parameters for this query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)">
            <summary>
                Visit a TableExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)">
            <summary>
                Visit a CrossJoin expression.
            </summary>
            <param name="crossJoinExpression"> The cross join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoinLateral(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression)">
            <summary>
                Visit a CrossJoinLateralExpression expression.
            </summary>
            <param name="crossJoinLateralExpression"> The cross join lateral expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFragment(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression)">
            <summary>
                Visit a SqlFragmentExpression.
            </summary>
            <param name="sqlFragmentExpression"> The SqlFragmentExpression expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)">
            <summary>
                Visit a StringCompareExpression.
            </summary>
            <param name="stringCompareExpression"> The string compare expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)">
            <summary>
                Visit an InExpression.
            </summary>
            <param name="inExpression"> The in expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateNotIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)">
            <summary>
                Visit a negated InExpression.
            </summary>
            <param name="inExpression"> The in expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Process the InExpression values.
            </summary>
            <param name="inExpressionValues"> The in expression values. </param>
            <returns>
                A list of expressions.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})">
            <summary>
                Extracts the non null expression values from a list of expressions.
            </summary>
            <param name="inExpressionValues"> The list of expressions. </param>
            <returns>
                The extracted non null expression values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)">
            <summary>
                Visit an InnerJoinExpression.
            </summary>
            <param name="innerJoinExpression"> The inner join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)">
            <summary>
                Visit an LeftOuterJoinExpression.
            </summary>
            <param name="leftOuterJoinExpression"> The left outer join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Generates the TOP part of the SELECT statement,
            </summary>
            <param name="selectExpression"> The select expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Generates the LIMIT OFFSET part of the SELECT statement,
            </summary>
            <param name="selectExpression"> The select expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                Visit a ConditionalExpression.
            </summary>
            <param name="conditionalExpression"> The conditional expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)">
            <summary>
                Visit an ExistsExpression.
            </summary>
            <param name="existsExpression"> The exists expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                Visit a BinaryExpression.
            </summary>
            <param name="binaryExpression"> The binary expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)">
            <summary>
                Visits a ColumnExpression.
            </summary>
            <param name="columnExpression"> The column expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumnReference(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression)">
            <summary>
                Visits a ColumnReferenceExpression.
            </summary>
            <param name="columnReferenceExpression"> The column reference expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)">
            <summary>
                Visits an AliasExpression.
            </summary>
            <param name="aliasExpression"> The alias expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)">
            <summary>
                Visits an IsNullExpression.
            </summary>
            <param name="isNullExpression"> The is null expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateIsNotNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)">
            <summary>
                Visits an IsNotNullExpression.
            </summary>
            <param name="isNotNullExpression"> The is not null expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)">
            <summary>
                Visit a LikeExpression.
            </summary>
            <param name="likeExpression"> The like expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)">
            <summary>
                Visits a SqlFunctionExpression.
            </summary>
            <param name="sqlFunctionExpression"> The SQL function expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFunctionCall(System.String,System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression},System.String)">
            <summary>
                Generates a SQL function call.
            </summary>
            <param name="functionName">The function name</param>
            <param name="arguments">The function arguments</param>
            <param name="schema">The function schema</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)">
            <summary>
                Visit a SQL ExplicitCastExpression.
            </summary>
            <param name="explicitCastExpression"> The explicit cast expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                Visits a UnaryExpression.
            </summary>
            <param name="expression"> The unary expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                Visits a ConstantExpression.
            </summary>
            <param name="constantExpression"> The constant expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
                Visits a ParameterExpression.
            </summary>
            <param name="parameterExpression"> The parameter expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)">
            <summary>
                Visits a PropertyParameterExpression.
            </summary>
            <param name="propertyParameterExpression"> The property parameter expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn(System.Linq.Expressions.Expression)">
            <summary>
                Infers a type mapping from a column expression.
            </summary>
            <param name="expression"> The expression to infer a type mapping for. </param>
            <returns>
                A RelationalTypeMapping.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator(System.Linq.Expressions.ExpressionType,System.String@)">
            <summary>
                Attempts to generate binary operator for a given expression type.
            </summary>
            <param name="op"> The operation. </param>
            <param name="result"> [out] The SQL binary operator. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator(System.Linq.Expressions.ExpressionType)">
            <summary>
                Generates SQL for a given binary operation type.
            </summary>
            <param name="op"> The operation. </param>
            <returns>
                The binary operator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator(System.Linq.Expressions.Expression)">
            <summary>
                Generates an SQL operator for a given expression.
            </summary>
            <param name="expression"> The expression. </param>
            <returns>
                The operator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)">
            <summary>
                Creates unhandled item exception.
            </summary>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="unhandledItem"> The unhandled item. </param>
            <param name="visitMethod"> The visit method. </param>
            <returns>
                The new unhandled item exception.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.BooleanExpressionTranslatingVisitor.Translate(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Translates given expression to either boolean condition or value
            </summary>
            <param name="expression">The expression to translate</param>
            <param name="searchCondition">Specifies if the returned value should be boolean condition or value</param>
            <returns>The translated expression</returns>
            General flow of overriden methods
            1. Inspect expression type and set _isSearchCondition flag
            2. Visit the children
            3. Restore _isSearchCondition
            4. Update the expression
            5. Convert to value/search condition as per _isSearchConditionFlag
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator">
            <summary>
                A relational SQL generator.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Generates SQL for the given parameter values.
            </summary>
            <param name="parameterValues"> The parameter values. </param>
            <returns>
                The SQL.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.IsCacheable">
            <summary>
                Gets a value indicating whether the generated SQL is cacheable.
            </summary>
            <value>
                true if the generated SQL is cacheable, false if not.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)">
            <summary>
                Creates value buffer factory corresponding to the generated query.
            </summary>
            <param name="relationalValueBufferFactoryFactory"> The relational value buffer factory. </param>
            <param name="dataReader"> The data reader. </param>
            <returns>
                The new value buffer factory.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory">
            <summary>
                A factory for instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateDefault(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Creates the default SQL generator.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <returns>
                The new default.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression)">
            <summary>
                Creates a FromSql SQL generator.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <param name="sql"> The SQL. </param>
            <param name="arguments"> The arguments. </param>
            <returns>
                The new from SQL.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor">
            <summary>
                Expression visitor dispatch methods for extension expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)">
            <summary>
                Visit a ColumnExpression.
            </summary>
            <param name="columnExpression"> The column expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)">
            <summary>
                Visit an AliasExpression.
            </summary>
            <param name="aliasExpression"> The alias expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)">
            <summary>
                Visit an IsNullExpression.
            </summary>
            <param name="isNullExpression"> The is null expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)">
            <summary>
                Visit a LikeExpression.
            </summary>
            <param name="likeExpression"> The like expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Visit a SelectExpression.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)">
            <summary>
                Visit a TableExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)">
            <summary>
                Visit a FromSqlExpression.
            </summary>
            <param name="fromSqlExpression"> from SQL expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)">
            <summary>
                Visit a CrossJoinExpression.
            </summary>
            <param name="crossJoinExpression"> The cross join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitCrossJoinLateral(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression)">
            <summary>
                Visit a CrossJoinLateralExpression.
            </summary>
            <param name="crossJoinLateralExpression"> The cross join lateral expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)">
            <summary>
                Visit an InnerJoinExpression.
            </summary>
            <param name="innerJoinExpression"> The inner join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)">
            <summary>
                Visit a LeftOuterJoinExpression.
            </summary>
            <param name="leftOuterJoinExpression"> The left outer join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)">
            <summary>
                Visits an ExistsExpression.
            </summary>
            <param name="existsExpression"> The exists expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)">
            <summary>
                Visit an InExpression.
            </summary>
            <param name="inExpression"> The in expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)">
            <summary>
                Visit a SqlFunctionExpression.
            </summary>
            <param name="sqlFunctionExpression"> The SQL function expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)">
            <summary>
                Visit a StringCompareExpression.
            </summary>
            <param name="stringCompareExpression"> The string compare expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)">
            <summary>
                Visit an ExplicitCastExpression.
            </summary>
            <param name="explicitCastExpression"> The explicit cast expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)">
            <summary>
                Visit a PropertyParameterExpression.
            </summary>
            <param name="propertyParameterExpression"> The property parameter expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSqlFragment(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression)">
            <summary>
                Visit a SqlFragmentExpression.
            </summary>
            <param name="sqlFragmentExpression"> The SqlFragmentExpression expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitColumnReference(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression)">
            <summary>
                Visit a ColumnReferenceExpression.
            </summary>
            <param name="columnReferenceExpression"> The ColumnReferenceExpression expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
            </summary>
            <param name="commandBuilderFactory"> The command builder factory. </param>
            <param name="sqlGenerationHelper"> The SQL generation helper. </param>
            <param name="parameterNameGeneratorFactory"> The parameter name generator factory. </param>
            <param name="relationalTypeMapper"> The relational type mapper. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.CommandBuilderFactory">
            <summary>
                Gets the command builder factory.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.SqlGenerationHelper">
            <summary>
                Gets the SQL generation helper.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.ParameterNameGeneratorFactory">
            <summary>
                Gets the parameter name generator factory.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.RelationalTypeMapper">
            <summary>
                Gets the relational type mapper.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="commandBuilderFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="sqlGenerationHelper"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="parameterNameGeneratorFactory"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="relationalTypeMapper"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase">
            <summary>
                A base class for query SQL generators.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies)">
            <summary>
                Initializes a new instance of the this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.CreateDefault(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Creates a default query SQL generator.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <returns>
                The new default query SQL generator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.CreateFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression)">
            <summary>
                Creates a query SQL generator for a FromSql query.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <param name="sql"> The SQL. </param>
            <param name="arguments"> The arguments. </param>
            <returns>
                The query SQL generator.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RawSqlString">
            <summary>
                A string representing a raw SQL query. This type enables overload resolution between
                the regular and interpolated <see cref="M:Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},Microsoft.EntityFrameworkCore.RawSqlString,System.Object[])" />
                and <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.RawSqlString,System.Object[])" />
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RawSqlString.op_Implicit(System.String)~Microsoft.EntityFrameworkCore.RawSqlString">
            <summary>
                Implicitly converts a <see cref="T:System.String" /> to a <see cref="T:Microsoft.EntityFrameworkCore.RawSqlString" />
            </summary>
            <param name="s"> The string. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RawSqlString.op_Implicit(System.FormattableString)~Microsoft.EntityFrameworkCore.RawSqlString">
            <summary>
                Implicitly converts a <see cref="T:System.FormattableString" /> to a <see cref="T:Microsoft.EntityFrameworkCore.RawSqlString" />
            </summary>
            <param name="fs"> The string format. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RawSqlString.#ctor(System.String)">
            <summary>
                Constructs a <see cref="T:Microsoft.EntityFrameworkCore.RawSqlString" /> from a see <see cref="T:System.String" />
            </summary>
            <param name="s"> The string. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.RawSqlString.Format">
            <summary>
                The string format.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                <para>
                    Applies any pending migrations for the context to the database. Will create the database
                    if it does not already exist.
                </para>
                <para>
                    Note that this API is mutually exclusive with DbContext.Database.EnsureCreated(). EnsureCreated does not use migrations
                    to create the database and therefore the database that is created cannot be later updated using migrations.
                </para>
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                Gets all the migrations that are defined in the configured migrations assembly.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <returns>The list of migrations.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                Gets all migrations that have been applied to the target database.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <returns> The list of migrations. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)">
            <summary>
                Asynchronously gets all migrations that have been applied to the target database.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                Gets all migrations that are defined in the assembly but haven't been applied to the target database.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <returns> The list of migrations. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)">
            <summary>
                Asynchronously gets all migrations that are defined in the assembly but haven't been applied to the target database.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)">
            <summary>
                <para>
                    Asynchronously applies any pending migrations for the context to the database. Will create the database
                    if it does not already exist.
                </para>
                <para>
                    Note that this API is mutually exclusive with DbContext.Database.EnsureCreated(). EnsureCreated does not use migrations
                    to create the database and therefore the database that is created cannot be later updated using migrations.
                </para>
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns> A task that represents the asynchronous migration operation. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <typeparam name="TEntity"> The entity type being configured. </typeparam>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <param name="schema"> The schema of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <typeparam name="TEntity"> The entity type being configured. </typeparam>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <param name="schema"> The schema of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)">
            <summary>
                Configures the discriminator column used to identify which entity type each row in a table represents
                when an inheritance hierarchy is mapped to a single table in a relational database.
            </summary>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <returns> A builder that allows the discriminator column to be configured. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.Type)">
            <summary>
                Configures the discriminator column used to identify which entity type each row in a table represents
                when an inheritance hierarchy is mapped to a single table in a relational database.
            </summary>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the discriminator column. </param>
            <param name="discriminatorType"> The type of values stored in the discriminator column. </param>
            <returns> A builder that allows the discriminator column to be configured. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)">
            <summary>
                Configures the discriminator column used to identify which entity type each row in a table represents
                when an inheritance hierarchy is mapped to a single table in a relational database.
            </summary>
            <typeparam name="TDiscriminator"> The type of values stored in the discriminator column. </typeparam>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the discriminator column. </param>
            <returns> A builder that allows the discriminator column to be configured. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                Configures the discriminator column used to identify which entity type each row in a table represents
                when an inheritance hierarchy is mapped to a single table in a relational database.
            </summary>
            <typeparam name="TEntity"> The entity type being configured. </typeparam>
            <typeparam name="TDiscriminator"> The type of values stored in the discriminator column. </typeparam>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="propertyExpression">
                A lambda expression representing the property to be used as the discriminator (
                <c>blog => blog.Discriminator</c>).
            </param>
            <returns> A builder that allows the discriminator column to be configured. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)">
            <summary>
                Configures the name of the index in the database when targeting a relational database.
            </summary>
            <param name="indexBuilder"> The builder for the index being configured. </param>
            <param name="name"> The name of the index. </param>
            <returns> A builder to further configure the index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)">
            <summary>
            Determines whether the specified index has filter expression.
            </summary>
            <param name="indexBuilder"> The builder for the index being configured. </param>
            <param name="sql"> The filter expression for the index. </param>
            <returns>A builder to further configure the index. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder,System.String)">
            <summary>
                Configures the name of the key constraint in the database when targeting a relational database.
            </summary>
            <param name="keyBuilder"> The builder for the key being configured. </param>
            <param name="name"> The name of the key. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions">
            <summary>
                Relational database specific extension methods for metadata.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Gets the relational database specific metadata for a property.
            </summary>
            <param name="property"> The property to get metadata for. </param>
            <returns> The relational database specific metadata for the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database specific metadata for a property.
            </summary>
            <param name="property"> The property to get metadata for. </param>
            <returns> The relational database specific metadata for the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Gets the relational database specific metadata for an entity.
            </summary>
            <param name="entityType"> The entity to get metadata for. </param>
            <returns> The relational database specific metadata for the entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets the relational database specific metadata for an entity.
            </summary>
            <param name="entityType"> The entity to get metadata for. </param>
            <returns> The relational database specific metadata for the entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableKey)">
            <summary>
                Gets the relational database specific metadata for a key.
            </summary>
            <param name="key"> The key to get metadata for. </param>
            <returns> The relational database specific metadata for the key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                Gets the relational database specific metadata for a key.
            </summary>
            <param name="key"> The key to get metadata for. </param>
            <returns> The relational database specific metadata for the key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex)">
            <summary>
                Gets the relational database specific metadata for an index.
            </summary>
            <param name="index"> The index to get metadata for. </param>
            <returns> The relational database specific metadata for the index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IIndex)">
            <summary>
                Gets the relational database specific metadata for an index.
            </summary>
            <param name="index"> The index to get metadata for. </param>
            <returns> The relational database specific metadata for the index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)">
            <summary>
                Gets the relational database specific metadata for a foreign key.
            </summary>
            <param name="foreignKey"> The foreign key to get metadata for. </param>
            <returns> The relational database specific metadata for the foreign key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                Gets the relational database specific metadata for a foreign key.
            </summary>
            <param name="foreignKey"> The foreign key to get metadata for. </param>
            <returns> The relational database specific metadata for the foreign key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableModel)">
            <summary>
                Gets the relational database specific metadata for a model.
            </summary>
            <param name="model"> The model to get metadata for. </param>
            <returns> The relational database specific metadata for the model. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Gets the relational database specific metadata for a model.
            </summary>
            <param name="model"> The model to get metadata for. </param>
            <returns> The relational database specific metadata for the model. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <returns> A builder to further configure the sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.Type,System.String,System.String)">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="clrType"> The type of values the sequence will generate. </param>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <returns> A builder to further configure the sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.Type,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="clrType"> The type of values the sequence will generate. </param>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.Type,System.String,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="clrType"> The type of values the sequence will generate. </param>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <typeparam name="T"> The type of values the sequence will generate. </typeparam>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <returns> A builder to further configure the sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <typeparam name="T"> The type of values the sequence will generate. </typeparam>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <typeparam name="T"> The type of values the sequence will generate. </typeparam>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasDbFunction(Microsoft.EntityFrameworkCore.ModelBuilder,System.Reflection.MethodInfo)">
            <summary>
                Configures a database function when targeting a relational database.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="methodInfo"> The methodInfo this dbFunction uses. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasDbFunction``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
                Configures a database function when targeting a relational database.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="expression"> The method this dbFunction uses. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasDbFunction(Microsoft.EntityFrameworkCore.ModelBuilder,System.Reflection.MethodInfo,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionBuilder})">
            <summary>
                Configures a database function when targeting a relational database.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="methodInfo"> The methodInfo this dbFunction uses. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasDefaultSchema(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)">
            <summary>
                Configures the default schema that database objects should be created in, if no schema
                is explicitly configured.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="schema"> The default schema. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)">
            <summary>
                Configures the column that the property maps to when targeting a relational database.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="name"> The name of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)">
            <summary>
                Configures the column that the property maps to when targeting a relational database.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="name"> The name of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)">
            <summary>
                Configures the data type of the column that the property maps to when targeting a relational database.
                This should be the complete type name, including precision, scale, length, etc.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="typeName"> The name of the data type of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)">
            <summary>
                Configures the data type of the column that the property maps to when targeting a relational database.
                This should be the complete type name, including precision, scale, length, etc.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="typeName"> The name of the data type of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)">
            <summary>
                Configures the default value expression for the column that the property maps to when targeting a relational database.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="sql"> The SQL expression for the default value of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)">
            <summary>
                Configures the default value expression for the column that the property maps to when targeting a relational database.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="sql"> The SQL expression for the default value of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)">
            <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="sql"> The SQL expression that computes values for the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)">
            <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="sql"> The SQL expression that computes values for the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)">
            <summary>
                <para>
                    Configures the default value for the column that the property maps
                    to when targeting a relational database.
                </para>
                <para>
                    When called with no argument, this method tells EF that a column has a default
                    value constraint of some sort without needing to specify exactly what it is.
                    This can be useful when mapping EF to an existing database.
                </para>
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="value"> The default value of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)">
            <summary>
                <para>
                    Configures the default value for the column that the property maps
                    to when targeting a relational database.
                </para>
                <para>
                    When called with no argument, this method tells EF that a column has a default
                    value constraint of some sort without needing to specify exactly what it is.
                    This can be useful when mapping EF to an existing database.
                </para>
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="value"> The default value of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalQueryableExtensions">
            <summary>
                Relational database specific extension methods for LINQ queries.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},Microsoft.EntityFrameworkCore.RawSqlString,System.Object[])">
            <summary>
                <para>
                    Creates a LINQ query based on a raw SQL query.
                </para>
                <para>
                    If the database provider supports composing on the supplied SQL, you can compose on top of the raw SQL query using
                    LINQ operators - <code>context.Blogs.FromSql("SELECT * FROM dbo.Blogs").OrderBy(b => b.Name)</code>.
                </para>
                <para>
                    As with any API that accepts SQL it is important to parameterize any user input to protect against a SQL injection
                    attack. You can include parameter place holders in the SQL query string and then supply parameter values as additional
                    arguments. Any parameter values you supply will automatically be converted to a DbParameter -
                    <code>context.Blogs.FromSql("SELECT * FROM [dbo].[SearchBlogs]({0})", userSuppliedSearchTerm)</code>.
                </para>
                <para>
                    This overload also accepts DbParameter instances as parameter values. This allows you to use named 
                    parameters in the SQL query string -
                    <code>context.Blogs.FromSql("SELECT * FROM [dbo].[SearchBlogs]({@searchTerm})", new SqlParameter("@searchTerm", userSuppliedSearchTerm))</code>
                </para>
            </summary>
            <typeparam name="TEntity"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to use as the base of the raw SQL query (typically a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" />).
            </param>
            <param name="sql">
                The raw SQL query. NB. A string literal may be passed here because <see cref="T:Microsoft.EntityFrameworkCore.RawSqlString" />
                is implicitly convertible to string.
            </param>
            <param name="parameters"> The values to be assigned to parameters. </param>
            <returns> An <see cref="T:System.Linq.IQueryable`1" /> representing the raw SQL query. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},System.FormattableString)">
            <summary>
                <para>
                    Creates a LINQ query based on an interpolated string representing a SQL query.
                </para>
                <para>
                    If the database provider supports composing on the supplied SQL, you can compose on top of the raw SQL query using
                    LINQ operators - <code>context.Blogs.FromSql("SELECT * FROM dbo.Blogs").OrderBy(b => b.Name)</code>.
                </para>
                <para>
                    As with any API that accepts SQL it is important to parameterize any user input to protect against a SQL injection
                    attack. You can include interpolated parameter place holders in the SQL query string. Any interpolated parameter values
                    you supply will automatically be converted to a DbParameter -
                    <code>context.Blogs.FromSql($"SELECT * FROM [dbo].[SearchBlogs]({userSuppliedSearchTerm})")</code>.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to use as the base of the interpolated string SQL query (typically a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" />).
            </param>
            <param name="sql"> The interpolated string representing a SQL query. </param>
            <returns> An <see cref="T:System.Linq.IQueryable`1" /> representing the interpolated string SQL query. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceCollectionBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder{``0,``1},System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceCollectionBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
            <typeparam name="TEntity"> The principal entity type in this relationship. </typeparam>
            <typeparam name="TRelatedEntity"> The dependent entity type in this relationship. </typeparam>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalReferenceOwnershipBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceOwnershipBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceOwnershipBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceOwnershipBuilder,System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <param name="referenceOwnershipBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceOwnershipBuilderExtensions.ToTable``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceOwnershipBuilder{``0,``1},System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <typeparam name="TEntity"> The entity type being configured. </typeparam>
            <typeparam name="TRelatedEntity"> The entity type that this relationship targets. </typeparam>
            <param name="referenceOwnershipBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceOwnershipBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceOwnershipBuilder,System.String,System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <param name="referenceOwnershipBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <param name="schema"> The schema of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceOwnershipBuilderExtensions.ToTable``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceOwnershipBuilder{``0,``1},System.String,System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <typeparam name="TEntity"> The entity type being configured. </typeparam>
            <typeparam name="TRelatedEntity"> The entity type that this relationship targets. </typeparam>
            <param name="referenceOwnershipBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <param name="schema"> The schema of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceOwnershipBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceOwnershipBuilder,System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceReferenceBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceOwnershipBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceOwnershipBuilder{``0,``1},System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceReferenceBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
            <typeparam name="TEntity"> The entity type on one end of the relationship. </typeparam>
            <typeparam name="TRelatedEntity"> The entity type on the other end of the relationship. </typeparam>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceReferenceBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceReferenceBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
            <typeparam name="TEntity"> The entity type on one end of the relationship. </typeparam>
            <typeparam name="TRelatedEntity"> The entity type on the other end of the relationship. </typeparam>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch">
            <summary>
                A <see cref="T:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" /> for providers which append an SQL query to find out
                how many rows were affected (see <see cref="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSelectAffectedCountCommand(System.Text.StringBuilder,System.String,System.String,System.Int32)" />).
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.CurrentContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecutionStrategyFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Func{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreatePrincipalKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreatePrincipalKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreateDependentKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreateDependentKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource.GetKeyValueIndexFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,`0,System.Collections.Generic.IEqualityComparer{`0},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.WithOriginalValuesFlag">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.Equals(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.GetHashCode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.CreatePrincipalKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.CreatePrincipalKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.CreateDependentKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.CreateDependentKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactorySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactorySource.GetKeyValueIndexFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactorySource.Create(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand,Microsoft.EntityFrameworkCore.Update.ModificationCommand)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,System.Collections.Generic.IReadOnlyDictionary{Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType}},System.Collections.Generic.IReadOnlyDictionary{Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType}},System.String,System.String,System.Func{System.String},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap.GetOrAddCommand(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap.Validate(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.ModificationCommand.#ctor(System.String,System.String,System.Func{System.String},System.Boolean,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies)">
            <summary>
                Initializes a new instance of the this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)">
            <summary>
                <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator" />.
                </para>
                <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
                <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
            </summary>
            <param name="sqlGenerationHelper"> Helpers for generating update SQL. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies.SqlGenerationHelper">
            <summary>
                Helpers for generating update SQL.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)">
            <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
            <param name="sqlGenerationHelper"> A replacement for the current dependency of this type. </param>
            <returns> A new parameter object with the given service replaced. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.DiscriminatorValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.DiscriminatorValueGenerator.#ctor(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.DiscriminatorValueGenerator.NextValue(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.DiscriminatorValueGenerator.GeneratesTemporaryValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
    </members>
</doc>
